
// File: index.xml

// File: classcasadi_1_1Blocksqp.xml
%feature("docstring") casadi::Blocksqp "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1BonMinMessageHandler.xml
%feature("docstring") casadi::BonMinMessageHandler "

[INTERNAL] 
Helper class to direct messages to  uout()

IPOPT has the concept of a Journal/Journalist BONMIN and CBC do not.

";


// File: classcasadi_1_1BSplineInterpolant.xml
%feature("docstring") casadi::BSplineInterpolant "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Callback.xml
%feature("docstring") casadi::Callback "

[INTERNAL] 
 Callback function functionality.

This class provides a public API to the FunctionInternal class that 
can be 
subclassed by the user, who is then able to implement the 
different virtual
 method. Note that the  Function class also provides a public API to 
FunctionInternal, but only allows
 calling, not being called.

The user is responsible for not deleting this class for the lifetime 
of the
 internal function object.

Joris Gillis, Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_o0

C++ includes: callback.hpp
";

%feature("docstring")  casadi::Function::jit(const std::string &name, const 
std::string &body, const std::vector< std::string > &name_in, const 
std::vector< std::string > &name_out, const Dict &opts=Dict()) "

[INTERNAL] 
Create a just-in-time compiled function from a C language 
string.

The names and sparsity patterns of all the inputs and outputs must be 

provided. If sparsities are not provided, all inputs and outputs are 

assumed to be scalar. Only specify the function body, assuming that 
input 
and output nonzeros are stored in arrays with the specified 
naming 
convension. The data type used is 'casadi_real', which is 
typically equal 
to 'double or another data type with the same API as 'double.

Inputs may be null pointers. This means that the all entries are zero.
 
Outputs may be null points. This means that the corresponding result 
can be
 ignored.

If an error occurs in the evaluation, issue \"return 1;\";

The final generated function will have a structure similar to:

casadi_int fname(const casadi_real** arg, casadi_real** res, 
casadi_int* 
iw, casadi_real* w, void* mem) { const casadi_real *x1, 
*x2; casadi_real 
*r1, *r2; x1 = *arg++; x2 = *arg++; r1 = *res++; r2 =
 *res++; 
<FUNCTION_BODY> return 0; }

Extra doc: https://github.com/casadi/casadi/wiki/L_1v3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L185

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L253-L260

";

%feature("docstring")  casadi::Function::jit(const std::string &name, const 
std::string &body, const std::vector< std::string > &name_in, const 
std::vector< std::string > &name_out, const std::vector< Sparsity > 
&sparsity_in, const std::vector< Sparsity > &sparsity_out, const Dict 
&opts=Dict()) "

[INTERNAL] 
Create a just-in-time compiled function from a C language 
string.

The names and sparsity patterns of all the inputs and outputs must be 

provided. If sparsities are not provided, all inputs and outputs are 

assumed to be scalar. Only specify the function body, assuming that 
input 
and output nonzeros are stored in arrays with the specified 
naming 
convension. The data type used is 'casadi_real', which is 
typically equal 
to 'double or another data type with the same API as 'double.

Inputs may be null pointers. This means that the all entries are zero.
 
Outputs may be null points. This means that the corresponding result 
can be
 ignored.

If an error occurs in the evaluation, issue \"return 1;\";

The final generated function will have a structure similar to:

casadi_int fname(const casadi_real** arg, casadi_real** res, 
casadi_int* 
iw, casadi_real* w, void* mem) { const casadi_real *x1, 
*x2; casadi_real 
*r1, *r2; x1 = *arg++; x2 = *arg++; r1 = *res++; r2 =
 *res++; 
<FUNCTION_BODY> return 0; }

Extra doc: https://github.com/casadi/casadi/wiki/L_1v3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L262-L274

";

%feature("docstring")  casadi::Callback::has_jacobian() const "

[INTERNAL] 
Return Jacobian of all input elements with respect to all output
 
elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_oh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L175

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L92-L94

";

%feature("docstring")  casadi::Callback::get_jacobian(const std::string 
&name, const std::vector< std::string > &inames, const std::vector< 
std::string > &onames, const Dict &opts) const "

[INTERNAL] 
Return Jacobian of all input elements with respect to all output
 
elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_oh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L176

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L97-L102

";

%feature("docstring")  casadi::Callback::has_forward(casadi_int nfwd) const 
"

[INTERNAL] 
Return function that calculates forward derivatives.

forward(nfwd) returns a cached instance if available, and calls   Function 
get_forward(casadi_int nfwd) if no cached version is available.

Extra doc: https://github.com/casadi/casadi/wiki/L_oi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L190

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L112-L114

";

%feature("docstring")  casadi::Callback::get_forward(casadi_int nfwd, const 
std::string &name, const std::vector< std::string > &inames, const 
std::vector< std::string > &onames, const Dict &opts) const "

[INTERNAL] 
Return function that calculates forward derivatives.

forward(nfwd) returns a cached instance if available, and calls   Function 
get_forward(casadi_int nfwd) if no cached version is available.

Extra doc: https://github.com/casadi/casadi/wiki/L_oi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L105-L110

";

%feature("docstring")  casadi::Callback::has_reverse(casadi_int nadj) const 
"

[INTERNAL] 
Return function that calculates adjoint derivatives.

reverse(nadj) returns a cached instance if available, and calls   Function 
get_reverse(casadi_int nadj) if no cached version is available.

Extra doc: https://github.com/casadi/casadi/wiki/L_oj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L205

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L124-L126

";

%feature("docstring")  casadi::Callback::get_reverse(casadi_int nadj, const 
std::string &name, const std::vector< std::string > &inames, const 
std::vector< std::string > &onames, const Dict &opts) const "

[INTERNAL] 
Return function that calculates adjoint derivatives.

reverse(nadj) returns a cached instance if available, and calls   Function 
get_reverse(casadi_int nadj) if no cached version is available.

Extra doc: https://github.com/casadi/casadi/wiki/L_oj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L117-L122

";

%feature("docstring")  casadi::Callback::has_jac_sparsity(casadi_int oind, 
casadi_int iind) const "

[INTERNAL] 
Return sparsity of Jacobian of all input elements.

with respect to all output elements

Extra doc: https://github.com/casadi/casadi/wiki/L_ok

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L218

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L218-L218

";

%feature("docstring")  casadi::Callback::get_jac_sparsity(casadi_int oind, 
casadi_int iind, bool symmetric) const "

[INTERNAL] 
Return sparsity of Jacobian of all input elements.

with respect to all output elements

Extra doc: https://github.com/casadi/casadi/wiki/L_ok

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L219

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L219-L220

";

%feature("docstring")  casadi::Function::expand() const "

[INTERNAL] 
Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L276-L284

";

%feature("docstring") casadi::casadi_expand "

Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L276-L284

";

%feature("docstring")  casadi::Function::casadi_expand "

Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L276-L284

";

%feature("docstring")  casadi::Function::expand(const std::string &name, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L286-L302

";

%feature("docstring") casadi::casadi_expand "

Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L286-L302

";

%feature("docstring")  casadi::Function::casadi_expand "

Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L286-L302

";

%feature("docstring")  casadi::Function::size1_in(casadi_int ind) const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L239

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L795-L797

";

%feature("docstring")  casadi::Function::size1_in(const std::string &iname) 
const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L240

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L240-L240

";

%feature("docstring")  casadi::Function::size2_in(casadi_int ind) const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L241

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L799-L801

";

%feature("docstring")  casadi::Function::size2_in(const std::string &iname) 
const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L242

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L242-L242

";

%feature("docstring")  casadi::Function::size_in(casadi_int ind) const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L243

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L811-L813

";

%feature("docstring")  casadi::Function::size_in(const std::string &iname) 
const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L244

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L244-L246

";

%feature("docstring")  casadi::Function::size1_out(casadi_int ind) const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L253

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L803-L805

";

%feature("docstring")  casadi::Function::size1_out(const std::string &oname)
 const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L254

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L254-L254

";

%feature("docstring")  casadi::Function::size2_out(casadi_int ind) const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L255

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L807-L809

";

%feature("docstring")  casadi::Function::size2_out(const std::string &oname)
 const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L256

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L256-L256

";

%feature("docstring")  casadi::Function::size_out(casadi_int ind) const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L257

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L815-L817

";

%feature("docstring")  casadi::Function::size_out(const std::string &oname) 
const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L258

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L258-L260

";

%feature("docstring")  casadi::Function::nnz_in() const "

[INTERNAL] 
Get number of input nonzeros.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L269

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L819-L821

";

%feature("docstring")  casadi::Function::nnz_in(casadi_int ind) const "

[INTERNAL] 
Get number of input nonzeros.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L270

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L835-L837

";

%feature("docstring")  casadi::Function::nnz_in(const std::string &iname) 
const "

[INTERNAL] 
Get number of input nonzeros.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L271

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L271-L271

";

%feature("docstring")  casadi::Function::nnz_out() const "

[INTERNAL] 
Get number of output nonzeros.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L280

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L823-L825

";

%feature("docstring")  casadi::Function::nnz_out(casadi_int ind) const "

[INTERNAL] 
Get number of output nonzeros.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L281

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L839-L841

";

%feature("docstring")  casadi::Function::nnz_out(const std::string &oname) 
const "

[INTERNAL] 
Get number of output nonzeros.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L282

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L282-L282

";

%feature("docstring")  casadi::Function::numel_in() const "

[INTERNAL] 
Get number of input elements.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1ve

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L291

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L827-L829

";

%feature("docstring")  casadi::Function::numel_in(casadi_int ind) const "

[INTERNAL] 
Get number of input elements.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1ve

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L292

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L843-L845

";

%feature("docstring")  casadi::Function::numel_in(const std::string &iname) 
const "

[INTERNAL] 
Get number of input elements.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1ve

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L293

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L293-L293

";

%feature("docstring")  casadi::Function::numel_out() const "

[INTERNAL] 
Get number of output elements.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L302

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L831-L833

";

%feature("docstring")  casadi::Function::numel_out(casadi_int ind) const "

[INTERNAL] 
Get number of output elements.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L303

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L847-L849

";

%feature("docstring")  casadi::Function::numel_out(const std::string &oname)
 const "

[INTERNAL] 
Get number of output elements.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L304

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L304-L304

";

%feature("docstring")  casadi::Function::sparsity_in(casadi_int ind) const "

[INTERNAL] 
Get sparsity of a given input.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L372

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L959-L965

";

%feature("docstring")  casadi::Function::sparsity_in(const std::string 
&iname) const "

[INTERNAL] 
Get sparsity of a given input.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L373

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L967-L973

";

%feature("docstring")  casadi::Function::sparsity_out(casadi_int ind) const 
"

[INTERNAL] 
Get sparsity of a given output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L975-L981

";

%feature("docstring")  casadi::Function::sparsity_out(const std::string 
&iname) const "

[INTERNAL] 
Get sparsity of a given output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L381

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L983-L989

";

%feature("docstring")  casadi::Function::is_diff_in(casadi_int ind) const "

[INTERNAL] 
Get differentiability of inputs/output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L388

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L991-L997

";

%feature("docstring")  casadi::Function::is_diff_in() const "

[INTERNAL] 
Get differentiability of inputs/output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L390

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1007-L1013

";

%feature("docstring")  casadi::Function::is_diff_out(casadi_int ind) const "

[INTERNAL] 
Get differentiability of inputs/output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L389

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L999-L1005

";

%feature("docstring")  casadi::Function::is_diff_out() const "

[INTERNAL] 
Get differentiability of inputs/output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L391

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1015-L1021

";

%feature("docstring")  casadi::Function::sparsity_jac(casadi_int iind, 
casadi_int oind, bool compact=false, bool symmetric=false) const "

[DEPRECATED] Get, if necessary generate, the sparsity of a Jacobian 
block

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L475

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L875-L881

";

%feature("docstring")  casadi::Function::sparsity_jac(const std::string 
&iind, casadi_int oind=0, bool compact=false, bool symmetric=false) const "

[DEPRECATED] Get, if necessary generate, the sparsity of a Jacobian 
block

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L477

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L477-L480

";

%feature("docstring")  casadi::Function::sparsity_jac(casadi_int iind, const
 std::string &oind, bool compact=false, bool symmetric=false) const "

[DEPRECATED] Get, if necessary generate, the sparsity of a Jacobian 
block

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L481

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L481-L484

";

%feature("docstring")  casadi::Function::sparsity_jac(const std::string 
&iind, const std::string &oind, bool compact=false, bool symmetric=false) 
const "

[DEPRECATED] Get, if necessary generate, the sparsity of a Jacobian 
block

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L485

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L485-L488

";

%feature("docstring")  casadi::Function::call(const std::vector< DM > &arg, 
std::vector< DM > &res, bool always_inline=false, bool never_inline=false) 
const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L325-L332

";

%feature("docstring")  casadi::Function::call(const std::vector< SX > &arg, 
std::vector< SX > &res, bool always_inline=false, bool never_inline=false) 
const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L516

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L334-L341

";

%feature("docstring")  casadi::Function::call(const std::vector< MX > &arg, 
std::vector< MX > &res, bool always_inline=false, bool never_inline=false) 
const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L343-L350

";

%feature("docstring")  casadi::Function::call(const DMDict &arg, DMDict 
&res, bool always_inline=false, bool never_inline=false) const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L520

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1396-L1403

";

%feature("docstring")  casadi::Function::call(const SXDict &arg, SXDict 
&res, bool always_inline=false, bool never_inline=false) const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L522

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1405-L1412

";

%feature("docstring")  casadi::Function::call(const MXDict &arg, MXDict 
&res, bool always_inline=false, bool never_inline=false) const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L524

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1414-L1421

";

%feature("docstring")  casadi::Function::call_gen(std::vector< const D * > 
arg, std::vector< D * > res) const "

[INTERNAL] 
Evaluate with temporary memory allocation.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L430-L445

";

%feature("docstring")  casadi::Function::call_gen(const std::map< 
std::string, M > &arg, std::map< std::string, M > &res, bool always_inline, 
bool never_inline) const "

[INTERNAL] 
Call using a map.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1129

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1362-L1376

";

%feature("docstring")  casadi::Function::buf_in(VecArg arg) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L557

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L352-L361

";

%feature("docstring")  casadi::Function::buf_in(MapArg arg) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L564

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L386-L398

";

%feature("docstring")  casadi::Function::buf_out(VecRes res) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L559

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L363-L372

";

%feature("docstring")  casadi::Function::buf_out(VPrRes res) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L561

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L374-L384

";

%feature("docstring")  casadi::Function::buf_out(MapRes res) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L566

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L400-L412

";

%feature("docstring")  casadi::Function::buf_out(MPrRes res) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L568

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L414-L427

";

%feature("docstring")  casadi::Function::mapaccum(const std::string &name, 
casadi_int N, const Dict &opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L686

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L487-L489

";

%feature("docstring")  casadi::Function::mapaccum(const std::string &name, 
casadi_int N, casadi_int n_accum, const Dict &opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L687

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L490-L518

";

%feature("docstring")  casadi::Function::mapaccum(const std::string &name, 
casadi_int n, const std::vector< casadi_int > &accum_in, const std::vector< 
casadi_int > &accum_out, const Dict &opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L689

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L565-L593

";

%feature("docstring")  casadi::Function::mapaccum(const std::string &name, 
casadi_int n, const std::vector< std::string > &accum_in, const std::vector<
 std::string > &accum_out, const Dict &opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L693

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L595-L603

";

%feature("docstring")  casadi::Function::mapaccum(casadi_int N, const Dict 
&opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L697

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L484-L486

";

%feature("docstring")  casadi::Function::fold(casadi_int N, const Dict 
&opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L698

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L477-L483

";

%feature("docstring")  casadi::Function::map(const std::string &name, const 
std::string &parallelization, casadi_int n, const std::vector< casadi_int > 
&reduce_in, const std::vector< casadi_int > &reduce_out, const Dict 
&opts=Dict()) const "

[INTERNAL] 
Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L737

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L613-L634

";

%feature("docstring") casadi::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L737

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L613-L634

";

%feature("docstring")  casadi::Function::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L737

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L613-L634

";

%feature("docstring")  casadi::Function::map(const std::string &name, const 
std::string &parallelization, casadi_int n, const std::vector< std::string >
 &reduce_in, const std::vector< std::string > &reduce_out, const Dict 
&opts=Dict()) const "

[INTERNAL] 
Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L741

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L636-L643

";

%feature("docstring") casadi::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L741

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L636-L643

";

%feature("docstring")  casadi::Function::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L741

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L636-L643

";

%feature("docstring")  casadi::Function::map(casadi_int n, const 
std::vector< bool > &reduce_in, const std::vector< bool > 
&reduce_out=std::vector< bool >(), const Dict &opts=Dict()) const "

[INTERNAL] 
Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L605-L611

";

%feature("docstring") casadi::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L605-L611

";

%feature("docstring")  casadi::Function::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L605-L611

";

%feature("docstring")  casadi::Function::map(casadi_int n, const std::string
 &parallelization="serial") const "

[INTERNAL] 
Create a mapped version of this function.

Suppose the function has a signature of:

::

     f: (a, p) -> ( s )
  



The the mapped version has the signature:

::

     F: (A, P) -> (S )
  
      with
          A: horzcat([a0, a1, ..., a_(N-1)])
          P: horzcat([p0, p1, ..., p_(N-1)])
          S: horzcat([s0, s1, ..., s_(N-1)])
      and
          s0 <- f(a0, p0)
          s1 <- f(a1, p1)
          ...
          s_(N-1) <- f(a_(N-1), p_(N-1))
  



Parameters:
-----------

parallelization: 
Type of parallelization used: unroll|serial|openmp

Extra doc: https://github.com/casadi/casadi/wiki/L_1wj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L677-L712

";

%feature("docstring") casadi::casadi_map "

Create a mapped version of this function.

Suppose the function has a signature of:

::

     f: (a, p) -> ( s )
  



The the mapped version has the signature:

::

     F: (A, P) -> (S )
  
      with
          A: horzcat([a0, a1, ..., a_(N-1)])
          P: horzcat([p0, p1, ..., p_(N-1)])
          S: horzcat([s0, s1, ..., s_(N-1)])
      and
          s0 <- f(a0, p0)
          s1 <- f(a1, p1)
          ...
          s_(N-1) <- f(a_(N-1), p_(N-1))
  



Parameters:
-----------

parallelization: 
Type of parallelization used: unroll|serial|openmp

Extra doc: https://github.com/casadi/casadi/wiki/L_1wj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L677-L712

";

%feature("docstring")  casadi::Function::casadi_map "

Create a mapped version of this function.

Suppose the function has a signature of:

::

     f: (a, p) -> ( s )
  



The the mapped version has the signature:

::

     F: (A, P) -> (S )
  
      with
          A: horzcat([a0, a1, ..., a_(N-1)])
          P: horzcat([p0, p1, ..., p_(N-1)])
          S: horzcat([s0, s1, ..., s_(N-1)])
      and
          s0 <- f(a0, p0)
          s1 <- f(a1, p1)
          ...
          s_(N-1) <- f(a_(N-1), p_(N-1))
  



Parameters:
-----------

parallelization: 
Type of parallelization used: unroll|serial|openmp

Extra doc: https://github.com/casadi/casadi/wiki/L_1wj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L677-L712

";

%feature("docstring")  casadi::Function::map(casadi_int n, const std::string
 &parallelization, casadi_int max_num_threads) const "

[INTERNAL] ";

%feature("docstring")  casadi::Function::generate_in(const std::string 
&fname, const std::vector< DM > &arg) "

[INTERNAL] 
Export an input file that can be passed to generate C code with 
a 
main.

See: 
 generate_out

See: 
 convert_in to convert between dict/map and vector

Extra doc: https://github.com/casadi/casadi/wiki/L_1wx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L854

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1146-L1159

";

%feature("docstring")  casadi::Function::generate_in(const std::string 
&fname) "

[INTERNAL] 
Export an input file that can be passed to generate C code with 
a 
main.

See: 
 generate_out

See: 
 convert_in to convert between dict/map and vector

Extra doc: https://github.com/casadi/casadi/wiki/L_1wx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L855

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1176-L1186

";

%feature("docstring")  casadi::Function::generate_out(const std::string 
&fname, const std::vector< DM > &arg) "

[INTERNAL] 
Export an output file that can be checked with generated C code
 
output.

See: 
 generate_in

See: 
 convert_out to convert between dict/map and vector

Extra doc: https://github.com/casadi/casadi/wiki/L_1wy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L865

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1161-L1174

";

%feature("docstring")  casadi::Function::generate_out(const std::string 
&fname) "

[INTERNAL] 
Export an output file that can be checked with generated C code
 
output.

See: 
 generate_in

See: 
 convert_out to convert between dict/map and vector

Extra doc: https://github.com/casadi/casadi/wiki/L_1wy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L866

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1188-L1198

";

%feature("docstring")  casadi::Function::export_code(const std::string 
&lang, const std::string &fname, const Dict &options=Dict()) const "

[INTERNAL] 
Export function in specific language.

Only allowed for (a subset of) SX/MX Functions

Extra doc: https://github.com/casadi/casadi/wiki/L_1wz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L875

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1205-L1209

";

%feature("docstring")  casadi::Function::export_code(const std::string 
&lang, const Dict &options=Dict()) const "

[INTERNAL] 
Export function in specific language.

Only allowed for (a subset of) SX/MX Functions

Extra doc: https://github.com/casadi/casadi/wiki/L_1wz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L902

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1244-L1248

";

%feature("docstring")  casadi::Function::export_code(const std::string 
&lang, std::ostream &stream, const Dict &options=Dict()) const "

[INTERNAL] 
Export function in specific language.

Only allowed for (a subset of) SX/MX Functions

Extra doc: https://github.com/casadi/casadi/wiki/L_1wz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L904

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1200-L1203

";

%feature("docstring")  casadi::Function::serialize(std::ostream &stream, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Serialize.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L882

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1223-L1226

";

%feature("docstring")  casadi::Function::serialize(SerializingStream &s) 
const "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L887

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1228-L1235

";

%feature("docstring")  casadi::Function::serialize(const Dict &opts=Dict()) 
const "

[INTERNAL] 
Serialize.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L893

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1217-L1221

";

%feature("docstring")  casadi::Function::save(const std::string &fname, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Save  Function to a file.

See: 
 load

Extra doc: https://github.com/casadi/casadi/wiki/L_240

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L900

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1212-L1215

";

%feature("docstring")  casadi::Function::sx_in(casadi_int iind) const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L940

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1495-L1501

";

%feature("docstring")  casadi::Function::sx_in(const std::string &iname) 
const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L941

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L941-L943

";

%feature("docstring")  casadi::Function::sx_in() const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L944

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1511-L1517

";

%feature("docstring")  casadi::Function::mx_in(casadi_int ind) const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L945

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1527-L1529

";

%feature("docstring")  casadi::Function::mx_in(const std::string &iname) 
const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L946

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L946-L948

";

%feature("docstring")  casadi::Function::mx_in() const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L949

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1535-L1537

";

%feature("docstring")  casadi::Function::sx_out(casadi_int oind) const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L958

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1503-L1509

";

%feature("docstring")  casadi::Function::sx_out(const std::string &oname) 
const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L959

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L959-L961

";

%feature("docstring")  casadi::Function::sx_out() const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L962

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1519-L1525

";

%feature("docstring")  casadi::Function::mx_out(casadi_int ind) const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L963

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1531-L1533

";

%feature("docstring")  casadi::Function::mx_out(const std::string &oname) 
const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L964

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L964-L966

";

%feature("docstring")  casadi::Function::mx_out() const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L967

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1539-L1541

";

%feature("docstring")  casadi::Function::nz_from_in(const std::vector< DM > 
&arg) const "

[INTERNAL] 
Convert from/to flat vector of input/output nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L974

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1543-L1545

";

%feature("docstring")  casadi::Function::nz_from_out(const std::vector< DM >
 &arg) const "

[INTERNAL] 
Convert from/to flat vector of input/output nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L975

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1547-L1549

";

%feature("docstring")  casadi::Function::nz_to_in(const std::vector< double 
> &arg) const "

[INTERNAL] 
Convert from/to flat vector of input/output nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L976

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1551-L1553

";

%feature("docstring")  casadi::Function::nz_to_out(const std::vector< double
 > &arg) const "

[INTERNAL] 
Convert from/to flat vector of input/output nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L977

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1555-L1557

";

%feature("docstring")  casadi::Function::convert_in(const std::vector< DM > 
&arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L987

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1559-L1561

";

%feature("docstring")  casadi::Function::convert_in(const DMDict &arg) const
 "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L988

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1563-L1565

";

%feature("docstring")  casadi::Function::convert_in(const std::vector< SX > 
&arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L991

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1575-L1577

";

%feature("docstring")  casadi::Function::convert_in(const SXDict &arg) const
 "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L992

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1579-L1581

";

%feature("docstring")  casadi::Function::convert_in(const std::vector< MX > 
&arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L995

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1591-L1593

";

%feature("docstring")  casadi::Function::convert_in(const MXDict &arg) const
 "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L996

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1595-L1597

";

%feature("docstring")  casadi::Function::convert_out(const std::vector< DM >
 &arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L989

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1567-L1569

";

%feature("docstring")  casadi::Function::convert_out(const DMDict &arg) 
const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L990

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1571-L1573

";

%feature("docstring")  casadi::Function::convert_out(const std::vector< SX >
 &arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L993

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1583-L1585

";

%feature("docstring")  casadi::Function::convert_out(const SXDict &arg) 
const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L994

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1587-L1589

";

%feature("docstring")  casadi::Function::convert_out(const std::vector< MX >
 &arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L997

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1599-L1601

";

%feature("docstring")  casadi::Function::convert_out(const MXDict &arg) 
const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L998

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1603-L1605

";

%feature("docstring")  casadi::Function::has_spfwd() const "

[INTERNAL] 
Is the class able to propagate seeds through the algorithm?

Extra doc: https://github.com/casadi/casadi/wiki/L_1xl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1078

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1627-L1629

";

%feature("docstring")  casadi::Function::has_sprev() const "

[INTERNAL] 
Is the class able to propagate seeds through the algorithm?

Extra doc: https://github.com/casadi/casadi/wiki/L_1xl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1079

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1631-L1633

";

%feature("docstring") casadi::Callback::Callback() "

[INTERNAL] 
Default constructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_o2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L59

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L29-L30

";

%feature("docstring") casadi::Callback::Callback(const Callback &obj) "

[INTERNAL] 
Copy constructor (throws an error)

Extra doc: https://github.com/casadi/casadi/wiki/L_o3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L64

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L32-L34

";

%feature("docstring") casadi::Callback::~Callback "

[INTERNAL] 
Destructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_o4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L69

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L44-L51

";

%feature("docstring")  casadi::Callback::construct(const std::string &name, 
const Dict &opts=Dict()) "

[INTERNAL] 
Construct internal object.

This is the step that actually construct the internal object, as the 
class 
constructor only creates a null pointer. It should be called 
from the user 
constructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_o5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L78

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L36-L42

";

%feature("docstring")  casadi::Callback::init() "

[INTERNAL] 
Initialize the object.

This function is called after the object construction (for the whole 
class 
hierarchy) is complete, but before the finalization step. It is 
called 
recursively for the whole class hierarchy, starting with the 
lowest level.

Extra doc: https://github.com/casadi/casadi/wiki/L_o6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L88

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L88-L88

";

%feature("docstring")  casadi::Callback::finalize() "

[INTERNAL] 
Finalize the object.

This function is called after the construction and init steps are 

completed, but before user functions are called. It is called 
recursively 
for the whole class hierarchy, starting with the highest 
level.

Extra doc: https://github.com/casadi/casadi/wiki/L_o7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L98

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L98-L98

";

%feature("docstring")  casadi::Callback::eval(const std::vector< DM > &arg) 
const "

[INTERNAL] 
Evaluate numerically, using temporary matrices and work vectors.

This signature is not thread-safe. For guaranteed thread-safety, use  
eval_buffer

Extra doc: https://github.com/casadi/casadi/wiki/L_o8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L106

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L60-L62

";

%feature("docstring")  casadi::Callback::eval_buffer(const double **arg, 
const std::vector< casadi_int > &sizes_arg, double **res, const std::vector<
 casadi_int > &sizes_res) const "

[INTERNAL] 
A copy-free low level interface.

In Python, you will be passed two tuples of memoryview objects Note 
that 
only the structural nonzeros are present in the memoryview 
objects/buffers.

Make sure to override  has_eval_buffer() to indicate support for this 
method.

Extra doc: https://github.com/casadi/casadi/wiki/L_o9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L116

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L53-L56

";

%feature("docstring")  casadi::Callback::has_eval_buffer() const "

[INTERNAL] 
Does the  Callback class support a copy-free low level interface
 ?

Extra doc: https://github.com/casadi/casadi/wiki/L_265

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L122

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L57-L59

";

%feature("docstring")  casadi::Callback::get_n_in() "

[INTERNAL] 
Get the number of inputs.

This function is called during construction.

Extra doc: https://github.com/casadi/casadi/wiki/L_oa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L129

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L64-L66

";

%feature("docstring")  casadi::Callback::get_n_out() "

[INTERNAL] 
Get the number of outputs.

This function is called during construction.

Extra doc: https://github.com/casadi/casadi/wiki/L_ob

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L136

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L68-L70

";

%feature("docstring")  casadi::Callback::get_sparsity_in(casadi_int i) "

[INTERNAL] 
Get the sparsity of an input.

This function is called during construction.

Extra doc: https://github.com/casadi/casadi/wiki/L_oc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L143

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L72-L74

";

%feature("docstring")  casadi::Callback::get_sparsity_out(casadi_int i) "

[INTERNAL] 
Get the sparsity of an output.

This function is called during construction.

Extra doc: https://github.com/casadi/casadi/wiki/L_od

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L76-L78

";

%feature("docstring")  casadi::Callback::get_name_in(casadi_int i) "

[INTERNAL] 
Get the name of an input.

This function is called during construction.

Extra doc: https://github.com/casadi/casadi/wiki/L_oe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L80-L82

";

%feature("docstring")  casadi::Callback::get_name_out(casadi_int i) "

[INTERNAL] 
Get the name of an output.

This function is called during construction.

Extra doc: https://github.com/casadi/casadi/wiki/L_of

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L164

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L84-L86

";

%feature("docstring")  casadi::Callback::uses_output() const "

[INTERNAL] 
Do the derivative functions need nondifferentiated outputs?

Extra doc: https://github.com/casadi/casadi/wiki/L_og

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.hpp#L169

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/callback.cpp#L88-L90

";

%feature("docstring")  casadi::Function::n_in() const "

[INTERNAL] 
Get the number of function inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L228

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L787-L789

";

%feature("docstring")  casadi::Function::n_out() const "

[INTERNAL] 
Get the number of function outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L791-L793

";

%feature("docstring")  casadi::Function::name_in() const "

[INTERNAL] 
Get input scheme.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L310

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L919-L921

";

%feature("docstring")  casadi::Function::name_in(casadi_int ind) const "

[INTERNAL] 
Get input scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L320

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L943-L949

";

%feature("docstring")  casadi::Function::name_out() const "

[INTERNAL] 
Get output scheme.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L315

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L923-L925

";

%feature("docstring")  casadi::Function::name_out(casadi_int ind) const "

[INTERNAL] 
Get output scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L325

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L951-L957

";

%feature("docstring")  casadi::Function::index_in(const std::string &name) 
const "

[INTERNAL] 
Find the index for a string describing a particular entry of an 
input 
scheme.

example: schemeEntry(\"x_opt\") -> returns NLPSOL_X if 
FunctionInternal 
adheres to SCHEME_NLPINput

Extra doc: https://github.com/casadi/casadi/wiki/L_1vk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L333

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L927-L933

";

%feature("docstring")  casadi::Function::index_out(const std::string &name) 
const "

[INTERNAL] 
Find the index for a string describing a particular entry of an 
output
 scheme.

example: schemeEntry(\"x_opt\") -> returns NLPSOL_X if 
FunctionInternal 
adheres to SCHEME_NLPINput

Extra doc: https://github.com/casadi/casadi/wiki/L_1vl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L341

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L935-L941

";

%feature("docstring")  casadi::Function::default_in(casadi_int ind) const "

[INTERNAL] 
Get default input value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L346

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1423-L1425

";

%feature("docstring")  casadi::Function::max_in(casadi_int ind) const "

[INTERNAL] 
Get largest input value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L351

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1427-L1429

";

%feature("docstring")  casadi::Function::min_in(casadi_int ind) const "

[INTERNAL] 
Get smallest input value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L356

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1431-L1433

";

%feature("docstring")  casadi::Function::nominal_in(casadi_int ind) const "

[INTERNAL] 
Get nominal input value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L361

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1435-L1437

";

%feature("docstring")  casadi::Function::nominal_out(casadi_int ind) const "

[INTERNAL] 
Get nominal output value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L366

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1439-L1441

";

%feature("docstring")  casadi::Function::factory(const std::string &name, 
const std::vector< std::string > &s_in, const std::vector< std::string > 
&s_out, const AuxOut &aux=AuxOut(), const Dict &opts=Dict()) const "

[INTERNAL] ";

%feature("docstring")  casadi::Function::oracle() const "

[INTERNAL] 
Get oracle.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L407

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1846-L1852

";

%feature("docstring")  casadi::Function::wrap() const "

[INTERNAL] 
Wrap in an  Function instance consisting of only one  MX call.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L412

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1854-L1856

";

%feature("docstring")  casadi::Function::wrap_as_needed(const Dict &opts) 
const "

[INTERNAL] 
Wrap in a  Function with options.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L417

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1858-L1860

";

%feature("docstring")  casadi::Function::which_depends(const std::string 
&s_in, const std::vector< std::string > &s_out, casadi_int order=1, bool 
tr=false) const "

[INTERNAL] 
Which variables enter with some order.

Parameters:
-----------

order: 
Only 1 (linear) and 2 (nonlinear) allowed

tr: 
Flip the relationship. Return which expressions contain the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1vx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1764-L1771

";

%feature("docstring") casadi::casadi_which_depends "

Which variables enter with some order.

Parameters:
-----------

order: 
Only 1 (linear) and 2 (nonlinear) allowed

tr: 
Flip the relationship. Return which expressions contain the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1vx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1764-L1771

";

%feature("docstring")  casadi::Function::casadi_which_depends "

Which variables enter with some order.

Parameters:
-----------

order: 
Only 1 (linear) and 2 (nonlinear) allowed

tr: 
Flip the relationship. Return which expressions contain the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1vx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1764-L1771

";

%feature("docstring")  casadi::Function::print_dimensions(std::ostream 
&stream=casadi::uout()) const "

[INTERNAL] 
Print dimensions of inputs and outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L432

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1095-L1097

";

%feature("docstring")  casadi::Function::print_options(std::ostream 
&stream=casadi::uout()) const "

[INTERNAL] 
Print options to a stream.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L437

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1099-L1101

";

%feature("docstring")  casadi::Function::print_option(const std::string 
&name, std::ostream &stream=casadi::uout()) const "

[INTERNAL] 
Print all information there is to know about a certain option.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L442

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1103-L1105

";

%feature("docstring")  casadi::Function::has_option(const std::string 
&option_name) const "

[INTERNAL] 
Does a particular option exist.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L447

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1107-L1114

";

%feature("docstring")  casadi::Function::change_option(const std::string 
&option_name, const GenericType &option_value) "

[INTERNAL] 
Change option after object creation for debugging.

This is only possible for a selected number of options that do not 
change 
the numerical results of the computation, e.g. to enable a more
 verbose 
output or saving to file.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L455

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1116-L1126

";

%feature("docstring")  casadi::Function::jacobian_old(casadi_int iind, 
casadi_int oind) const "

[DEPRECATED] Replaced by  Function::factory.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L466

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L856-L862

";

%feature("docstring")  casadi::Function::hessian_old(casadi_int iind, 
casadi_int oind) const "

[DEPRECATED] Replaced by  Function::factory.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L471

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L864-L872

";

%feature("docstring")  casadi::Function::jacobian() const "

[INTERNAL] 
Calculate all Jacobian blocks.

Generates a function that takes all non-differentiated inputs and 
outputs 
and calculates all Jacobian blocks. Inputs that are not needed
 by the 
routine are all-zero sparse matrices with the correct 
dimensions.  Output 
blocks that are not calculated, e.g. if the corresponding input or 
output 
is marked non-differentiated are also all-zero sparse. The 
Jacobian blocks 
are sorted starting by all the blocks for the first 
output, then all the 
blocks for the second output and so on. E.g. f : 
(x, y) -> (r, s) results 
in the function jac_f : (x, y, out_r, out_s) 
-> (jac_r_x, jac_r_y, jac_s_x,
 jac_s_y)

This function is cached.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L884-L890

";

%feature("docstring") casadi::casadi_jacobian "

Calculate all Jacobian blocks.

Generates a function that takes all non-differentiated inputs and 
outputs 
and calculates all Jacobian blocks. Inputs that are not needed
 by the 
routine are all-zero sparse matrices with the correct 
dimensions.  Output 
blocks that are not calculated, e.g. if the corresponding input or 
output 
is marked non-differentiated are also all-zero sparse. The 
Jacobian blocks 
are sorted starting by all the blocks for the first 
output, then all the 
blocks for the second output and so on. E.g. f : 
(x, y) -> (r, s) results 
in the function jac_f : (x, y, out_r, out_s) 
-> (jac_r_x, jac_r_y, jac_s_x,
 jac_s_y)

This function is cached.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L884-L890

";

%feature("docstring")  casadi::Function::casadi_jacobian "

Calculate all Jacobian blocks.

Generates a function that takes all non-differentiated inputs and 
outputs 
and calculates all Jacobian blocks. Inputs that are not needed
 by the 
routine are all-zero sparse matrices with the correct 
dimensions.  Output 
blocks that are not calculated, e.g. if the corresponding input or 
output 
is marked non-differentiated are also all-zero sparse. The 
Jacobian blocks 
are sorted starting by all the blocks for the first 
output, then all the 
blocks for the second output and so on. E.g. f : 
(x, y) -> (r, s) results 
in the function jac_f : (x, y, out_r, out_s) 
-> (jac_r_x, jac_r_y, jac_s_x,
 jac_s_y)

This function is cached.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L884-L890

";

%feature("docstring")  casadi::Function::rev(bvec_t **arg, bvec_t **res, 
casadi_int *iw, bvec_t *w, int mem=0) const "

[INTERNAL] 
Propagate sparsity backward.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L628

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1044-L1050

";

%feature("docstring")  casadi::Function::rev(std::vector< bvec_t * > arg, 
std::vector< bvec_t * > res) const "

[INTERNAL] 
Propagate sparsity backward with temporary memory allocation.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L633

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L460-L475

";

%feature("docstring")  casadi::Function::mapsum(const std::vector< MX > &x, 
const std::string &parallelization="serial") const "

[INTERNAL] 
Evaluate symbolically in parallel and sum (matrix graph)

Parameters:
-----------

parallelization: 
Type of parallelization used: unroll|serial|openmp

Extra doc: https://github.com/casadi/casadi/wiki/L_1wh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L642

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L724-L731

";

%feature("docstring")  casadi::Function::slice(const std::string &name, 
const std::vector< casadi_int > &order_in, const std::vector< casadi_int > 
&order_out, const Dict &opts=Dict()) const "

[INTERNAL] 
returns a new function with a selection of inputs/outputs of the
 
original

Extra doc: https://github.com/casadi/casadi/wiki/L_1wl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L715-L722

";

%feature("docstring") casadi::casadi_slice "

returns a new function with a selection of inputs/outputs of the 
original

Extra doc: https://github.com/casadi/casadi/wiki/L_1wl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L715-L722

";

%feature("docstring")  casadi::Function::casadi_slice "

returns a new function with a selection of inputs/outputs of the 
original

Extra doc: https://github.com/casadi/casadi/wiki/L_1wl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L715-L722

";

%feature("docstring")  casadi::Function::forward(casadi_int nfwd) const "

[INTERNAL] 
Get a function that calculates  nfwd forward derivatives.



::

     Returns a function with <tt>n_in + n_out + n_in</tt> inputs
     and <tt>nfwd</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_in</tt> inputs correspond to forward seeds,
     stacked horizontally
     The  <tt>n_out</tt> outputs correspond to forward sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L800

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1079-L1085

";

%feature("docstring") casadi::casadi_forward "

Get a function that calculates  nfwd forward derivatives.



::

     Returns a function with <tt>n_in + n_out + n_in</tt> inputs
     and <tt>nfwd</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_in</tt> inputs correspond to forward seeds,
     stacked horizontally
     The  <tt>n_out</tt> outputs correspond to forward sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L800

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1079-L1085

";

%feature("docstring")  casadi::Function::casadi_forward "

Get a function that calculates  nfwd forward derivatives.



::

     Returns a function with <tt>n_in + n_out + n_in</tt> inputs
     and <tt>nfwd</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_in</tt> inputs correspond to forward seeds,
     stacked horizontally
     The  <tt>n_out</tt> outputs correspond to forward sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L800

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1079-L1085

";

%feature("docstring")  casadi::Function::reverse(casadi_int nadj) const "

[INTERNAL] 
Get a function that calculates  nadj adjoint derivatives.



::

     Returns a function with <tt>n_in + n_out + n_out</tt> inputs
     and <tt>n_in</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_out</tt> inputs correspond to adjoint seeds,
     stacked horizontally
     The  <tt>n_in</tt> outputs correspond to adjoint sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L820

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1087-L1093

";

%feature("docstring") casadi::casadi_reverse "

Get a function that calculates  nadj adjoint derivatives.



::

     Returns a function with <tt>n_in + n_out + n_out</tt> inputs
     and <tt>n_in</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_out</tt> inputs correspond to adjoint seeds,
     stacked horizontally
     The  <tt>n_in</tt> outputs correspond to adjoint sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L820

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1087-L1093

";

%feature("docstring")  casadi::Function::casadi_reverse "

Get a function that calculates  nadj adjoint derivatives.



::

     Returns a function with <tt>n_in + n_out + n_out</tt> inputs
     and <tt>n_in</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_out</tt> inputs correspond to adjoint seeds,
     stacked horizontally
     The  <tt>n_in</tt> outputs correspond to adjoint sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L820

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1087-L1093

";

%feature("docstring")  casadi::Function::jac_sparsity(bool compact=false) 
const "

[INTERNAL] 
Get, if necessary generate, the sparsity of all Jacobian blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ws

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L825

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L900-L909

";

%feature("docstring")  casadi::Function::jac_sparsity(casadi_int oind, 
casadi_int iind, bool compact=false) const "

[INTERNAL] 
Get, if necessary generate, the sparsity of a single Jacobian 
block.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L830

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L911-L917

";

%feature("docstring")  casadi::Function::generate(const std::string &fname, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Export / Generate C code for the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L835

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1136-L1140

";

%feature("docstring")  casadi::Function::generate(const Dict &opts=Dict()) 
const "

[INTERNAL] 
Export / Generate C code for the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L840

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1132-L1134

";

%feature("docstring")  casadi::Function::generate_dependencies(const 
std::string &fname, const Dict &opts=Dict()) const "

[INTERNAL] 
Export / Generate C code for the dependency function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ww

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L845

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1142-L1144

";

%feature("docstring")  casadi::Function::stats(int mem=0) const "

[INTERNAL] 
Get all statistics obtained at the end of the last evaluate 
call.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L932

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L896-L898

";

%feature("docstring")  casadi::Function::has_free() const "

[INTERNAL] 
Does the function have free variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1004

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1635-L1637

";

%feature("docstring")  casadi::Function::get_free() const "

[INTERNAL] 
Get free variables as a string.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1009

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1128-L1130

";

%feature("docstring")  casadi::Function::free_sx() const "

[INTERNAL] 
Get all the free variables of the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1014

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1611-L1617

";

%feature("docstring")  casadi::Function::free_mx() const "

[INTERNAL] 
Get all the free variables of the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1019

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1619-L1625

";

%feature("docstring")  casadi::Function::generate_lifted(Function &vdef_fcn,
 Function &vinit_fcn) const "

[INTERNAL] 
Extract the functions needed for the Lifted  Newton method.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1024

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1639-L1645

";

%feature("docstring")  casadi::Function::n_nodes() const "

[INTERNAL] 
Number of nodes in the algorithm.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1030

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1703-L1709

";

%feature("docstring")  casadi::Function::n_instructions() const "

[INTERNAL] 
Number of instruction in the algorithm (SXFunction/MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1035

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1647-L1653

";

%feature("docstring")  casadi::Function::instruction_id(casadi_int k) const 
"

[INTERNAL] 
Identifier index of the instruction (SXFunction/MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1040

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1671-L1677

";

%feature("docstring")  casadi::Function::instruction_input(casadi_int k) 
const "

[INTERNAL] 
Locations in the work vector for the inputs of the instruction.

(SXFunction/MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1047

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1679-L1685

";

%feature("docstring")  casadi::Function::instruction_constant(casadi_int k) 
const "

[INTERNAL] 
Get the floating point output argument of an instruction 
(SXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1052

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1687-L1693

";

%feature("docstring")  casadi::Function::instruction_output(casadi_int k) 
const "

[INTERNAL] 
Location in the work vector for the output of the instruction.

(SXFunction/MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1059

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1695-L1701

";

%feature("docstring")  casadi::Function::instruction_MX(casadi_int k) const 
"

[INTERNAL] 
Get the  MX node corresponding to an instruction (MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1064

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1655-L1661

";

%feature("docstring")  casadi::Function::instructions_sx() const "

[INTERNAL] 
Get the SX node corresponding to all instructions (SXFunction)

Note: input and output instructions have no SX representation. This 
method 
returns nan for those instructions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1072

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1663-L1669

";

%feature("docstring")  casadi::Function::sz_arg() const "

[INTERNAL] 
Get required length of arg field.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1085

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1027-L1027

";

%feature("docstring")  casadi::Function::sz_res() const "

[INTERNAL] 
Get required length of res field.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1090

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1029-L1029

";

%feature("docstring")  casadi::Function::sz_iw() const "

[INTERNAL] 
Get required length of iw field.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1095

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1031-L1031

";

%feature("docstring")  casadi::Function::sz_w() const "

[INTERNAL] 
Get required length of w field.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1100

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1033-L1033

";

%feature("docstring")  casadi::Function::sz_work(size_t &sz_arg, size_t 
&sz_res, size_t &sz_iw, size_t &sz_w) const "

[INTERNAL] 
Get number of temporary variables needed.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1106

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1023-L1025

";

%feature("docstring")  casadi::Function::set_work(const double **&arg, 
double **&res, casadi_int *&iw, double *&w, int mem=0) const "

[INTERNAL] 
Set the (persistent) work vectors.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1111

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1052-L1059

";

%feature("docstring")  casadi::Function::set_temp(const double **arg, double
 **res, casadi_int *iw, double *w, int mem=0) const "

[INTERNAL] 
Set the (temporary) work vectors.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1117

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1061-L1068

";

%feature("docstring")  casadi::Function::setup(const double **arg, double 
**res, casadi_int *iw, double *w, int mem=0) const "

[INTERNAL] 
Set the (persistent and temporary) work vectors.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1123

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1070-L1077

";

%feature("docstring")  casadi::Function::name() const "

[INTERNAL] 
Name of the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1137

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1250-L1257

";

%feature("docstring")  casadi::Function::is_a(const std::string &type, bool 
recursive=true) const "

[INTERNAL] 
Check if the function is of a particular type.

Optionally check if name matches one of the base classes (default 
true)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1144

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1607-L1609

";

%feature("docstring")  casadi::Function::assert_size_in(casadi_int i, 
casadi_int nrow, casadi_int ncol) const "

[INTERNAL] 
Assert that an input dimension is equal so some given value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1723-L1729

";

%feature("docstring")  casadi::Function::assert_size_out(casadi_int i, 
casadi_int nrow, casadi_int ncol) const "

[INTERNAL] 
Assert that an output dimension is equal so some given value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1192

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1731-L1736

";

%feature("docstring")  casadi::Function::assert_sparsity_out(casadi_int i, 
const Sparsity &sp, casadi_int n=1, bool allow_all_zero_sparse=true) const "

[INTERNAL] 
Assert that an output sparsity is a multiple of some given 
sparsity.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1195

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1738-L1747

";

%feature("docstring")  casadi::Function::checkout() const "

[INTERNAL] 
Checkout a memory object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1199

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1711-L1713

";

%feature("docstring")  casadi::Function::release(int mem) const "

[INTERNAL] 
Release a memory object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1202

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1715-L1717

";

%feature("docstring")  casadi::Function::memory(int ind) const "

[INTERNAL] 
Get memory object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1719-L1721

";

%feature("docstring")  casadi::Function::cache() const "

[INTERNAL] 
Get all functions in the cache.

Extra doc: https://github.com/casadi/casadi/wiki/L_26i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1212

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1773-L1780

";

%feature("docstring")  casadi::Function::get_function() const "

[INTERNAL] 
Get a list of all functions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1y3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1217

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1782-L1789

";

%feature("docstring")  casadi::Function::get_function(const std::string 
&name) const "

[INTERNAL] 
Get a dependency function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1y4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1791-L1797

";

%feature("docstring")  casadi::Function::has_function(const std::string 
&fname) const "

[INTERNAL] 
Check if a particular dependency exists.

Extra doc: https://github.com/casadi/casadi/wiki/L_1y5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1227

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1799-L1806

";

%feature("docstring")  casadi::Function::find_functions(casadi_int 
max_depth=-1) const "

[INTERNAL] 
Get all functions embedded in the expression graphs.

Parameters:
-----------

max_depth: 
Maximum depth - a negative number indicates no maximum

Extra doc: https://github.com/casadi/casadi/wiki/L_1y6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1234

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1808-L1824

";

%feature("docstring")  casadi::Function::find_function(const std::string 
&name, casadi_int max_depth=-1) const "

[INTERNAL] 
Get a specific function embedded in the expression graphs.

Parameters:
-----------

name: 
Name of function needed

max_depth: 
Maximum depth - a negative number indicates no maximum

Extra doc: https://github.com/casadi/casadi/wiki/L_1y7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1242

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1826-L1843

";

%feature("docstring")  casadi::Function::info() const "

[INTERNAL] 
Obtain information about function

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1245

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1872-L1874

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::Callback::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1casadi__limits.xml
%feature("docstring") casadi::casadi_limits "

[INTERNAL] 
 casadi_limits class

The following class, which acts as a complements to the standard 

std::numeric_limits class, allows specifying certain properties of 
scalar 
objects. The template can be specialized for e.g. symbolic 
scalars 
Joel 
Andersson

C++ includes: casadi_limits.hpp
";


// File: classcasadi_1_1casadi__limits_3_01SXElem_01_4.xml
%feature("docstring") casadi::casadi_limits< SXElem > "

[INTERNAL] C++ includes: sx_elem.hpp
";


// File: classcasadi_1_1CasadiException.xml
%feature("docstring") casadi::CasadiException "

[INTERNAL] 
Casadi exception class.



::

  \\\\author Joel Andersson
  \\\\date 2010
  Example for simple exception throwing:
  \\\\code
          throw CasadiException(\"This is a nasty error\");
  \\\\endcode
  Example for exception chaining:
  \\\\code
          try {
                  throw CasadiException(\"This is a nasty error\");
          catch(CasadiException &e) {
                  throw CasadiException(\"Serious error.\") << e;
          }
  \\\\endcode
  

Extra doc: https://github.com/casadi/casadi/wiki/L_7u

C++ includes: exception.hpp
";

%feature("docstring") casadi::CasadiException::CasadiException() "

[INTERNAL] 
Default constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L80

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L80-L81

";

%feature("docstring") casadi::CasadiException::CasadiException(const 
std::string &msg) "

[INTERNAL] 
Form message string.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L84

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L84-L84

";

%feature("docstring") casadi::CasadiException::~CasadiException "

[INTERNAL]  throw ()
Destructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L87

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L87-L87

";

%feature("docstring")  casadi::CasadiException::what() const  "

[INTERNAL]  throw ()
Display error.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L90

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L90-L92

";


// File: classcasadi_1_1CasadiHandler.xml
%feature("docstring") casadi::CasadiHandler "

[INTERNAL] ";


// File: classcasadi_1_1CasadiMeta.xml
%feature("docstring") casadi::CasadiMeta "

[INTERNAL] 
Collects global CasADi meta information.

Joris Gillis

Extra doc: https://github.com/casadi/casadi/wiki/L_23k

C++ includes: casadi_meta.hpp
";


// File: classcasadi_1_1ClangCompiler.xml
%feature("docstring") casadi::ClangCompiler "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1CodeGenerator.xml
%feature("docstring") casadi::CodeGenerator "

[INTERNAL] 
Helper class for C code generation.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_ru

C++ includes: code_generator.hpp
";

%feature("docstring") casadi::CodeGenerator::CodeGenerator(const std::string
 &name, const Dict &opts=Dict()) "

[INTERNAL] 
Constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L46

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L35-L169

";

%feature("docstring")  casadi::CodeGenerator::add(const Function &f, bool 
with_jac_sparsity=false) "

[INTERNAL] 
Add a function (name generated)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L49

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L277-L302

";

%feature("docstring")  casadi::CodeGenerator::dump(std::ostream &s) "

[INTERNAL] 
Generate the code to a stream.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L53

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L544-L650

";

%feature("docstring")  casadi::CodeGenerator::dump() "

[INTERNAL] 
Generate a file, return code as string.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L57

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L304-L308

";

%feature("docstring")  casadi::CodeGenerator::generate(const std::string 
&prefix="") "

[INTERNAL] 
Generate file(s)

The \"prefix\" argument will be prepended to the generated files and 
may be
 a directory or a file prefix. returns the filename

Extra doc: https://github.com/casadi/casadi/wiki/L_rv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L66

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L396-L441

";

%feature("docstring")  casadi::CodeGenerator::add_include(const std::string 
&new_include, bool relative_path=false, const std::string 
&use_ifdef=std::string()) "

[INTERNAL] 
Add an include file optionally using a relative path \"...\" 
instead 
of an absolute path <...>

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L69

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L731-L751

";

%feature("docstring")  casadi::CodeGenerator::add_dependency(const Function 
&f) "

[INTERNAL] 
Add a function dependency.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L74

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L196-L275

";

%feature("docstring")  casadi::CodeGenerator::add_external(const std::string
 &new_external) "

[INTERNAL] 
Add an external function declaration.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L77

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L775-L777

";

%feature("docstring")  casadi::CodeGenerator::shorthand(const std::string 
&name) const "

[INTERNAL] 
Get a shorthand.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L80

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L779-L782

";

%feature("docstring")  casadi::CodeGenerator::shorthand(const std::string 
&name, bool allow_adding=true) "

[INTERNAL] 
Add/get a shorthand.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L784-L790

";

%feature("docstring")  casadi::CodeGenerator::sparsity(const Sparsity &sp) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::add_sparsity(const Sparsity 
&sp) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::get_sparsity(const Sparsity 
&sp) const "

[INTERNAL] 
Get the index of an existing sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_rw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L94

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L800-L802

";

%feature("docstring")  casadi::CodeGenerator::get_constant(const 
std::vector< double > &v, bool allow_adding=false) "

[INTERNAL] 
Get or add a constant.

Extra doc: https://github.com/casadi/casadi/wiki/L_rx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L824-L844

";

%feature("docstring")  casadi::CodeGenerator::get_constant(const 
std::vector< casadi_int > &v, bool allow_adding=false) "

[INTERNAL] 
Get or add an integer constant.

Extra doc: https://github.com/casadi/casadi/wiki/L_ry

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L104

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L846-L867

";

%feature("docstring")  casadi::CodeGenerator::constant(const std::vector< 
casadi_int > &v) "

[INTERNAL] 
Represent an array constant; adding it when new.

Extra doc: https://github.com/casadi/casadi/wiki/L_rz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L109

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L869-L871

";

%feature("docstring")  casadi::CodeGenerator::constant(const std::vector< 
int > &v) "

[INTERNAL] 
Represent an array constant; adding it when new.

Extra doc: https://github.com/casadi/casadi/wiki/L_255

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L114

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L114-L116

";

%feature("docstring")  casadi::CodeGenerator::constant(const std::vector< 
double > &v) "

[INTERNAL] 
Represent an array constant; adding it when new.

Extra doc: https://github.com/casadi/casadi/wiki/L_s1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L129

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L889-L891

";

%feature("docstring")  casadi::CodeGenerator::constant(double v) "

[INTERNAL] 
Print a constant in a lossless but compact manner.

Extra doc: https://github.com/casadi/casadi/wiki/L_sj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L226

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1384-L1406

";

%feature("docstring")  casadi::CodeGenerator::constant(casadi_int v) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::constant(const std::string &v)
 "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::constant_copy(const 
std::string &var_name, const std::vector< casadi_int > &v, const std::string
 &type="casadi_int") "

[INTERNAL] 
Represent an array constant; adding it when new.

Extra doc: https://github.com/casadi/casadi/wiki/L_s0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L121

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L873-L887

";

%feature("docstring")  casadi::CodeGenerator::define_rom_double(const void 
*id, casadi_int size) "

[INTERNAL] 
Allocate file scope double read-only memory.

Extra doc: https://github.com/casadi/casadi/wiki/L_s2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L134

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L516-L521

";

%feature("docstring")  casadi::CodeGenerator::rom_double(const void *id) 
const "

[INTERNAL] 
Access file scope double read-only memory.

Extra doc: https://github.com/casadi/casadi/wiki/L_s3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L139

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L523-L528

";

%feature("docstring")  casadi::CodeGenerator::define_rom_integer(const void 
*id, casadi_int size) "

[INTERNAL] 
Allocate file scope integer read-only memory.

Extra doc: https://github.com/casadi/casadi/wiki/L_s4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L144

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L530-L535

";

%feature("docstring")  casadi::CodeGenerator::rom_integer(const void *id) 
const "

[INTERNAL] 
Access file scope integer read-only memory.

Extra doc: https://github.com/casadi/casadi/wiki/L_s5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L149

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L537-L542

";

%feature("docstring")  casadi::CodeGenerator::print_formatted(const 
std::string &s) "

[INTERNAL] 
Print without newline characters.

Extra doc: https://github.com/casadi/casadi/wiki/L_s8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L166

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1729-L1753

";

%feature("docstring")  casadi::CodeGenerator::flush(std::ostream &s) "

[INTERNAL] 
Flush the buffer to a stream of choice.

Extra doc: https://github.com/casadi/casadi/wiki/L_sa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L181

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1776-L1779

";

%feature("docstring")  casadi::CodeGenerator::local(const std::string &name,
 const std::string &type, const std::string &ref="") "

[INTERNAL] 
Declare a local variable.

Extra doc: https://github.com/casadi/casadi/wiki/L_sb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L186

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1781-L1793

";

%feature("docstring")  casadi::CodeGenerator::scope_enter() "

[INTERNAL] 
Enter a local scope.

Extra doc: https://github.com/casadi/casadi/wiki/L_sc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L171-L174

";

%feature("docstring")  casadi::CodeGenerator::scope_exit() "

[INTERNAL] 
Exit a local scope.

Extra doc: https://github.com/casadi/casadi/wiki/L_sd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L196

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L176-L194

";

%feature("docstring")  casadi::CodeGenerator::sx_work(casadi_int i) "

[INTERNAL] 
Declare a work vector element.

Extra doc: https://github.com/casadi/casadi/wiki/L_se

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L201

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1795-L1806

";

%feature("docstring")  casadi::CodeGenerator::init_local(const std::string 
&name, const std::string &def) "

[INTERNAL] 
Specify the default value for a local variable.

Extra doc: https://github.com/casadi/casadi/wiki/L_sf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1808-L1811

";

%feature("docstring")  casadi::CodeGenerator::indent() "

[INTERNAL] 
Increase indentation.

Extra doc: https://github.com/casadi/casadi/wiki/L_sg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L211

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L211-L211

";

%feature("docstring")  casadi::CodeGenerator::unindent() "

[INTERNAL] 
Decrease indentation.

Extra doc: https://github.com/casadi/casadi/wiki/L_sh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L216

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L216-L216

";

%feature("docstring")  casadi::CodeGenerator::avoid_stack() "

[INTERNAL] 
Avoid stack?

Extra doc: https://github.com/casadi/casadi/wiki/L_si

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L221

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L221-L221

";

%feature("docstring")  casadi::CodeGenerator::initializer(const std::vector<
 double > &v) "

[INTERNAL] 
Print an intializer.

Extra doc: https://github.com/casadi/casadi/wiki/L_sk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1408-L1417

";

%feature("docstring")  casadi::CodeGenerator::initializer(const std::vector<
 casadi_int > &v) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::sanitize_source(const 
std::string &src, const std::vector< std::string > &inst, bool 
add_shorthand=true) "

[INTERNAL] 
Sanitize source files for codegen.

Extra doc: https://github.com/casadi/casadi/wiki/L_sl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L239

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1814-L1905

";

%feature("docstring")  casadi::CodeGenerator::dot(casadi_int n, const 
std::string &x, const std::string &y) "

[INTERNAL] 
Codegen inner product.

Extra doc: https://github.com/casadi/casadi/wiki/L_sm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L246

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1491-L1497

";

%feature("docstring") casadi::casadi_dot "

Codegen inner product.

Extra doc: https://github.com/casadi/casadi/wiki/L_sm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L246

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1491-L1497

";

%feature("docstring")  casadi::CodeGenerator::casadi_dot "

Codegen inner product.

Extra doc: https://github.com/casadi/casadi/wiki/L_sm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L246

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1491-L1497

";

%feature("docstring")  casadi::CodeGenerator::mv(const std::string &x, const
 Sparsity &sp_x, const std::string &y, const std::string &z, bool tr) "

[INTERNAL] 
Codegen sparse matrix-vector multiplication.

Extra doc: https://github.com/casadi/casadi/wiki/L_sn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L251

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1684-L1689

";

%feature("docstring")  casadi::CodeGenerator::mv(const std::string &x, 
casadi_int nrow_x, casadi_int ncol_x, const std::string &y, const 
std::string &z, bool tr) "

[INTERNAL] 
Codegen dense matrix-vector multiplication.

Extra doc: https://github.com/casadi/casadi/wiki/L_so

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L257

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1691-L1696

";

%feature("docstring")  casadi::CodeGenerator::axpy(casadi_int n, const 
std::string &a, const std::string &x, const std::string &y) "

[INTERNAL] 
Codegen axpy: y += a*x.

Extra doc: https://github.com/casadi/casadi/wiki/L_sp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L263

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1643-L1647

";

%feature("docstring")  casadi::CodeGenerator::clip_min(const std::string &x,
 casadi_int n, const std::string &min, const std::string &mask) "

[INTERNAL] 
Codegen clip_min: Clips the smaller entries in a vector than min
 to 
the min.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L271

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1649-L1653

";

%feature("docstring")  casadi::CodeGenerator::clip_max(const std::string &x,
 casadi_int n, const std::string &min, const std::string &mask) "

[INTERNAL] 
Codegen clip_max: Clips the larger entries in a vector than max 
to the
 max.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L279

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1655-L1659

";

%feature("docstring")  casadi::CodeGenerator::vector_fmax(casadi_int n, 
const std::string &x, const std::string &y, const std::string &z) "

[INTERNAL] 
Codegen vector_fmax: Takes vectorwise max of a vector and writes
 the 
result to second vector.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L286

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1661-L1665

";

%feature("docstring")  casadi::CodeGenerator::vector_fmin(casadi_int n, 
const std::string &x, const std::string &y, const std::string &z) "

[INTERNAL] 
Codegen vector_fmin: Takes vectorwise min of a vector and writes
 the 
result to second vector.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L293

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1667-L1671

";

%feature("docstring")  casadi::CodeGenerator::masked_norm_inf(casadi_int n, 
const std::string &x, const std::string &mask) "

[INTERNAL] 
codegen masked_norm_inf: The mask tells what entry is used in 
the inf-
norm.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L300

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1673-L1677

";

%feature("docstring")  casadi::CodeGenerator::scal(casadi_int n, const 
std::string &alpha, const std::string &x) "

[INTERNAL] 
What does scal do??

Extra doc: https://github.com/casadi/casadi/wiki/L_sq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L307

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1679-L1682

";

%feature("docstring")  casadi::CodeGenerator::mtimes(const std::string &x, 
const Sparsity &sp_x, const std::string &y, const Sparsity &sp_y, const 
std::string &z, const Sparsity &sp_z, const std::string &w, bool tr) "

[INTERNAL] 
Codegen sparse matrix-matrix multiplication.

Extra doc: https://github.com/casadi/casadi/wiki/L_sr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L312

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1698-L1705

";

%feature("docstring") casadi::casadi_mtimes "

Codegen sparse matrix-matrix multiplication.

Extra doc: https://github.com/casadi/casadi/wiki/L_sr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L312

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1698-L1705

";

%feature("docstring")  casadi::CodeGenerator::casadi_mtimes "

Codegen sparse matrix-matrix multiplication.

Extra doc: https://github.com/casadi/casadi/wiki/L_sr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L312

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1698-L1705

";

%feature("docstring")  casadi::CodeGenerator::trilsolve(const Sparsity 
&sp_x, const std::string &x, const std::string &y, bool tr, bool unity, 
casadi_int nrhs) "

[INTERNAL] 
Codegen lower triangular solve.

Extra doc: https://github.com/casadi/casadi/wiki/L_ss

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L320

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1707-L1712

";

%feature("docstring")  casadi::CodeGenerator::triusolve(const Sparsity 
&sp_x, const std::string &x, const std::string &y, bool tr, bool unity, 
casadi_int nrhs) "

[INTERNAL] 
Codegen upper triangular solve.

Extra doc: https://github.com/casadi/casadi/wiki/L_st

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1714-L1719

";

%feature("docstring")  casadi::CodeGenerator::bilin(const std::string &A, 
const Sparsity &sp_A, const std::string &x, const std::string &y) "

[INTERNAL] 
Codegen bilinear form.

Extra doc: https://github.com/casadi/casadi/wiki/L_su

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L332

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1499-L1505

";

%feature("docstring") casadi::casadi_bilin "

Codegen bilinear form.

Extra doc: https://github.com/casadi/casadi/wiki/L_su

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L332

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1499-L1505

";

%feature("docstring")  casadi::CodeGenerator::casadi_bilin "

Codegen bilinear form.

Extra doc: https://github.com/casadi/casadi/wiki/L_su

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L332

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1499-L1505

";

%feature("docstring")  casadi::CodeGenerator::rank1(const std::string &A, 
const Sparsity &sp_A, const std::string &alpha, const std::string &x, const 
std::string &y) "

[INTERNAL] 
Rank-1 update.

Extra doc: https://github.com/casadi/casadi/wiki/L_sv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1507-L1515

";

%feature("docstring") casadi::casadi_rank1 "

Rank-1 update.

Extra doc: https://github.com/casadi/casadi/wiki/L_sv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1507-L1515

";

%feature("docstring")  casadi::CodeGenerator::casadi_rank1 "

Rank-1 update.

Extra doc: https://github.com/casadi/casadi/wiki/L_sv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1507-L1515

";

%feature("docstring")  casadi::CodeGenerator::logsumexp(const std::string 
&A, casadi_int n) "

[INTERNAL] 
\\\\brie LogSumExp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L342

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1722-L1727

";

%feature("docstring") casadi::casadi_logsumexp "

\\\\brie LogSumExp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L342

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1722-L1727

";

%feature("docstring")  casadi::CodeGenerator::casadi_logsumexp "

\\\\brie LogSumExp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L342

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1722-L1727

";

%feature("docstring")  casadi::CodeGenerator::interpn(const std::string 
&res, casadi_int ndim, const std::string &grid, const std::string &offset, 
const std::string &values, const std::string &x, const std::string 
&lookup_mode, casadi_int m, const std::string &iw, const std::string &w) "

[INTERNAL] 
Multilinear interpolation.

Extra doc: https://github.com/casadi/casadi/wiki/L_sw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L347

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1517-L1528

";

%feature("docstring")  casadi::CodeGenerator::interpn_grad(const std::string
 &grad, casadi_int ndim, const std::string &grid, const std::string &offset,
 const std::string &values, const std::string &x, const std::string 
&lookup_mode, casadi_int m, const std::string &iw, const std::string &w) "

[INTERNAL] 
Multilinear interpolation - calculate gradient.

Extra doc: https://github.com/casadi/casadi/wiki/L_sx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L356

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1530-L1540

";

%feature("docstring")  casadi::CodeGenerator::trans(const std::string &x, 
const Sparsity &sp_x, const std::string &y, const Sparsity &sp_y, const 
std::string &iw) "

[INTERNAL] 
Transpose.

Extra doc: https://github.com/casadi/casadi/wiki/L_sy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L366

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1542-L1548

";

%feature("docstring")  casadi::CodeGenerator::qr(const std::string &sp, 
const std::string &A, const std::string &w, const std::string &sp_v, const 
std::string &v, const std::string &sp_r, const std::string &r, const 
std::string &beta, const std::string &prinv, const std::string &pc) "

[INTERNAL] 
QR factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_sz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L372

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1940-L1948

";

%feature("docstring") casadi::casadi_qr "

QR factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_sz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L372

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1940-L1948

";

%feature("docstring")  casadi::CodeGenerator::casadi_qr "

QR factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_sz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L372

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1940-L1948

";

%feature("docstring")  casadi::CodeGenerator::qr_solve(const std::string &x,
 casadi_int nrhs, bool tr, const std::string &sp_v, const std::string &v, 
const std::string &sp_r, const std::string &r, const std::string &beta, 
const std::string &prinv, const std::string &pc, const std::string &w) "

[INTERNAL] 
QR solve.

Extra doc: https://github.com/casadi/casadi/wiki/L_t0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L381

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1951-L1960

";

%feature("docstring") casadi::casadi_qr_solve "

QR solve.

Extra doc: https://github.com/casadi/casadi/wiki/L_t0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L381

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1951-L1960

";

%feature("docstring")  casadi::CodeGenerator::casadi_qr_solve "

QR solve.

Extra doc: https://github.com/casadi/casadi/wiki/L_t0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L381

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1951-L1960

";

%feature("docstring")  casadi::CodeGenerator::lsqr_solve(const std::string 
&A, const std::string &x, casadi_int nrhs, bool tr, const std::string &sp, 
const std::string &w) "

[INTERNAL] 
\\\\brief LSQR solve

Extra doc: https://github.com/casadi/casadi/wiki/L_t1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L390

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1963-L1968

";

%feature("docstring")  casadi::CodeGenerator::ldl(const std::string &sp_a, 
const std::string &a, const std::string &sp_lt, const std::string &lt, const
 std::string &d, const std::string &p, const std::string &w) "

[INTERNAL] 
LDL factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_t2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L396

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1971-L1977

";

%feature("docstring") casadi::casadi_ldl "

LDL factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_t2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L396

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1971-L1977

";

%feature("docstring")  casadi::CodeGenerator::casadi_ldl "

LDL factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_t2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L396

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1971-L1977

";

%feature("docstring")  casadi::CodeGenerator::ldl_solve(const std::string 
&x, casadi_int nrhs, const std::string &sp_lt, const std::string &lt, const 
std::string &d, const std::string &p, const std::string &w) "

[INTERNAL] 
LDL solve.

Extra doc: https://github.com/casadi/casadi/wiki/L_t3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L404

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1980-L1986

";

%feature("docstring") casadi::casadi_ldl_solve "

LDL solve.

Extra doc: https://github.com/casadi/casadi/wiki/L_t3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L404

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1980-L1986

";

%feature("docstring")  casadi::CodeGenerator::casadi_ldl_solve "

LDL solve.

Extra doc: https://github.com/casadi/casadi/wiki/L_t3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L404

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1980-L1986

";

%feature("docstring")  casadi::CodeGenerator::fmax(const std::string &x, 
const std::string &y) "

[INTERNAL] 
fmax

Extra doc: https://github.com/casadi/casadi/wiki/L_t4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L412

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1989-L1992

";

%feature("docstring") casadi::casadi_fmax "

fmax

Extra doc: https://github.com/casadi/casadi/wiki/L_t4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L412

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1989-L1992

";

%feature("docstring")  casadi::CodeGenerator::casadi_fmax "

fmax

Extra doc: https://github.com/casadi/casadi/wiki/L_t4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L412

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1989-L1992

";

%feature("docstring")  casadi::CodeGenerator::fmin(const std::string &x, 
const std::string &y) "

[INTERNAL] 
fmin

Extra doc: https://github.com/casadi/casadi/wiki/L_t5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L417

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1995-L1998

";

%feature("docstring") casadi::casadi_fmin "

fmin

Extra doc: https://github.com/casadi/casadi/wiki/L_t5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L417

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1995-L1998

";

%feature("docstring")  casadi::CodeGenerator::casadi_fmin "

fmin

Extra doc: https://github.com/casadi/casadi/wiki/L_t5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L417

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1995-L1998

";

%feature("docstring")  casadi::CodeGenerator::mmax(const std::string &x, 
casadi_int n, bool is_dense) "

[INTERNAL] 
mmax

Extra doc: https://github.com/casadi/casadi/wiki/L_t6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2037-L2040

";

%feature("docstring") casadi::casadi_mmax "

mmax

Extra doc: https://github.com/casadi/casadi/wiki/L_t6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2037-L2040

";

%feature("docstring")  casadi::CodeGenerator::casadi_mmax "

mmax

Extra doc: https://github.com/casadi/casadi/wiki/L_t6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2037-L2040

";

%feature("docstring")  casadi::CodeGenerator::mmin(const std::string &x, 
casadi_int n, bool is_dense) "

[INTERNAL] 
mmin

Extra doc: https://github.com/casadi/casadi/wiki/L_t7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L427

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2043-L2046

";

%feature("docstring") casadi::casadi_mmin "

mmin

Extra doc: https://github.com/casadi/casadi/wiki/L_t7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L427

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2043-L2046

";

%feature("docstring")  casadi::CodeGenerator::casadi_mmin "

mmin

Extra doc: https://github.com/casadi/casadi/wiki/L_t7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L427

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2043-L2046

";

%feature("docstring")  casadi::CodeGenerator::vfmax(const std::string &x, 
casadi_int n, const std::string &y) "

[INTERNAL] 
vfmax

Extra doc: https://github.com/casadi/casadi/wiki/L_t8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L432

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2001-L2004

";

%feature("docstring")  casadi::CodeGenerator::vfmax(const std::string &x, 
const std::string &n, const std::string &y) "

[INTERNAL] 
vfmax

Extra doc: https://github.com/casadi/casadi/wiki/L_ta

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L442

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2013-L2016

";

%feature("docstring")  casadi::CodeGenerator::vfmin(const std::string &x, 
casadi_int n, const std::string &y) "

[INTERNAL] 
vfmin

Extra doc: https://github.com/casadi/casadi/wiki/L_t9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L437

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2007-L2010

";

%feature("docstring")  casadi::CodeGenerator::vfmin(const std::string &x, 
const std::string &n, const std::string &y) "

[INTERNAL] 
vfmin

Extra doc: https://github.com/casadi/casadi/wiki/L_tb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L447

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2019-L2022

";

%feature("docstring")  casadi::CodeGenerator::max(const std::string &x, 
const std::string &y) "

[INTERNAL] 
max

Extra doc: https://github.com/casadi/casadi/wiki/L_tc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L452

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2025-L2028

";

%feature("docstring") casadi::casadi_max "

max

Extra doc: https://github.com/casadi/casadi/wiki/L_tc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L452

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2025-L2028

";

%feature("docstring")  casadi::CodeGenerator::casadi_max "

max

Extra doc: https://github.com/casadi/casadi/wiki/L_tc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L452

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2025-L2028

";

%feature("docstring")  casadi::CodeGenerator::min(const std::string &x, 
const std::string &y) "

[INTERNAL] 
min

Extra doc: https://github.com/casadi/casadi/wiki/L_td

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L457

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2031-L2034

";

%feature("docstring") casadi::casadi_min "

min

Extra doc: https://github.com/casadi/casadi/wiki/L_td

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L457

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2031-L2034

";

%feature("docstring")  casadi::CodeGenerator::casadi_min "

min

Extra doc: https://github.com/casadi/casadi/wiki/L_td

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L457

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2031-L2034

";

%feature("docstring")  casadi::CodeGenerator::norm_inf(casadi_int n, const 
std::string &x) "

[INTERNAL] 
norm_inf

Extra doc: https://github.com/casadi/casadi/wiki/L_te

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L462

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2061-L2064

";

%feature("docstring") casadi::casadi_norm_inf "

norm_inf

Extra doc: https://github.com/casadi/casadi/wiki/L_te

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L462

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2061-L2064

";

%feature("docstring")  casadi::CodeGenerator::casadi_norm_inf "

norm_inf

Extra doc: https://github.com/casadi/casadi/wiki/L_te

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L462

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2061-L2064

";

%feature("docstring")  casadi::CodeGenerator::norm_2(casadi_int n, const 
std::string &x) "

[INTERNAL] 
norm_2



::

       Extra doc: https://github.com/casadi/casadi/wiki/L_256 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L469

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2067-L2070

";

%feature("docstring") casadi::casadi_norm_2 "

norm_2



::

       Extra doc: https://github.com/casadi/casadi/wiki/L_256 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L469

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2067-L2070

";

%feature("docstring")  casadi::CodeGenerator::casadi_norm_2 "

norm_2



::

       Extra doc: https://github.com/casadi/casadi/wiki/L_256 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L469

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2067-L2070

";

%feature("docstring")  casadi::CodeGenerator::max_viol(casadi_int n, const 
std::string &x, const std::string &lb, const std::string &ub) "

[INTERNAL] 
max_viol

Extra doc: https://github.com/casadi/casadi/wiki/L_tf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L474

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2049-L2052

";

%feature("docstring")  casadi::CodeGenerator::sum_viol(casadi_int n, const 
std::string &x, const std::string &lb, const std::string &ub) "

[INTERNAL] 
sum_viol

Extra doc: https://github.com/casadi/casadi/wiki/L_tg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L480

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2055-L2058

";

%feature("docstring")  casadi::CodeGenerator::bound_consistency(casadi_int 
n, const std::string &x, const std::string &lam, const std::string &lbx, 
const std::string &ubx) "

[INTERNAL] 
bound_consistency

Extra doc: https://github.com/casadi/casadi/wiki/L_th

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L486

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2098-L2103

";

%feature("docstring")  casadi::CodeGenerator::lb_eig(const Sparsity &sp_h, 
const std::string &h) "

[INTERNAL] 
lb_eig

Extra doc: https://github.com/casadi/casadi/wiki/L_ti

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L492

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2073-L2076

";

%feature("docstring")  casadi::CodeGenerator::regularize(const Sparsity 
&sp_h, const std::string &h, const std::string &reg) "

[INTERNAL] 
regularize

Extra doc: https://github.com/casadi/casadi/wiki/L_tj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L497

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2079-L2082

";

%feature("docstring")  casadi::CodeGenerator::convexify_eval(const 
ConvexifyData &d, const std::string &Hin, const std::string &Hout, const 
std::string &iw, const std::string &w) "

[INTERNAL] 
convexify

Extra doc: https://github.com/casadi/casadi/wiki/L_tk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L502

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2085-L2089

";

%feature("docstring")  casadi::CodeGenerator::low(const std::string &x, 
const std::string &grid, casadi_int ng, casadi_int lookup_mode) "

[INTERNAL] 
low

Extra doc: https://github.com/casadi/casadi/wiki/L_tl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2092-L2095

";

%feature("docstring") casadi::casadi_low "

low

Extra doc: https://github.com/casadi/casadi/wiki/L_tl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2092-L2095

";

%feature("docstring")  casadi::CodeGenerator::casadi_low "

low

Extra doc: https://github.com/casadi/casadi/wiki/L_tl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2092-L2095

";

%feature("docstring")  casadi::CodeGenerator::declare(std::string s) "

[INTERNAL] 
Declare a function.

Extra doc: https://github.com/casadi/casadi/wiki/L_tm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1550-L1561

";

%feature("docstring")  casadi::CodeGenerator::comment(const std::string &s) 
"

[INTERNAL] 
Write a comment line (ignored if not verbose)

Extra doc: https://github.com/casadi/casadi/wiki/L_tn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L519

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1907-L1911

";

%feature("docstring")  casadi::CodeGenerator::add_auxiliary(Auxiliary f, 
const std::vector< std::string > &inst={"casadi_real"}) "

[INTERNAL] 
Add a built-in auxiliary function.

Extra doc: https://github.com/casadi/casadi/wiki/L_tp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L612

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L893-L1336

";

%feature("docstring")  casadi::CodeGenerator::add_io_sparsities(const 
std::string &name, const std::vector< Sparsity > &sp_in, const std::vector< 
Sparsity > &sp_out) "

[INTERNAL] 
Add io sparsity patterns of a function.

Extra doc: https://github.com/casadi/casadi/wiki/L_tq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L617

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1914-L1937

";

%feature("docstring")  casadi::CodeGenerator::work(casadi_int n, casadi_int 
sz) const "

[INTERNAL] 
Get work vector name from index

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L622

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L652-L660

";

%feature("docstring")  casadi::CodeGenerator::workel(casadi_int n) const "

[INTERNAL] 
Get work vector element from index

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L625

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L662-L668

";

%feature("docstring")  casadi::CodeGenerator::print_vector(std::ostream &s, 
const std::string &name, const std::vector< casadi_int > &v) "

[INTERNAL] 
Print casadi_int vector to a c file.

Extra doc: https://github.com/casadi/casadi/wiki/L_tr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L634

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L684-L687

";

%feature("docstring")  casadi::CodeGenerator::print_vector(std::ostream &s, 
const std::string &name, const std::vector< double > &v) "

[INTERNAL] 
Print real vector to a c file.

Extra doc: https://github.com/casadi/casadi/wiki/L_ts

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L640

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L689-L692

";

%feature("docstring")  casadi::CodeGenerator::copy(const std::string &arg, 
std::size_t n, const std::string &res) "

[INTERNAL] 
Create a copy operation.

Extra doc: https://github.com/casadi/casadi/wiki/L_tt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L646

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1430-L1437

";

%feature("docstring") casadi::casadi_copy "

Create a copy operation.

Extra doc: https://github.com/casadi/casadi/wiki/L_tt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L646

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1430-L1437

";

%feature("docstring")  casadi::CodeGenerator::casadi_copy "

Create a copy operation.

Extra doc: https://github.com/casadi/casadi/wiki/L_tt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L646

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1430-L1437

";

%feature("docstring")  casadi::CodeGenerator::copy_check(const std::string 
&arg, std::size_t n, const std::string &res, bool check_lhs=true, bool 
check_rhs=true) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::copy_default(const std::string
 &arg, std::size_t n, const std::string &res, const std::string &def, bool 
check_rhs=true) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::fill(const std::string &res, 
std::size_t n, const std::string &v) "

[INTERNAL] 
Create a fill operation.

Extra doc: https://github.com/casadi/casadi/wiki/L_tu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L655

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1481-L1489

";

%feature("docstring")  casadi::CodeGenerator::clear(const std::string &res, 
std::size_t n) "

[INTERNAL] 
Create a fill operation.

Extra doc: https://github.com/casadi/casadi/wiki/L_tv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L660

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1459-L1465

";

%feature("docstring")  casadi::CodeGenerator::arg(casadi_int i) const "

[INTERNAL] 
Refer to argument.

Extra doc: https://github.com/casadi/casadi/wiki/L_tw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L665

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1467-L1469

";

%feature("docstring")  casadi::CodeGenerator::res(casadi_int i) const "

[INTERNAL] 
Refer to resuly.

Extra doc: https://github.com/casadi/casadi/wiki/L_tx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L670

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1471-L1473

";

%feature("docstring")  casadi::CodeGenerator::mem(const Function &f) "

[INTERNAL] 
Access thread-local memory.

Extra doc: https://github.com/casadi/casadi/wiki/L_ty

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L675

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1475-L1479

";

%feature("docstring")  casadi::CodeGenerator::project(const std::string 
&arg, const Sparsity &sp_arg, const std::string &res, const Sparsity 
&sp_res, const std::string &w) "

[INTERNAL] 
Sparse assignment.

Extra doc: https://github.com/casadi/casadi/wiki/L_tz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L680

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1564-L1576

";

%feature("docstring") casadi::casadi_project "

Sparse assignment.

Extra doc: https://github.com/casadi/casadi/wiki/L_tz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L680

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1564-L1576

";

%feature("docstring")  casadi::CodeGenerator::casadi_project "

Sparse assignment.

Extra doc: https://github.com/casadi/casadi/wiki/L_tz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L680

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1564-L1576

";

%feature("docstring")  casadi::CodeGenerator::tri_project(const std::string 
&arg, const Sparsity &sp_arg, const std::string &res, bool lower) "

[INTERNAL] 
Project triangular part.

Extra doc: https://github.com/casadi/casadi/wiki/L_u0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L687

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1579-L1587

";

%feature("docstring")  casadi::CodeGenerator::densify(const std::string 
&arg, const Sparsity &sp_arg, const std::string &res, bool tr=false) "

[INTERNAL] 
Densify.

Extra doc: https://github.com/casadi/casadi/wiki/L_u1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L693

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1590-L1598

";

%feature("docstring") casadi::casadi_densify "

Densify.

Extra doc: https://github.com/casadi/casadi/wiki/L_u1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L693

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1590-L1598

";

%feature("docstring")  casadi::CodeGenerator::casadi_densify "

Densify.

Extra doc: https://github.com/casadi/casadi/wiki/L_u1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L693

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1590-L1598

";

%feature("docstring")  casadi::CodeGenerator::sparsify(const std::string 
&arg, const std::string &res, const Sparsity &sp_res, bool tr=false) "

[INTERNAL] 
Sparsify.

Extra doc: https://github.com/casadi/casadi/wiki/L_u2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L699

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1601-L1609

";

%feature("docstring") casadi::casadi_sparsify "

Sparsify.

Extra doc: https://github.com/casadi/casadi/wiki/L_u2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L699

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1601-L1609

";

%feature("docstring")  casadi::CodeGenerator::casadi_sparsify "

Sparsify.

Extra doc: https://github.com/casadi/casadi/wiki/L_u2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L699

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1601-L1609

";

%feature("docstring")  casadi::CodeGenerator::to_mex(const Sparsity &sp, 
const std::string &arg) "

[INTERNAL] 
Create matrix in MATLAB's MEX format.

Extra doc: https://github.com/casadi/casadi/wiki/L_u3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L705

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1338-L1343

";

%feature("docstring")  casadi::CodeGenerator::from_mex(std::string &arg, 
const std::string &res, std::size_t res_off, const Sparsity &sp_res, const 
std::string &w) "

[INTERNAL] 
Get matrix from MATLAB's MEX format.

Extra doc: https://github.com/casadi/casadi/wiki/L_u4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L710

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1345-L1356

";

%feature("docstring")  casadi::CodeGenerator::printf(const std::string &str,
 const std::vector< std::string > &arg=std::vector< std::string >()) "

[INTERNAL] 
Printf.

Extra doc: https://github.com/casadi/casadi/wiki/L_u5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L722

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L1611-L1618

";

%feature("docstring")  casadi::CodeGenerator::printf(const std::string &str,
 const std::string &arg1) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::printf(const std::string &str,
 const std::string &arg1, const std::string &arg2) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::printf(const std::string &str,
 const std::string &arg1, const std::string &arg2, const std::string &arg3) 
"

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::print_op(casadi_int op, const 
std::string &a0) "

[INTERNAL] 
Print an operation to a c file.

Extra doc: https://github.com/casadi/casadi/wiki/L_u6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L732

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L694-L714

";

%feature("docstring")  casadi::CodeGenerator::print_op(casadi_int op, const 
std::string &a0, const std::string &a1) "

[INTERNAL] ";

%feature("docstring")  casadi::CodeGenerator::file_slurp(const std::string 
&fname, casadi_int n, const std::string &a) "

[INTERNAL] 
Slurp a file.

Extra doc: https://github.com/casadi/casadi/wiki/L_u7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L738

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2106-L2109

";

%feature("docstring")  casadi::CodeGenerator::cache_check(const std::string 
&key, const std::string &cache, const std::string &loc, casadi_int stride, 
casadi_int sz, casadi_int key_sz, const std::string &val) "

[INTERNAL] 
cache check

Extra doc: https://github.com/casadi/casadi/wiki/L_u8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L743

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2112-L2117

";

%feature("docstring")  casadi::CodeGenerator::sz_work(size_t &sz_arg, size_t
 &sz_res, size_t &sz_iw, size_t &sz_w) const "

[INTERNAL] 
Get number of temporary variables needed for all functions.

Extra doc: https://github.com/casadi/casadi/wiki/L_258

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.hpp#L759

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/code_generator.cpp#L2119-L2127

";


// File: classcasadi_1_1Collocation.xml
%feature("docstring") casadi::Collocation "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Conic.xml
%feature("docstring") casadi::Conic "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1DaeBuilder.xml


/*
 Variables and equations 
*/

/*
 Symbolic modeling 
*/

/*
Formulate a dynamic system model

*/

/*
 Register an existing variable 
*/

/*
 [DEPRECATED] Specify all variables of a type: Call set_all instead 
*/

/*
 Manipulation 
*/

/*
Reformulate the dynamic optimization problem.

*/

/*
 Functions 
*/

/*
Add or load auxiliary functions

*/

/*
 Import and export 
*/
%feature("docstring") casadi::DaeBuilder "

[INTERNAL] 
A symbolic representation of a differential-algebraic equations 
model.

Variables:
==========





::

  t:      independent variable (usually time)
  c:      constants
  p:      parameters
  d:      dependent parameters (time independent)
  u:      controls
  w:      dependent variables  (time dependent)
  x:      differential states
  z:      algebraic variables
  q:      quadrature states
  y:      outputs
  



Equations:
==========





::

  differential equations: \\\\dot{x} ==  ode(...)
  algebraic equations:          0 ==  alg(...)
  quadrature equations:   \\\\dot{q} == quad(...)
  dependent parameters:         d == ddef(d_prev,p)
  dependent variables:          w == wdef(w_prev,x,z,u,p,t)
  output equations:             y == ydef(...)
  initial equations:     init_lhs == init_rhs(...)
  events:      when when_cond < 0: when_lhs := when_rhs
  



Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_5c

C++ includes: dae_builder.hpp
";

%feature("docstring")  casadi::DaeBuilder::t() const "

[INTERNAL] 
Independent variable (usually time)

Extra doc: https://github.com/casadi/casadi/wiki/L_5e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L93

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L63-L65

";

%feature("docstring")  casadi::DaeBuilder::x() const "

[INTERNAL] 
Differential states.

Extra doc: https://github.com/casadi/casadi/wiki/L_5f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L98

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L67-L69

";

%feature("docstring")  casadi::DaeBuilder::ode() const "

[INTERNAL] 
Ordinary differential equations (ODE)

Extra doc: https://github.com/casadi/casadi/wiki/L_5g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L103

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L71-L73

";

%feature("docstring")  casadi::DaeBuilder::z() const "

[INTERNAL] 
Algebraic variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_5h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L108

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L75-L77

";

%feature("docstring")  casadi::DaeBuilder::alg() const "

[INTERNAL] 
Algebraic equations.

Extra doc: https://github.com/casadi/casadi/wiki/L_5i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L113

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L79-L81

";

%feature("docstring")  casadi::DaeBuilder::q() const "

[INTERNAL] 
Quadrature states.

Extra doc: https://github.com/casadi/casadi/wiki/L_5j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L118

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L83-L85

";

%feature("docstring")  casadi::DaeBuilder::quad() const "

[INTERNAL] 
Quadrature equations.

Extra doc: https://github.com/casadi/casadi/wiki/L_5k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L123

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L87-L89

";

%feature("docstring")  casadi::DaeBuilder::y() const "

[INTERNAL] 
 Output variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_5l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L128

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L91-L93

";

%feature("docstring")  casadi::DaeBuilder::ydef() const "

[INTERNAL] 
Definitions of output variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_5m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L133

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L95-L97

";

%feature("docstring")  casadi::DaeBuilder::u() const "

[INTERNAL] 
Free controls.

Extra doc: https://github.com/casadi/casadi/wiki/L_5n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L99-L101

";

%feature("docstring")  casadi::DaeBuilder::p() const "

[INTERNAL] 
Parameters.

Extra doc: https://github.com/casadi/casadi/wiki/L_5o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L143

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L103-L105

";

%feature("docstring")  casadi::DaeBuilder::c() const "

[INTERNAL] 
Named constants.

Extra doc: https://github.com/casadi/casadi/wiki/L_5p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L148

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L107-L109

";

%feature("docstring")  casadi::DaeBuilder::cdef() const "

[INTERNAL] 
Definitions of named constants.

Extra doc: https://github.com/casadi/casadi/wiki/L_5q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L153

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L111-L113

";

%feature("docstring")  casadi::DaeBuilder::d() const "

[INTERNAL] 
Dependent parameters.

Extra doc: https://github.com/casadi/casadi/wiki/L_5r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L158

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L115-L117

";

%feature("docstring")  casadi::DaeBuilder::ddef() const "

[INTERNAL] 
Definitions of dependent parameters.

Interdependencies are allowed but must be non-cyclic.

Extra doc: https://github.com/casadi/casadi/wiki/L_5s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L165

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L119-L121

";

%feature("docstring")  casadi::DaeBuilder::w() const "

[INTERNAL] 
Dependent variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_5t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L170

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L123-L125

";

%feature("docstring")  casadi::DaeBuilder::wdef() const "

[INTERNAL] 
Dependent variables and corresponding definitions.

Interdependencies are allowed but must be non-cyclic.

Extra doc: https://github.com/casadi/casadi/wiki/L_5u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L177

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L127-L129

";

%feature("docstring")  casadi::DaeBuilder::aux() const "

[INTERNAL] 
Auxiliary variables: Used e.g. to define functions.

Extra doc: https://github.com/casadi/casadi/wiki/L_5v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L182

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L131-L133

";

%feature("docstring") casadi::casadi_aux "

Auxiliary variables: Used e.g. to define functions.

Extra doc: https://github.com/casadi/casadi/wiki/L_5v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L182

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L131-L133

";

%feature("docstring")  casadi::DaeBuilder::casadi_aux "

Auxiliary variables: Used e.g. to define functions.

Extra doc: https://github.com/casadi/casadi/wiki/L_5v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L182

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L131-L133

";

%feature("docstring")  casadi::DaeBuilder::init_lhs() const "

[INTERNAL] 
Initial conditions, left-hand-side.

Extra doc: https://github.com/casadi/casadi/wiki/L_5w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L187

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L135-L137

";

%feature("docstring")  casadi::DaeBuilder::init_rhs() const "

[INTERNAL] 
Initial conditions, right-hand-side.

Extra doc: https://github.com/casadi/casadi/wiki/L_5x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L192

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L139-L141

";

%feature("docstring")  casadi::DaeBuilder::when_cond() const "

[INTERNAL] 
When statement: triggering condition.

Extra doc: https://github.com/casadi/casadi/wiki/L_5y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L197

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L143-L145

";

%feature("docstring")  casadi::DaeBuilder::when_lhs() const "

[INTERNAL] 
When statement: left-hand-side.

Extra doc: https://github.com/casadi/casadi/wiki/L_5z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L202

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L147-L149

";

%feature("docstring")  casadi::DaeBuilder::when_rhs() const "

[INTERNAL] 
When statement: right-hand-side.

Extra doc: https://github.com/casadi/casadi/wiki/L_60

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L151-L153

";

%feature("docstring")  casadi::DaeBuilder::has_t() const "

[INTERNAL] 
Is there a time variable?

Extra doc: https://github.com/casadi/casadi/wiki/L_64

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L231

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L182-L184

";

%feature("docstring")  casadi::DaeBuilder::nx() const "

[INTERNAL] 
Differential states.

Extra doc: https://github.com/casadi/casadi/wiki/L_65

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L236

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L186-L188

";

%feature("docstring")  casadi::DaeBuilder::nz() const "

[INTERNAL] 
Algebraic variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_66

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L241

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L190-L192

";

%feature("docstring")  casadi::DaeBuilder::nq() const "

[INTERNAL] 
Quadrature states.

Extra doc: https://github.com/casadi/casadi/wiki/L_67

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L246

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L194-L196

";

%feature("docstring")  casadi::DaeBuilder::ny() const "

[INTERNAL] 
 Output variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_68

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L251

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L198-L200

";

%feature("docstring")  casadi::DaeBuilder::nu() const "

[INTERNAL] 
Free controls.

Extra doc: https://github.com/casadi/casadi/wiki/L_69

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L256

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L202-L204

";

%feature("docstring")  casadi::DaeBuilder::np() const "

[INTERNAL] 
Parameters.

Extra doc: https://github.com/casadi/casadi/wiki/L_6a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L261

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L206-L208

";

%feature("docstring")  casadi::DaeBuilder::nc() const "

[INTERNAL] 
Named constants.

Extra doc: https://github.com/casadi/casadi/wiki/L_6b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L266

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L210-L212

";

%feature("docstring")  casadi::DaeBuilder::nd() const "

[INTERNAL] 
Dependent parameters.

Extra doc: https://github.com/casadi/casadi/wiki/L_6c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L271

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L214-L216

";

%feature("docstring")  casadi::DaeBuilder::nw() const "

[INTERNAL] 
Dependent variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_6d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L276

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L218-L220

";

%feature("docstring")  casadi::DaeBuilder::add_t(const std::string 
&name="t") "

[INTERNAL] 
Add an independent variable (time)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L284

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L430-L435

";

%feature("docstring")  casadi::DaeBuilder::add_p(const std::string 
&name=std::string()) "

[INTERNAL] 
Add a new parameter.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L287

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L437-L444

";

%feature("docstring")  casadi::DaeBuilder::add_u(const std::string 
&name=std::string()) "

[INTERNAL] 
Add a new control.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L290

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L446-L453

";

%feature("docstring")  casadi::DaeBuilder::add_x(const std::string 
&name=std::string()) "

[INTERNAL] 
Add a new differential state.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L293

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L455-L462

";

%feature("docstring")  casadi::DaeBuilder::add_z(const std::string 
&name=std::string()) "

[INTERNAL] 
Add a new algebraic variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L296

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L464-L471

";

%feature("docstring")  casadi::DaeBuilder::add_q(const std::string 
&name=std::string()) "

[INTERNAL] 
Add a new quadrature state.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L299

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L473-L480

";

%feature("docstring")  casadi::DaeBuilder::add_c(const std::string &name, 
const MX &new_cdef) "

[INTERNAL] 
Add a new constant.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L302

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L482-L489

";

%feature("docstring")  casadi::DaeBuilder::add_d(const std::string &name, 
const MX &new_ddef) "

[INTERNAL] 
Add a new dependent parameter.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L305

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L491-L498

";

%feature("docstring")  casadi::DaeBuilder::add_w(const std::string &name, 
const MX &new_wdef) "

[INTERNAL] 
Add a new dependent variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L308

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L500-L507

";

%feature("docstring")  casadi::DaeBuilder::add_y(const std::string &name, 
const MX &new_ydef) "

[INTERNAL] 
Add a new output.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L311

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L509-L516

";

%feature("docstring")  casadi::DaeBuilder::set_ode(const std::string &name, 
const MX &ode_rhs) "

[INTERNAL] 
Specify the ordinary differential equation for a state.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L535-L541

";

%feature("docstring")  casadi::DaeBuilder::set_alg(const std::string &name, 
const MX &alg_rhs) "

[INTERNAL] 
Specificy the residual equation for an algebraic variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L317

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L543-L549

";

%feature("docstring")  casadi::DaeBuilder::add_aux(const std::string 
&name=std::string(), casadi_int n=1) "

[INTERNAL] 
Add an auxiliary variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L320

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L518-L522

";

%feature("docstring")  casadi::DaeBuilder::add_init(const MX &lhs, const MX 
&rhs) "

[INTERNAL] 
Add an initial equation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L323

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L524-L527

";

%feature("docstring")  casadi::DaeBuilder::add_when(const MX &cond, const MX
 &lhs, const MX &rhs) "

[INTERNAL] 
Add a when statement.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L529-L533

";

%feature("docstring")  casadi::DaeBuilder::sanity_check() const "

[INTERNAL] 
Check if dimensions match.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L329

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L551-L557

";

%feature("docstring")  casadi::DaeBuilder::register_t(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_p(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_u(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_x(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_z(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_q(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_c(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_d(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_w(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::register_y(const std::string 
&name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::set_u(const std::vector< 
std::string > &name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::set_x(const std::vector< 
std::string > &name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::set_z(const std::vector< 
std::string > &name, const std::vector< std::string > &alg=std::vector< 
std::string >()) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::set_q(const std::vector< 
std::string > &name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::set_y(const std::vector< 
std::string > &name) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::clear_in(const std::string &v) "

[DEPRECATED] Clear input variable: Replaced by clear_all

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L371

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L371-L371

";

%feature("docstring")  casadi::DaeBuilder::eliminate_w() "

[INTERNAL] 
Eliminate all dependent variables.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L375

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L611-L617

";

%feature("docstring")  casadi::DaeBuilder::lift(bool lift_shared=true, bool 
lift_calls=true) "

[INTERNAL] 
Lift problem formulation by extracting shared subexpressions.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L378

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L619-L625

";

%feature("docstring")  casadi::DaeBuilder::eliminate_quad() "

[INTERNAL] 
Eliminate quadrature states and turn them into ODE states.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L381

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L248-L254

";

%feature("docstring")  casadi::DaeBuilder::sort_d() "

[INTERNAL] 
Sort dependent parameters.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L384

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L256-L262

";

%feature("docstring")  casadi::DaeBuilder::sort_w() "

[INTERNAL] 
Sort dependent variables.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L387

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L264-L270

";

%feature("docstring")  casadi::DaeBuilder::sort_z(const std::vector< 
std::string > &z_order) "

[INTERNAL] 
Sort algebraic variables.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L390

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L272-L278

";

%feature("docstring")  casadi::DaeBuilder::prune(bool prune_p=true, bool 
prune_u=true) "

[INTERNAL] 
Prune unused controls.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L393

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L280-L286

";

%feature("docstring")  casadi::DaeBuilder::tear() "

[INTERNAL] 
Identify iteration variables and residual equations using naming
 
convention.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L396

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L288-L294

";

%feature("docstring")  casadi::DaeBuilder::add_fun(const std::string &name, 
const std::vector< std::string > &arg, const std::vector< std::string > 
&res, const Dict &opts=Dict()) "

[INTERNAL] 
Add a function from loaded expressions.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L405

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L760-L768

";

%feature("docstring")  casadi::DaeBuilder::add_fun(const Function &f) "

[INTERNAL] 
Add an already existing function.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L410

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L751-L758

";

%feature("docstring")  casadi::DaeBuilder::add_fun(const std::string &name, 
const Importer &compiler, const Dict &opts=Dict()) "

[INTERNAL] 
Add an external function.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L413

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L770-L773

";

%feature("docstring")  casadi::DaeBuilder::has_fun(const std::string &name) 
const "

[INTERNAL] 
Does a particular function already exist?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L417

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L775-L782

";

%feature("docstring")  casadi::DaeBuilder::fun(const std::string &name) 
const "

[INTERNAL] 
Get function by name.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L420

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L784-L791

";

%feature("docstring")  casadi::DaeBuilder::fun() const "

[INTERNAL] 
Get all functions.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L423

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L814-L816

";

%feature("docstring")  casadi::DaeBuilder::gather_fun(casadi_int 
max_depth=-1) "

[INTERNAL] 
Collect embedded functions from the expression graph.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L426

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L793-L812

";

%feature("docstring")  casadi::DaeBuilder::parse_fmi(const std::string 
&filename) "

[INTERNAL] 
Import existing problem from FMI/XML

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L433

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L433-L433

";

%feature("docstring")  casadi::DaeBuilder::provides_directional_derivative()
 const "

[INTERNAL] 
Does the FMU provide support for analytic derivatives.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L436

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L230-L238

";

%feature("docstring")  casadi::DaeBuilder::load_fmi_description(const 
std::string &filename) "

[INTERNAL] 
Import problem description from FMI or XML.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L439

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L222-L228

";

%feature("docstring")  casadi::DaeBuilder::export_fmu(const Dict 
&opts=Dict()) "

[INTERNAL] 
Export instance into an FMU.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L442

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L240-L246

";

%feature("docstring")  casadi::DaeBuilder::add_lc(const std::string &name, 
const std::vector< std::string > &f_out) "

[INTERNAL] 
Add a named linear combination of output expressions.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L445

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L711-L718

";

%feature("docstring")  casadi::DaeBuilder::create(const std::string &fname, 
const std::vector< std::string > &name_in, const std::vector< std::string > 
&name_out, bool sx, bool lifted_calls=false) const "

[INTERNAL] 
Construct a function object, legacy syntax.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L448

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L720-L729

";

%feature("docstring")  casadi::DaeBuilder::create(const std::string &name, 
const std::vector< std::string > &name_in, const std::vector< std::string > 
&name_out, const Dict &opts=Dict()) const "

[INTERNAL] 
Construct a function object, names provided.

Parameters:
-----------

name: 
Name assigned to the resulting function object

name_in: 
Names of all the inputs

name_out: 
Names of all the outputs

opts: 
Optional settings

Extra doc: https://github.com/casadi/casadi/wiki/L_6e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L460

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L731-L740

";

%feature("docstring")  casadi::DaeBuilder::create(const std::string &name, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Load a function from an FMU DLL, standard IO conforming with 

simulator.

Parameters:
-----------

name: 
Name assigned to the resulting function object

opts: 
Optional settings

Extra doc: https://github.com/casadi/casadi/wiki/L_6f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L472

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L742-L749

";

%feature("docstring")  casadi::DaeBuilder::var(const std::string &name) 
const "

[INTERNAL] 
Get variable expression by name

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L481

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L559-L566

";

%feature("docstring")  casadi::DaeBuilder::var(size_t ind) const "

[INTERNAL] 
Get single variable expression by index.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L697

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L882-L890

";

%feature("docstring")  casadi::DaeBuilder::var(const std::vector< size_t > 
&ind) const "

[INTERNAL] 
Get variable expressions by index.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L700

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L892-L899

";

%feature("docstring")  casadi::DaeBuilder::beq(const std::string &name) 
const "

[INTERNAL] 
Get/set the binding equation for a variable

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L490

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L594-L601

";

%feature("docstring")  casadi::DaeBuilder::set_beq(const std::string &name, 
const MX &val) "

[INTERNAL] 
Get/set the binding equation for a variable

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L491

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L603-L609

";

%feature("docstring")  casadi::DaeBuilder::value_reference(const std::string
 &name) const "

[INTERNAL] 
Get/set value reference

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L496

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L627-L629

";

%feature("docstring")  casadi::DaeBuilder::set_value_reference(const 
std::string &name, casadi_int val) "

[INTERNAL] 
Get/set value reference

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L497

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L631-L633

";

%feature("docstring")  casadi::DaeBuilder::description(const std::string 
&name) const "

[INTERNAL] 
Get/set description

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L502

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L635-L637

";

%feature("docstring")  casadi::DaeBuilder::set_description(const std::string
 &name, const std::string &val) "

[INTERNAL] 
Get/set description

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L503

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L639-L641

";

%feature("docstring")  casadi::DaeBuilder::type(const std::string &name, 
casadi_int fmi_version=3) const "

[INTERNAL] 
Get/set the type

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L643-L652

";

%feature("docstring")  casadi::DaeBuilder::set_type(const std::string &name,
 const std::string &val) "

[INTERNAL] 
Get/set the type

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L509

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L654-L661

";

%feature("docstring")  casadi::DaeBuilder::causality(const std::string 
&name) const "

[INTERNAL] 
Get/set the causality

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L663-L665

";

%feature("docstring")  casadi::DaeBuilder::set_causality(const std::string 
&name, const std::string &val) "

[INTERNAL] 
Get/set the causality

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L515

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L667-L669

";

%feature("docstring")  casadi::DaeBuilder::variability(const std::string 
&name) const "

[INTERNAL] 
Get/set the variability

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L520

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L671-L673

";

%feature("docstring")  casadi::DaeBuilder::set_variability(const std::string
 &name, const std::string &val) "

[INTERNAL] 
Get/set the variability

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L521

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L675-L677

";

%feature("docstring")  casadi::DaeBuilder::initial(const std::string &name) 
const "

[INTERNAL] 
Get/set the initial property

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L526

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L679-L681

";

%feature("docstring")  casadi::DaeBuilder::set_initial(const std::string 
&name, const std::string &val) "

[INTERNAL] 
Get/set the initial property

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L527

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L683-L685

";

%feature("docstring")  casadi::DaeBuilder::unit(const std::string &name) 
const "

[INTERNAL] 
Get/set the unit

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L532

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L687-L689

";

%feature("docstring")  casadi::DaeBuilder::set_unit(const std::string &name,
 const std::string &val) "

[INTERNAL] 
Get/set the unit

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L533

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L691-L693

";

%feature("docstring")  casadi::DaeBuilder::display_unit(const std::string 
&name) const "

[INTERNAL] 
Get/set the display unit

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L538

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L695-L697

";

%feature("docstring")  casadi::DaeBuilder::set_display_unit(const 
std::string &name, const std::string &val) "

[INTERNAL] 
Get/set the display unit

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L539

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L699-L701

";

%feature("docstring")  casadi::DaeBuilder::variable(const std::string &name)
 "

[INTERNAL] 
Access a variable by name

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L677

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L838-L844

";

%feature("docstring")  casadi::DaeBuilder::variable(const std::string &name)
 const "

[INTERNAL] 
Access a variable by name

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L678

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L846-L852

";

%feature("docstring")  casadi::DaeBuilder::variable(size_t ind) "

[INTERNAL] 
Access a variable by index

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L683

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L854-L860

";

%feature("docstring")  casadi::DaeBuilder::variable(size_t ind) const "

[INTERNAL] 
Access a variable by index

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L684

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L862-L868

";

%feature("docstring")  casadi::DaeBuilder::type_name() const "

[INTERNAL] 
Readable name of the class.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L74

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L74-L74

";

%feature("docstring") casadi::DaeBuilder::DaeBuilder() "

[INTERNAL] 
Default constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L77

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L51-L52

";

%feature("docstring") casadi::DaeBuilder::DaeBuilder(const std::string 
&name, const std::string &path="", const Dict &opts=Dict()) "

[INTERNAL] 
Construct a  DaeBuilder instance.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L80

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L54-L57

";

%feature("docstring")  casadi::DaeBuilder::name() const "

[INTERNAL] 
Name of instance.

Extra doc: https://github.com/casadi/casadi/wiki/L_5d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L86

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L59-L61

";

%feature("docstring")  casadi::DaeBuilder::name(size_t ind) const "

[INTERNAL] 
Get variable name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_6h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L711

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L919-L927

";

%feature("docstring")  casadi::DaeBuilder::name(const std::vector< size_t > 
&ind) const "

[INTERNAL] 
Get variable names by indices.

Extra doc: https://github.com/casadi/casadi/wiki/L_6i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L716

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L929-L938

";

%feature("docstring")  casadi::DaeBuilder::outputs() const "

[INTERNAL] 
Model structure: outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_61

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L213

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L155-L162

";

%feature("docstring")  casadi::DaeBuilder::derivatives() const "

[INTERNAL] 
Model structure: derivatives.

Extra doc: https://github.com/casadi/casadi/wiki/L_62

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L218

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L164-L171

";

%feature("docstring")  casadi::DaeBuilder::initial_unknowns() const "

[INTERNAL] 
Model structure: initial unknowns.

Extra doc: https://github.com/casadi/casadi/wiki/L_63

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L223

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L173-L180

";

%feature("docstring")  casadi::DaeBuilder::clear_all(const std::string &v) "

[INTERNAL] 
Clear all variables of a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L333

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L414-L420

";

%feature("docstring")  casadi::DaeBuilder::set_all(const std::string &v, 
const std::vector< std::string > &name) "

[INTERNAL] 
Set all variables of a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L336

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L422-L428

";

%feature("docstring")  casadi::DaeBuilder::dependent_fun(const std::string 
&fname, const std::vector< std::string > &s_in, const std::vector< 
std::string > &s_out) const "

[INTERNAL] 
Construct a function for evaluating dependent parameters.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L475

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L827-L836

";

%feature("docstring")  casadi::DaeBuilder::der(const std::vector< 
std::string > &name) const "

[INTERNAL] 
Get the time derivative of an expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L486

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L583-L592

";

%feature("docstring")  casadi::DaeBuilder::der(const std::string &name) 
const "

[INTERNAL] 
Get the time derivative of an expression, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L552

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L568-L581

";

%feature("docstring")  casadi::DaeBuilder::numel(const std::string &name) 
const "

[INTERNAL] 
Get the number of elements of a variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L543

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L703-L705

";

%feature("docstring")  casadi::DaeBuilder::dimension(const std::string 
&name) const "

[INTERNAL] 
Get the dimensions of a variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L546

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L707-L709

";

%feature("docstring")  casadi::DaeBuilder::attribute(const std::string &a, 
const std::string &name) const "

[INTERNAL] 
Get an attribute, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L555

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L940-L947

";

%feature("docstring")  casadi::DaeBuilder::attribute(const std::string &a, 
const std::vector< std::string > &name) const "

[INTERNAL] 
Get an attribute.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L599

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L949-L957

";

%feature("docstring")  casadi::DaeBuilder::set_attribute(const std::string 
&a, const std::string &name, double val) "

[INTERNAL] 
Set an attribute, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L558

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L959-L965

";

%feature("docstring")  casadi::DaeBuilder::set_attribute(const std::string 
&a, const std::vector< std::string > &name, const std::vector< double > 
&val) "

[INTERNAL] 
Set an attribute.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L602

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L967-L974

";

%feature("docstring")  casadi::DaeBuilder::min(const std::string &name) 
const "

[INTERNAL] 
Get the lower bound, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L561

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L976-L983

";

%feature("docstring") casadi::casadi_min "

Get the lower bound, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L561

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L976-L983

";

%feature("docstring")  casadi::DaeBuilder::casadi_min "

Get the lower bound, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L561

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L976-L983

";

%feature("docstring")  casadi::DaeBuilder::min(const std::vector< 
std::string > &name) const "

[INTERNAL] 
Get the lower bound.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L606

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L985-L992

";

%feature("docstring") casadi::casadi_min "

Get the lower bound.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L606

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L985-L992

";

%feature("docstring")  casadi::DaeBuilder::casadi_min "

Get the lower bound.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L606

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L985-L992

";

%feature("docstring")  casadi::DaeBuilder::set_min(const std::string &name, 
double val) "

[INTERNAL] 
Set the lower bound, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L564

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L994-L1000

";

%feature("docstring")  casadi::DaeBuilder::set_min(const std::vector< 
std::string > &name, const std::vector< double > &val) "

[INTERNAL] 
Set the lower bound.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L609

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1002-L1008

";

%feature("docstring")  casadi::DaeBuilder::max(const std::string &name) 
const "

[INTERNAL] 
Get the upper bound, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L567

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1010-L1017

";

%feature("docstring") casadi::casadi_max "

Get the upper bound, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L567

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1010-L1017

";

%feature("docstring")  casadi::DaeBuilder::casadi_max "

Get the upper bound, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L567

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1010-L1017

";

%feature("docstring")  casadi::DaeBuilder::max(const std::vector< 
std::string > &name) const "

[INTERNAL] 
Get the upper bound.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L612

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1019-L1026

";

%feature("docstring") casadi::casadi_max "

Get the upper bound.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L612

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1019-L1026

";

%feature("docstring")  casadi::DaeBuilder::casadi_max "

Get the upper bound.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L612

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1019-L1026

";

%feature("docstring")  casadi::DaeBuilder::set_max(const std::string &name, 
double val) "

[INTERNAL] 
Set the upper bound, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L570

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1028-L1034

";

%feature("docstring")  casadi::DaeBuilder::set_max(const std::vector< 
std::string > &name, const std::vector< double > &val) "

[INTERNAL] 
Set the upper bound.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L615

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1036-L1042

";

%feature("docstring")  casadi::DaeBuilder::nominal(const std::string &name) 
const "

[INTERNAL] 
Get the nominal value, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L573

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1044-L1051

";

%feature("docstring")  casadi::DaeBuilder::nominal(const std::vector< 
std::string > &name) const "

[INTERNAL] 
Get the nominal value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L618

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1053-L1060

";

%feature("docstring")  casadi::DaeBuilder::set_nominal(const std::string 
&name, double val) "

[INTERNAL] 
Set the nominal value, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L576

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1062-L1068

";

%feature("docstring")  casadi::DaeBuilder::set_nominal(const std::vector< 
std::string > &name, const std::vector< double > &val) "

[INTERNAL] 
Set the nominal value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L621

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1070-L1076

";

%feature("docstring")  casadi::DaeBuilder::start(const std::string &name) 
const "

[INTERNAL] 
Get the start attribute, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L579

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1078-L1086

";

%feature("docstring")  casadi::DaeBuilder::start(const std::vector< 
std::string > &name) const "

[INTERNAL] 
Get the start attribute.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L624

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1088-L1095

";

%feature("docstring")  casadi::DaeBuilder::set_start(const std::string 
&name, double val) "

[INTERNAL] 
Set the start attribute, single variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L582

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1097-L1103

";

%feature("docstring")  casadi::DaeBuilder::set_start(const std::vector< 
std::string > &name, const std::vector< double > &val) "

[INTERNAL] 
Set the start attribute.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L627

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1105-L1111

";

%feature("docstring")  casadi::DaeBuilder::reset() "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::set(const std::string &name, 
double val) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::set(const std::string &name, 
const std::string &val) "

[INTERNAL] ";

%feature("docstring")  casadi::DaeBuilder::set(const std::vector< 
std::string > &name, const std::vector< double > &val) "

[INTERNAL] 
Set the current value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L630

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1137-L1143

";

%feature("docstring")  casadi::DaeBuilder::set(const std::vector< 
std::string > &name, const std::vector< std::string > &val) "

[INTERNAL] 
Set the current value (string)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L633

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1145-L1152

";

%feature("docstring")  casadi::DaeBuilder::get(const std::string &name) 
const "

[INTERNAL] 
Evaluate the values for a set of variables at the initial time, 
single
 value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L594

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1154-L1156

";

%feature("docstring")  casadi::DaeBuilder::get(const std::vector< 
std::string > &name) const "

[INTERNAL] 
Evaluate the values for a set of variables at the initial time.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L636

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1158-L1173

";

%feature("docstring")  casadi::DaeBuilder::add_variable(const std::string 
&name, casadi_int n=1) "

[INTERNAL] 
Add a new variable: returns corresponding symbolic expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L639

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L322-L324

";

%feature("docstring")  casadi::DaeBuilder::add_variable(const std::string 
&name, const Sparsity &sp) "

[INTERNAL] 
Add a new variable: returns corresponding symbolic expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L642

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L326-L330

";

%feature("docstring")  casadi::DaeBuilder::add_variable(const MX &new_v) "

[INTERNAL] 
Add a new variable from symbolic expressions.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L645

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L332-L335

";

%feature("docstring")  casadi::DaeBuilder::add_variable_new(const 
std::string &name, casadi_int n=1) "

[INTERNAL] 
Add a new variable: returns corresponding symbolic expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L648

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L337-L339

";

%feature("docstring")  casadi::DaeBuilder::add_variable_new(const 
std::string &name, const Sparsity &sp) "

[INTERNAL] 
Add a new variable: returns corresponding symbolic expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L651

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L341-L345

";

%feature("docstring")  casadi::DaeBuilder::add_variable_new(const MX &new_v)
 "

[INTERNAL] 
Add a new variable from symbolic expressions.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L654

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L347-L351

";

%feature("docstring")  casadi::DaeBuilder::has_variable(const std::string 
&name) const "

[INTERNAL] 
Check if a particular variable exists.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L657

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L296-L303

";

%feature("docstring")  casadi::DaeBuilder::all_variables() const "

[INTERNAL] 
Get a list of all variables.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L660

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L305-L312

";

%feature("docstring")  casadi::DaeBuilder::oracle(bool sx=false, bool 
elim_w=false, bool lifted_calls=false) const "

[INTERNAL] 
Get the (cached) oracle, SX or  MX.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L663

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L818-L825

";

%feature("docstring")  casadi::DaeBuilder::jac_sparsity(const std::vector< 
std::string > &onames, const std::vector< std::string > &inames) const "

[INTERNAL] 
Get Jacobian sparsity.

Extra doc: https://github.com/casadi/casadi/wiki/L_6g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L668

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L1175-L1183

";

%feature("docstring")  casadi::DaeBuilder::new_variable(const std::string 
&name, casadi_int numel=1) "

[INTERNAL] 
Create a new variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L673

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L314-L320

";

%feature("docstring")  casadi::DaeBuilder::find(const std::string &name) 
const "

[INTERNAL] 
Get index of variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L703

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L901-L908

";

%feature("docstring") casadi::casadi_find "

Get index of variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L703

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L901-L908

";

%feature("docstring")  casadi::DaeBuilder::casadi_find "

Get index of variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L703

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L901-L908

";

%feature("docstring")  casadi::DaeBuilder::find(const std::vector< 
std::string > &name) const "

[INTERNAL] 
Get indices of variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L706

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L910-L917

";

%feature("docstring") casadi::casadi_find "

Get indices of variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L706

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L910-L917

";

%feature("docstring")  casadi::DaeBuilder::casadi_find "

Get indices of variable.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.hpp#L706

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dae_builder.cpp#L910-L917

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::DaeBuilder::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1DeserializerBase.xml
%feature("docstring") casadi::DeserializerBase "

[INTERNAL] C++ includes: serializer.hpp
";

%feature("docstring") 
casadi::DeserializerBase::DeserializerBase(std::unique_ptr< std::istream > 
stream) "

[INTERNAL] ";

%feature("docstring") casadi::DeserializerBase::~DeserializerBase "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::pop_type() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sparsity() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_mx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_dm() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_linsol() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_function() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_generictype() 
"

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_int() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_double() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_string() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_sparsity_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_mx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_dm_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sx_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_linsol_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_function_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_generictype_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_int_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_double_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_string_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sparsity() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_mx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_dm() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_linsol() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_function() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_generictype() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_int() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_double() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_string() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sparsity_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_mx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_dm_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_linsol_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_function_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_generictype_vector()
 "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_int_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_double_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_string_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::connect(SerializerBase &s) 
"

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::reset() "

[INTERNAL] ";


// File: classcasadi_1_1DeserializingStream.xml
%feature("docstring") casadi::DeserializingStream "

[INTERNAL] 
Helper class for Serialization.

Joris Gillis

Extra doc: https://github.com/casadi/casadi/wiki/L_ak

C++ includes: serializing_stream.hpp
";

%feature("docstring") 
casadi::DeserializingStream::DeserializingStream(std::istream &in_s) "

[INTERNAL] 
Constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializing_stream.hpp#L73

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializing_stream.cpp#L44-L68

";

%feature("docstring") casadi::DeserializingStream::DeserializingStream(const
 DeserializingStream &) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(Sparsity &e) "

[INTERNAL] 
Reconstruct an object from the input stream.

If the reference is not of the same type as the object encoded in the 

stream. an error will be raised.

Extra doc: https://github.com/casadi/casadi/wiki/L_al

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializing_stream.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializing_stream.cpp#L218-L221

";

%feature("docstring")  casadi::DeserializingStream::unpack(MX &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(SXElem &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(Linsol &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(MatrixCommon &e) 
"

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(Function &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(Importer &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(GenericType &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(std::ostream &s) 
"

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(Slice &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(int &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(bool &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(casadi_int &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(size_t &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(std::string &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(double &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(char &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(std::vector< T > 
&e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(std::map< K, V > 
&e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(std::pair< A, B >
 &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::unpack(const std::string
 &descr, T &e) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::version(const 
std::string &name, int v) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::version(const 
std::string &name) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::version(const 
std::string &name, int min, int max) "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializingStream::connect(SerializingStream &s) "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializingStream::reset() "

[INTERNAL] ";


// File: classcasadi_1_1Dple.xml
%feature("docstring") casadi::Dple "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Expm.xml
%feature("docstring") casadi::Expm "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1FastNewton.xml
%feature("docstring") casadi::FastNewton "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Feasiblesqpmethod.xml
%feature("docstring") casadi::Feasiblesqpmethod "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1FileDeserializer.xml
%feature("docstring") casadi::FileDeserializer "

[INTERNAL] C++ includes: serializer.hpp
";

%feature("docstring") casadi::FileDeserializer::FileDeserializer(const 
std::string &fname) "

[INTERNAL] 
Advanced deserialization of CasADi objects.

See: 
 FileSerializer

Extra doc: https://github.com/casadi/casadi/wiki/L_7t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.hpp#L250

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.cpp#L106-L112

";

%feature("docstring") casadi::FileDeserializer::~FileDeserializer "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::pop_type() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sparsity() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_mx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_dm() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_linsol() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_function() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_generictype() 
"

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_int() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_double() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_string() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_sparsity_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_mx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_dm_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sx_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_linsol_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_function_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_generictype_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_int_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_double_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_string_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sparsity() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_mx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_dm() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_linsol() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_function() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_generictype() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_int() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_double() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_string() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sparsity_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_mx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_dm_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_linsol_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_function_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_generictype_vector()
 "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_int_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_double_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_string_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::connect(SerializerBase &s) 
"

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::reset() "

[INTERNAL] ";


// File: classcasadi_1_1FileSerializer.xml
%feature("docstring") casadi::FileSerializer "

[INTERNAL] C++ includes: serializer.hpp
";

%feature("docstring") casadi::FileSerializer::FileSerializer(const 
std::string &fname, const Dict &opts=Dict()) "

[INTERNAL] 
Advanced serialization of CasADi objects.

See: 
 StringSerializer,  FileDeserializer

Extra doc: https://github.com/casadi/casadi/wiki/L_7q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.hpp#L221

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.cpp#L41-L49

";

%feature("docstring") casadi::FileSerializer::~FileSerializer "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const Sparsity &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MX &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MatrixCommon &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MatrixCommon &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const Linsol &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const Function &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const GenericType &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const casadi_int &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const double &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::string &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Sparsity > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< MX > 
&e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
MatrixCommon > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
MatrixCommon > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Linsol > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Function > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
GenericType > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
casadi_int > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
double > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
std::string > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::connect(DeserializerBase &s) 
"

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::reset() "

[INTERNAL] ";


// File: classcasadi_1_1FixedStepIntegrator.xml
%feature("docstring") casadi::FixedStepIntegrator "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Function.xml
%feature("docstring") casadi::Function "

[INTERNAL] 
 Function object.

A  Function instance is a general multiple-input, multiple-output function 
where 
each input and output can be a sparse matrix.
 For an introduction to
 this class, see the CasADi user guide. Function is a reference counted and 
immutable class; copying a class instance 
is very cheap and its behavior 
(with some exceptions) is not affected 
by calling its member functions.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_1uw

>List of available options

+------------------+-----------------+------------------+------------------+
|        Id        |      Type       |   Description    |     Used in      |
+==================+=================+==================+==================+
| ad_weight        | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for derivative   | Internal         |
|                  |                 | calculation.When |                  |
|                  |                 | there is an      |                  |
|                  |                 | option of either |                  |
|                  |                 | using forward or |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | directional      |                  |
|                  |                 | derivatives, the |                  |
|                  |                 | condition ad_wei |                  |
|                  |                 | ght*nf<=(1-      |                  |
|                  |                 | ad_weight)*na is |                  |
|                  |                 | used where nf    |                  |
|                  |                 | and na are       |                  |
|                  |                 | estimates of the |                  |
|                  |                 | number of        |                  |
|                  |                 | forward/reverse  |                  |
|                  |                 | mode directional |                  |
|                  |                 | derivatives      |                  |
|                  |                 | needed. By       |                  |
|                  |                 | default,         |                  |
|                  |                 | ad_weight is     |                  |
|                  |                 | calculated       |                  |
|                  |                 | automatically,   |                  |
|                  |                 | but this can be  |                  |
|                  |                 | overridden by    |                  |
|                  |                 | setting this     |                  |
|                  |                 | option. In       |                  |
|                  |                 | particular, 0    |                  |
|                  |                 | means forcing    |                  |
|                  |                 | forward mode and |                  |
|                  |                 | 1 forcing        |                  |
|                  |                 | reverse mode.    |                  |
|                  |                 | Leave unset for  |                  |
|                  |                 | (class specific) |                  |
|                  |                 | heuristics.      |                  |
+------------------+-----------------+------------------+------------------+
| ad_weight_sp     | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for sparsity     | Internal         |
|                  |                 | pattern          |                  |
|                  |                 | calculation calc |                  |
|                  |                 | ulation.Override |                  |
|                  |                 | s default        |                  |
|                  |                 | behavior. Set to |                  |
|                  |                 | 0 and 1 to force |                  |
|                  |                 | forward and      |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | respectively.    |                  |
|                  |                 | Cf. option       |                  |
|                  |                 | \"ad_weight\".     |                  |
|                  |                 | When set to -1,  |                  |
|                  |                 | sparsity is      |                  |
|                  |                 | completely       |                  |
|                  |                 | ignored and      |                  |
|                  |                 | dense matrices   |                  |
|                  |                 | are used.        |                  |
+------------------+-----------------+------------------+------------------+
| always_inline    | OT_BOOL         | Force inlining.  | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| cache            | OT_DICT         | Prepopulate the  | casadi::Function |
|                  |                 | function cache.  | Internal         |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| compiler         | OT_STRING       | Just-in-time     | casadi::Function |
|                  |                 | compiler plugin  | Internal         |
|                  |                 | to be used.      |                  |
+------------------+-----------------+------------------+------------------+
| custom_jacobian  | OT_FUNCTION     | Override         | casadi::Function |
|                  |                 | CasADi's AD. Use | Internal         |
|                  |                 | together with    |                  |
|                  |                 | 'jac_penalty':   |                  |
|                  |                 | 0. Note: Highly  |                  |
|                  |                 | experimental.    |                  |
|                  |                 | Syntax may break |                  |
|                  |                 | often.           |                  |
+------------------+-----------------+------------------+------------------+
| der_options      | OT_DICT         | Default options  | casadi::Function |
|                  |                 | to be used to    | Internal         |
|                  |                 | populate         |                  |
|                  |                 | forward_options, |                  |
|                  |                 | reverse_options, |                  |
|                  |                 | and              |                  |
|                  |                 | jacobian_options |                  |
|                  |                 | before those     |                  |
|                  |                 | options are      |                  |
|                  |                 | merged in.       |                  |
+------------------+-----------------+------------------+------------------+
| derivative_of    | OT_FUNCTION     | The function is  | casadi::Function |
|                  |                 | a derivative of  | Internal         |
|                  |                 | another          |                  |
|                  |                 | function. The    |                  |
|                  |                 | type of          |                  |
|                  |                 | derivative       |                  |
|                  |                 | (directional     |                  |
|                  |                 | derivative,      |                  |
|                  |                 | Jacobian) is     |                  |
|                  |                 | inferred from    |                  |
|                  |                 | the function     |                  |
|                  |                 | name.            |                  |
+------------------+-----------------+------------------+------------------+
| dump             | OT_BOOL         | Dump function to | casadi::Function |
|                  |                 | file upon first  | Internal         |
|                  |                 | evaluation.      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| dump_dir         | OT_STRING       | Directory to     | casadi::Function |
|                  |                 | dump             | Internal         |
|                  |                 | inputs/outputs   |                  |
|                  |                 | to. Make sure    |                  |
|                  |                 | the directory    |                  |
|                  |                 | exists [.]       |                  |
+------------------+-----------------+------------------+------------------+
| dump_format      | OT_STRING       | Choose file      | casadi::Function |
|                  |                 | format to dump   | Internal         |
|                  |                 | matrices. See    |                  |
|                  |                 | DM.from_file     |                  |
|                  |                 | [mtx]            |                  |
+------------------+-----------------+------------------+------------------+
| dump_in          | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | to file          |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| dump_out         | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs to file  |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| enable_fd        | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation by   |                  |
|                  |                 | finite           |                  |
|                  |                 | differencing.    |                  |
|                  |                 | [default:        |                  |
|                  |                 | false]]          |                  |
+------------------+-----------------+------------------+------------------+
| enable_forward   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using forward    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_jacobian  | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobians of all |                  |
|                  |                 | differentiable   |                  |
|                  |                 | outputs with     |                  |
|                  |                 | respect to all   |                  |
|                  |                 | differentiable   |                  |
|                  |                 | inputs - if      |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_reverse   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | transposed       |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using reverse    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| error_on_fail    | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when function    | ction            |
|                  |                 | evaluation fails |                  |
|                  |                 | (default true).  |                  |
+------------------+-----------------+------------------+------------------+
| fd_method        | OT_STRING       | Method for       | casadi::Function |
|                  |                 | finite           | Internal         |
|                  |                 | differencing     |                  |
|                  |                 | [default         |                  |
|                  |                 | 'central']       |                  |
+------------------+-----------------+------------------+------------------+
| fd_options       | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | finite           |                  |
|                  |                 | difference       |                  |
|                  |                 | instance         |                  |
+------------------+-----------------+------------------+------------------+
| forward_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | forward mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| gather_stats     | OT_BOOL         | Deprecated       | casadi::Function |
|                  |                 | option           | Internal         |
|                  |                 | (ignored):       |                  |
|                  |                 | Statistics are   |                  |
|                  |                 | now always       |                  |
|                  |                 | collected.       |                  |
+------------------+-----------------+------------------+------------------+
| input_scheme     | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| inputs_check     | OT_BOOL         | Throw exceptions | casadi::Function |
|                  |                 | when the         | Internal         |
|                  |                 | numerical values |                  |
|                  |                 | of the inputs    |                  |
|                  |                 | don't make sense |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_in       | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each input if it | Internal         |
|                  |                 | should be        |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_out      | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each output if   | Internal         |
|                  |                 | it should be     |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| jac_penalty      | OT_DOUBLE       | When requested   | casadi::Function |
|                  |                 | for a number of  | Internal         |
|                  |                 | forward/reverse  |                  |
|                  |                 | directions, it   |                  |
|                  |                 | may be cheaper   |                  |
|                  |                 | to compute first |                  |
|                  |                 | the full         |                  |
|                  |                 | jacobian and     |                  |
|                  |                 | then multiply    |                  |
|                  |                 | with seeds,      |                  |
|                  |                 | rather than      |                  |
|                  |                 | obtain the       |                  |
|                  |                 | requested        |                  |
|                  |                 | directions in a  |                  |
|                  |                 | straightforward  |                  |
|                  |                 | manner. Casadi   |                  |
|                  |                 | uses a heuristic |                  |
|                  |                 | to decide which  |                  |
|                  |                 | is cheaper. A    |                  |
|                  |                 | high value of    |                  |
|                  |                 | 'jac_penalty'    |                  |
|                  |                 | makes it less    |                  |
|                  |                 | likely for the   |                  |
|                  |                 | heurstic to      |                  |
|                  |                 | chose the full   |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy. The    |                  |
|                  |                 | special value -1 |                  |
|                  |                 | indicates never  |                  |
|                  |                 | to use the full  |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy         |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_options | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | Jacobian         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| jit              | OT_BOOL         | Use just-in-time | casadi::Function |
|                  |                 | compiler to      | Internal         |
|                  |                 | speed up the     |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| jit_cleanup      | OT_BOOL         | Cleanup up the   | casadi::Function |
|                  |                 | temporary source | Internal         |
|                  |                 | file that jit    |                  |
|                  |                 | creates.         |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| jit_name         | OT_STRING       | The file name    | casadi::Function |
|                  |                 | used to write    | Internal         |
|                  |                 | out code. The    |                  |
|                  |                 | actual file      |                  |
|                  |                 | names used       |                  |
|                  |                 | depend on 'jit_t |                  |
|                  |                 | emp_suffix' and  |                  |
|                  |                 | include          |                  |
|                  |                 | extensions.      |                  |
|                  |                 | Default:         |                  |
|                  |                 | 'jit_tmp'        |                  |
+------------------+-----------------+------------------+------------------+
| jit_options      | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | jit compiler.    |                  |
+------------------+-----------------+------------------+------------------+
| jit_serialize    | OT_STRING       | Specify          | casadi::Function |
|                  |                 | behaviour when   | Internal         |
|                  |                 | serializing a    |                  |
|                  |                 | jitted function: |                  |
|                  |                 | SOURCE|link|embe |                  |
|                  |                 | d.               |                  |
+------------------+-----------------+------------------+------------------+
| jit_temp_suffix  | OT_BOOL         | Use a temporary  | casadi::Function |
|                  |                 | (seemingly       | Internal         |
|                  |                 | random) filename |                  |
|                  |                 | suffix for       |                  |
|                  |                 | generated code   |                  |
|                  |                 | and libraries.   |                  |
|                  |                 | This is desired  |                  |
|                  |                 | for thread-      |                  |
|                  |                 | safety. This     |                  |
|                  |                 | behaviour may    |                  |
|                  |                 | defeat caching   |                  |
|                  |                 | compiler         |                  |
|                  |                 | wrappers.        |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| max_io           | OT_INT          | Acceptable       | casadi::Function |
|                  |                 | number of inputs | Internal         |
|                  |                 | and outputs.     |                  |
|                  |                 | Warn if          |                  |
|                  |                 | exceeded.        |                  |
+------------------+-----------------+------------------+------------------+
| max_num_dir      | OT_INT          | Specify the      | casadi::Function |
|                  |                 | maximum number   | Internal         |
|                  |                 | of directions    |                  |
|                  |                 | for derivative   |                  |
|                  |                 | functions.       |                  |
|                  |                 | Overrules the    |                  |
|                  |                 | builtin optimize |                  |
|                  |                 | d_num_dir.       |                  |
+------------------+-----------------+------------------+------------------+
| never_inline     | OT_BOOL         | Forbid inlining. | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| output_scheme    | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| post_expand      | OT_BOOL         | After            | casadi::Function |
|                  |                 | construction,    | Internal         |
|                  |                 | expand this      |                  |
|                  |                 | Function .       |                  |
|                  |                 | Default: False   |                  |
+------------------+-----------------+------------------+------------------+
| post_expand_opti | OT_DICT         | Options to be    | casadi::Function |
| ons              |                 | passed to post-  | Internal         |
|                  |                 | construction     |                  |
|                  |                 | expansion.       |                  |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| print_in         | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_out        | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs          |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_time       | OT_BOOL         | print            | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time. Implies    |                  |
|                  |                 | record_time.     |                  |
+------------------+-----------------+------------------+------------------+
| record_time      | OT_BOOL         | record           | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time, for        |                  |
|                  |                 | retrieval with   |                  |
|                  |                 | stats() .        |                  |
+------------------+-----------------+------------------+------------------+
| regularity_check | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when NaN or Inf  | ction            |
|                  |                 | appears during   |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| reverse_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | reverse mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| user_data        | OT_VOIDPTR      | A user-defined   | casadi::Function |
|                  |                 | field that can   | Internal         |
|                  |                 | be used to       |                  |
|                  |                 | identify the     |                  |
|                  |                 | function or pass |                  |
|                  |                 | additional       |                  |
|                  |                 | information      |                  |
+------------------+-----------------+------------------+------------------+
| verbose          | OT_BOOL         | Verbose          | casadi::ProtoFun |
|                  |                 | evaluation  for  | ction            |
|                  |                 | debugging        |                  |
+------------------+-----------------+------------------+------------------+

C++ includes: function.hpp
";

%feature("docstring")  casadi::Function::buf_in(VecArg arg) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L557

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L352-L361

";

%feature("docstring")  casadi::Function::buf_in(MapArg arg) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L564

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L386-L398

";

%feature("docstring")  casadi::Function::buf_out(VecRes res) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L559

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L363-L372

";

%feature("docstring")  casadi::Function::buf_out(VPrRes res) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L561

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L374-L384

";

%feature("docstring")  casadi::Function::buf_out(MapRes res) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L566

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L400-L412

";

%feature("docstring")  casadi::Function::buf_out(MPrRes res) const "

[INTERNAL] 
Supported arguments for numerical evaluation and converters.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L568

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L414-L427

";

%feature("docstring")  casadi::Function::jit(const std::string &name, const 
std::string &body, const std::vector< std::string > &name_in, const 
std::vector< std::string > &name_out, const Dict &opts=Dict()) "

[INTERNAL] 
Create a just-in-time compiled function from a C language 
string.

The names and sparsity patterns of all the inputs and outputs must be 

provided. If sparsities are not provided, all inputs and outputs are 

assumed to be scalar. Only specify the function body, assuming that 
input 
and output nonzeros are stored in arrays with the specified 
naming 
convension. The data type used is 'casadi_real', which is 
typically equal 
to 'double or another data type with the same API as 'double.

Inputs may be null pointers. This means that the all entries are zero.
 
Outputs may be null points. This means that the corresponding result 
can be
 ignored.

If an error occurs in the evaluation, issue \"return 1;\";

The final generated function will have a structure similar to:

casadi_int fname(const casadi_real** arg, casadi_real** res, 
casadi_int* 
iw, casadi_real* w, void* mem) { const casadi_real *x1, 
*x2; casadi_real 
*r1, *r2; x1 = *arg++; x2 = *arg++; r1 = *res++; r2 =
 *res++; 
<FUNCTION_BODY> return 0; }

Extra doc: https://github.com/casadi/casadi/wiki/L_1v3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L185

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L253-L260

";

%feature("docstring")  casadi::Function::jit(const std::string &name, const 
std::string &body, const std::vector< std::string > &name_in, const 
std::vector< std::string > &name_out, const std::vector< Sparsity > 
&sparsity_in, const std::vector< Sparsity > &sparsity_out, const Dict 
&opts=Dict()) "

[INTERNAL] 
Create a just-in-time compiled function from a C language 
string.

The names and sparsity patterns of all the inputs and outputs must be 

provided. If sparsities are not provided, all inputs and outputs are 

assumed to be scalar. Only specify the function body, assuming that 
input 
and output nonzeros are stored in arrays with the specified 
naming 
convension. The data type used is 'casadi_real', which is 
typically equal 
to 'double or another data type with the same API as 'double.

Inputs may be null pointers. This means that the all entries are zero.
 
Outputs may be null points. This means that the corresponding result 
can be
 ignored.

If an error occurs in the evaluation, issue \"return 1;\";

The final generated function will have a structure similar to:

casadi_int fname(const casadi_real** arg, casadi_real** res, 
casadi_int* 
iw, casadi_real* w, void* mem) { const casadi_real *x1, 
*x2; casadi_real 
*r1, *r2; x1 = *arg++; x2 = *arg++; r1 = *res++; r2 =
 *res++; 
<FUNCTION_BODY> return 0; }

Extra doc: https://github.com/casadi/casadi/wiki/L_1v3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L262-L274

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const std::vector< SX > &ex_in, const std::vector< SX > &ex_out, const Dict 
&opts=Dict()) "

[INTERNAL] 
Construct an SX function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L81

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L94-L98

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const std::vector< SX > &ex_in, const std::vector< SX > &ex_out, const 
std::vector< std::string > &name_in, const std::vector< std::string > 
&name_out, const Dict &opts=Dict()) "

[INTERNAL] 
Construct an SX function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L85

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L100-L106

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const std::map< std::string, SX > &dict, const std::vector< std::string > 
&name_in, const std::vector< std::string > &name_out, const Dict 
&opts=Dict()) "

[INTERNAL] 
Construct an SX function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L91

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L181-L185

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const std::vector< MX > &ex_in, const std::vector< MX > &ex_out, const Dict 
&opts=Dict()) "

[INTERNAL] 
Construct an  MX function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L101

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L108-L112

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const std::vector< MX > &ex_in, const std::vector< MX > &ex_out, const 
std::vector< std::string > &name_in, const std::vector< std::string > 
&name_out, const Dict &opts=Dict()) "

[INTERNAL] 
Construct an  MX function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L105

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L114-L120

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const std::map< std::string, MX > &dict, const std::vector< std::string > 
&name_in, const std::vector< std::string > &name_out, const Dict 
&opts=Dict()) "

[INTERNAL] 
Construct an  MX function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L111

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L187-L191

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
SXIList ex_in, const SXVector &ex_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L122

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L122-L125

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const SXVector &ex_in, SXIList ex_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L124

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L127-L130

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
SXIList ex_in, SXIList ex_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L126

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L132-L134

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
SXIList ex_in, const SXVector &ex_out, const StringVector &name_in, const 
StringVector &name_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L128

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L136-L140

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const SXVector &ex_in, SXIList ex_out, const StringVector &name_in, const 
StringVector &name_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L142-L145

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
SXIList ex_in, SXIList ex_out, const StringVector &name_in, const 
StringVector &name_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L134

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L147-L150

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
MXIList ex_in, const MXVector &ex_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L137

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L152-L155

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const MXVector &ex_in, MXIList ex_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L139

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L157-L160

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
MXIList ex_in, MXIList ex_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L141

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L162-L164

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
MXIList ex_in, const MXVector &ex_out, const StringVector &name_in, const 
StringVector &name_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L143

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L166-L169

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
const MXVector &ex_in, MXIList ex_out, const StringVector &name_in, const 
StringVector &name_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L146

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L171-L174

";

%feature("docstring") casadi::Function::Function(const std::string &name, 
MXIList ex_in, MXIList ex_out, const StringVector &name_in, const 
StringVector &name_out, const Dict &opts=Dict()) "

[INTERNAL] 
To resolve ambiguity on some compilers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L149

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L176-L179

";

%feature("docstring") casadi::Function::Function() "

[INTERNAL] 
Default constructor, null pointer.

Extra doc: https://github.com/casadi/casadi/wiki/L_1uy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L70

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L56-L57

";

%feature("docstring") casadi::Function::Function(const std::string &fname) "

[INTERNAL] 
Construct from a file.

Extra doc: https://github.com/casadi/casadi/wiki/L_1uz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L75

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L90-L92

";

%feature("docstring")  casadi::Function::expand() const "

[INTERNAL] 
Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L276-L284

";

%feature("docstring") casadi::casadi_expand "

Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L276-L284

";

%feature("docstring")  casadi::Function::casadi_expand "

Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L276-L284

";

%feature("docstring")  casadi::Function::expand(const std::string &name, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L286-L302

";

%feature("docstring") casadi::casadi_expand "

Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L286-L302

";

%feature("docstring")  casadi::Function::casadi_expand "

Expand a function to SX.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L286-L302

";

%feature("docstring")  casadi::Function::size1_in(casadi_int ind) const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L239

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L795-L797

";

%feature("docstring")  casadi::Function::size1_in(const std::string &iname) 
const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L240

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L240-L240

";

%feature("docstring")  casadi::Function::size2_in(casadi_int ind) const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L241

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L799-L801

";

%feature("docstring")  casadi::Function::size2_in(const std::string &iname) 
const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L242

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L242-L242

";

%feature("docstring")  casadi::Function::size_in(casadi_int ind) const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L243

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L811-L813

";

%feature("docstring")  casadi::Function::size_in(const std::string &iname) 
const "

[INTERNAL] 
Get input dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1va

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L244

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L244-L246

";

%feature("docstring")  casadi::Function::size1_out(casadi_int ind) const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L253

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L803-L805

";

%feature("docstring")  casadi::Function::size1_out(const std::string &oname)
 const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L254

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L254-L254

";

%feature("docstring")  casadi::Function::size2_out(casadi_int ind) const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L255

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L807-L809

";

%feature("docstring")  casadi::Function::size2_out(const std::string &oname)
 const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L256

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L256-L256

";

%feature("docstring")  casadi::Function::size_out(casadi_int ind) const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L257

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L815-L817

";

%feature("docstring")  casadi::Function::size_out(const std::string &oname) 
const "

[INTERNAL] 
Get output dimension.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L258

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L258-L260

";

%feature("docstring")  casadi::Function::nnz_in() const "

[INTERNAL] 
Get number of input nonzeros.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L269

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L819-L821

";

%feature("docstring")  casadi::Function::nnz_in(casadi_int ind) const "

[INTERNAL] 
Get number of input nonzeros.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L270

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L835-L837

";

%feature("docstring")  casadi::Function::nnz_in(const std::string &iname) 
const "

[INTERNAL] 
Get number of input nonzeros.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L271

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L271-L271

";

%feature("docstring")  casadi::Function::nnz_out() const "

[INTERNAL] 
Get number of output nonzeros.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L280

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L823-L825

";

%feature("docstring")  casadi::Function::nnz_out(casadi_int ind) const "

[INTERNAL] 
Get number of output nonzeros.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L281

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L839-L841

";

%feature("docstring")  casadi::Function::nnz_out(const std::string &oname) 
const "

[INTERNAL] 
Get number of output nonzeros.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L282

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L282-L282

";

%feature("docstring")  casadi::Function::numel_in() const "

[INTERNAL] 
Get number of input elements.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1ve

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L291

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L827-L829

";

%feature("docstring")  casadi::Function::numel_in(casadi_int ind) const "

[INTERNAL] 
Get number of input elements.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1ve

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L292

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L843-L845

";

%feature("docstring")  casadi::Function::numel_in(const std::string &iname) 
const "

[INTERNAL] 
Get number of input elements.

For a particular input or for all of the inputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1ve

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L293

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L293-L293

";

%feature("docstring")  casadi::Function::numel_out() const "

[INTERNAL] 
Get number of output elements.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L302

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L831-L833

";

%feature("docstring")  casadi::Function::numel_out(casadi_int ind) const "

[INTERNAL] 
Get number of output elements.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L303

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L847-L849

";

%feature("docstring")  casadi::Function::numel_out(const std::string &oname)
 const "

[INTERNAL] 
Get number of output elements.

For a particular output or for all of the outputs

Extra doc: https://github.com/casadi/casadi/wiki/L_1vf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L304

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L304-L304

";

%feature("docstring")  casadi::Function::sparsity_in(casadi_int ind) const "

[INTERNAL] 
Get sparsity of a given input.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L372

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L959-L965

";

%feature("docstring")  casadi::Function::sparsity_in(const std::string 
&iname) const "

[INTERNAL] 
Get sparsity of a given input.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L373

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L967-L973

";

%feature("docstring")  casadi::Function::sparsity_out(casadi_int ind) const 
"

[INTERNAL] 
Get sparsity of a given output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L975-L981

";

%feature("docstring")  casadi::Function::sparsity_out(const std::string 
&iname) const "

[INTERNAL] 
Get sparsity of a given output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L381

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L983-L989

";

%feature("docstring")  casadi::Function::is_diff_in(casadi_int ind) const "

[INTERNAL] 
Get differentiability of inputs/output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L388

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L991-L997

";

%feature("docstring")  casadi::Function::is_diff_in() const "

[INTERNAL] 
Get differentiability of inputs/output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L390

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1007-L1013

";

%feature("docstring")  casadi::Function::is_diff_out(casadi_int ind) const "

[INTERNAL] 
Get differentiability of inputs/output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L389

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L999-L1005

";

%feature("docstring")  casadi::Function::is_diff_out() const "

[INTERNAL] 
Get differentiability of inputs/output.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L391

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1015-L1021

";

%feature("docstring")  casadi::Function::sparsity_jac(casadi_int iind, 
casadi_int oind, bool compact=false, bool symmetric=false) const "

[DEPRECATED] Get, if necessary generate, the sparsity of a Jacobian 
block

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L475

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L875-L881

";

%feature("docstring")  casadi::Function::sparsity_jac(const std::string 
&iind, casadi_int oind=0, bool compact=false, bool symmetric=false) const "

[DEPRECATED] Get, if necessary generate, the sparsity of a Jacobian 
block

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L477

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L477-L480

";

%feature("docstring")  casadi::Function::sparsity_jac(casadi_int iind, const
 std::string &oind, bool compact=false, bool symmetric=false) const "

[DEPRECATED] Get, if necessary generate, the sparsity of a Jacobian 
block

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L481

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L481-L484

";

%feature("docstring")  casadi::Function::sparsity_jac(const std::string 
&iind, const std::string &oind, bool compact=false, bool symmetric=false) 
const "

[DEPRECATED] Get, if necessary generate, the sparsity of a Jacobian 
block

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L485

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L485-L488

";

%feature("docstring")  casadi::Function::call(const std::vector< DM > &arg, 
std::vector< DM > &res, bool always_inline=false, bool never_inline=false) 
const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L325-L332

";

%feature("docstring")  casadi::Function::call(const std::vector< SX > &arg, 
std::vector< SX > &res, bool always_inline=false, bool never_inline=false) 
const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L516

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L334-L341

";

%feature("docstring")  casadi::Function::call(const std::vector< MX > &arg, 
std::vector< MX > &res, bool always_inline=false, bool never_inline=false) 
const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L343-L350

";

%feature("docstring")  casadi::Function::call(const DMDict &arg, DMDict 
&res, bool always_inline=false, bool never_inline=false) const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L520

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1396-L1403

";

%feature("docstring")  casadi::Function::call(const SXDict &arg, SXDict 
&res, bool always_inline=false, bool never_inline=false) const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L522

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1405-L1412

";

%feature("docstring")  casadi::Function::call(const MXDict &arg, MXDict 
&res, bool always_inline=false, bool never_inline=false) const "

[INTERNAL] 
Evaluate the function symbolically or numerically.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L524

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1414-L1421

";

%feature("docstring")  casadi::Function::call_gen(std::vector< const D * > 
arg, std::vector< D * > res) const "

[INTERNAL] 
Evaluate with temporary memory allocation.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L430-L445

";

%feature("docstring")  casadi::Function::call_gen(const std::map< 
std::string, M > &arg, std::map< std::string, M > &res, bool always_inline, 
bool never_inline) const "

[INTERNAL] 
Call using a map.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1129

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1362-L1376

";

%feature("docstring")  casadi::Function::mapaccum(const std::string &name, 
casadi_int N, const Dict &opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L686

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L487-L489

";

%feature("docstring")  casadi::Function::mapaccum(const std::string &name, 
casadi_int N, casadi_int n_accum, const Dict &opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L687

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L490-L518

";

%feature("docstring")  casadi::Function::mapaccum(const std::string &name, 
casadi_int n, const std::vector< casadi_int > &accum_in, const std::vector< 
casadi_int > &accum_out, const Dict &opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L689

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L565-L593

";

%feature("docstring")  casadi::Function::mapaccum(const std::string &name, 
casadi_int n, const std::vector< std::string > &accum_in, const std::vector<
 std::string > &accum_out, const Dict &opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L693

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L595-L603

";

%feature("docstring")  casadi::Function::mapaccum(casadi_int N, const Dict 
&opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L697

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L484-L486

";

%feature("docstring")  casadi::Function::fold(casadi_int N, const Dict 
&opts=Dict()) const "

[INTERNAL] 
Create a mapaccumulated version of this function.

Suppose the function has a signature of:

::

     f: (x, u) -> (x_next , y )
  



The the mapaccumulated version has the signature:

::

     F: (x0, U) -> (X , Y )
  
      with
          U: horzcat([u0, u1, ..., u_(N-1)])
          X: horzcat([x1, x2, ..., x_N])
          Y: horzcat([y0, y1, ..., y_(N-1)])
  
      and
          x1, y0 <- f(x0, u0)
          x2, y1 <- f(x1, u1)
          ...
          x_N, y_(N-1) <- f(x_(N-1), u_(N-1))
  



Mapaccum has the following benefits over writing an equivalent for-
loop:

much faster at construction time

potentially much faster compilation times (for codegen)

offers a trade-off between memory and evaluation time

The base (settable through the options dictionary, default 10), is 
used to 
create a tower of function calls, containing unrolled for-
loops of length 
maximum base.

This technique is much more scalable in terms of memory-usage, but 
slightly
 slower at evaluation, than a plain for-loop. The effect is 
similar to that
 of a for-loop with a check-pointing instruction after 
each chunk of 
iterations with size base.

Set base to -1 to unroll all the way; no gains in memory efficiency 
here.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L698

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L477-L483

";

%feature("docstring")  casadi::Function::map(const std::string &name, const 
std::string &parallelization, casadi_int n, const std::vector< casadi_int > 
&reduce_in, const std::vector< casadi_int > &reduce_out, const Dict 
&opts=Dict()) const "

[INTERNAL] 
Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L737

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L613-L634

";

%feature("docstring") casadi::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L737

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L613-L634

";

%feature("docstring")  casadi::Function::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L737

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L613-L634

";

%feature("docstring")  casadi::Function::map(const std::string &name, const 
std::string &parallelization, casadi_int n, const std::vector< std::string >
 &reduce_in, const std::vector< std::string > &reduce_out, const Dict 
&opts=Dict()) const "

[INTERNAL] 
Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L741

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L636-L643

";

%feature("docstring") casadi::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L741

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L636-L643

";

%feature("docstring")  casadi::Function::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L741

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L636-L643

";

%feature("docstring")  casadi::Function::map(casadi_int n, const 
std::vector< bool > &reduce_in, const std::vector< bool > 
&reduce_out=std::vector< bool >(), const Dict &opts=Dict()) const "

[INTERNAL] 
Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L605-L611

";

%feature("docstring") casadi::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L605-L611

";

%feature("docstring")  casadi::Function::casadi_map "

Map with reduction.

A subset of the inputs are non-repeated and a subset of the outputs 
summed 
up.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L605-L611

";

%feature("docstring")  casadi::Function::map(casadi_int n, const std::string
 &parallelization="serial") const "

[INTERNAL] 
Create a mapped version of this function.

Suppose the function has a signature of:

::

     f: (a, p) -> ( s )
  



The the mapped version has the signature:

::

     F: (A, P) -> (S )
  
      with
          A: horzcat([a0, a1, ..., a_(N-1)])
          P: horzcat([p0, p1, ..., p_(N-1)])
          S: horzcat([s0, s1, ..., s_(N-1)])
      and
          s0 <- f(a0, p0)
          s1 <- f(a1, p1)
          ...
          s_(N-1) <- f(a_(N-1), p_(N-1))
  



Parameters:
-----------

parallelization: 
Type of parallelization used: unroll|serial|openmp

Extra doc: https://github.com/casadi/casadi/wiki/L_1wj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L677-L712

";

%feature("docstring") casadi::casadi_map "

Create a mapped version of this function.

Suppose the function has a signature of:

::

     f: (a, p) -> ( s )
  



The the mapped version has the signature:

::

     F: (A, P) -> (S )
  
      with
          A: horzcat([a0, a1, ..., a_(N-1)])
          P: horzcat([p0, p1, ..., p_(N-1)])
          S: horzcat([s0, s1, ..., s_(N-1)])
      and
          s0 <- f(a0, p0)
          s1 <- f(a1, p1)
          ...
          s_(N-1) <- f(a_(N-1), p_(N-1))
  



Parameters:
-----------

parallelization: 
Type of parallelization used: unroll|serial|openmp

Extra doc: https://github.com/casadi/casadi/wiki/L_1wj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L677-L712

";

%feature("docstring")  casadi::Function::casadi_map "

Create a mapped version of this function.

Suppose the function has a signature of:

::

     f: (a, p) -> ( s )
  



The the mapped version has the signature:

::

     F: (A, P) -> (S )
  
      with
          A: horzcat([a0, a1, ..., a_(N-1)])
          P: horzcat([p0, p1, ..., p_(N-1)])
          S: horzcat([s0, s1, ..., s_(N-1)])
      and
          s0 <- f(a0, p0)
          s1 <- f(a1, p1)
          ...
          s_(N-1) <- f(a_(N-1), p_(N-1))
  



Parameters:
-----------

parallelization: 
Type of parallelization used: unroll|serial|openmp

Extra doc: https://github.com/casadi/casadi/wiki/L_1wj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L677-L712

";

%feature("docstring")  casadi::Function::map(casadi_int n, const std::string
 &parallelization, casadi_int max_num_threads) const "

[INTERNAL] ";

%feature("docstring")  casadi::Function::generate_in(const std::string 
&fname, const std::vector< DM > &arg) "

[INTERNAL] 
Export an input file that can be passed to generate C code with 
a 
main.

See: 
 generate_out

See: 
 convert_in to convert between dict/map and vector

Extra doc: https://github.com/casadi/casadi/wiki/L_1wx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L854

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1146-L1159

";

%feature("docstring")  casadi::Function::generate_in(const std::string 
&fname) "

[INTERNAL] 
Export an input file that can be passed to generate C code with 
a 
main.

See: 
 generate_out

See: 
 convert_in to convert between dict/map and vector

Extra doc: https://github.com/casadi/casadi/wiki/L_1wx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L855

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1176-L1186

";

%feature("docstring")  casadi::Function::generate_out(const std::string 
&fname, const std::vector< DM > &arg) "

[INTERNAL] 
Export an output file that can be checked with generated C code
 
output.

See: 
 generate_in

See: 
 convert_out to convert between dict/map and vector

Extra doc: https://github.com/casadi/casadi/wiki/L_1wy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L865

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1161-L1174

";

%feature("docstring")  casadi::Function::generate_out(const std::string 
&fname) "

[INTERNAL] 
Export an output file that can be checked with generated C code
 
output.

See: 
 generate_in

See: 
 convert_out to convert between dict/map and vector

Extra doc: https://github.com/casadi/casadi/wiki/L_1wy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L866

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1188-L1198

";

%feature("docstring")  casadi::Function::export_code(const std::string 
&lang, const std::string &fname, const Dict &options=Dict()) const "

[INTERNAL] 
Export function in specific language.

Only allowed for (a subset of) SX/MX Functions

Extra doc: https://github.com/casadi/casadi/wiki/L_1wz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L875

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1205-L1209

";

%feature("docstring")  casadi::Function::export_code(const std::string 
&lang, const Dict &options=Dict()) const "

[INTERNAL] 
Export function in specific language.

Only allowed for (a subset of) SX/MX Functions

Extra doc: https://github.com/casadi/casadi/wiki/L_1wz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L902

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1244-L1248

";

%feature("docstring")  casadi::Function::export_code(const std::string 
&lang, std::ostream &stream, const Dict &options=Dict()) const "

[INTERNAL] 
Export function in specific language.

Only allowed for (a subset of) SX/MX Functions

Extra doc: https://github.com/casadi/casadi/wiki/L_1wz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L904

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1200-L1203

";

%feature("docstring")  casadi::Function::serialize(std::ostream &stream, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Serialize.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L882

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1223-L1226

";

%feature("docstring")  casadi::Function::serialize(SerializingStream &s) 
const "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L887

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1228-L1235

";

%feature("docstring")  casadi::Function::serialize(const Dict &opts=Dict()) 
const "

[INTERNAL] 
Serialize.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L893

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1217-L1221

";

%feature("docstring")  casadi::Function::save(const std::string &fname, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Save  Function to a file.

See: 
 load

Extra doc: https://github.com/casadi/casadi/wiki/L_240

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L900

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1212-L1215

";

%feature("docstring")  casadi::Function::sx_in(casadi_int iind) const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L940

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1495-L1501

";

%feature("docstring")  casadi::Function::sx_in(const std::string &iname) 
const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L941

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L941-L943

";

%feature("docstring")  casadi::Function::sx_in() const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L944

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1511-L1517

";

%feature("docstring")  casadi::Function::mx_in(casadi_int ind) const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L945

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1527-L1529

";

%feature("docstring")  casadi::Function::mx_in(const std::string &iname) 
const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L946

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L946-L948

";

%feature("docstring")  casadi::Function::mx_in() const "

[INTERNAL] 
Get symbolic primitives equivalent to the input expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L949

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1535-L1537

";

%feature("docstring")  casadi::Function::sx_out(casadi_int oind) const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L958

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1503-L1509

";

%feature("docstring")  casadi::Function::sx_out(const std::string &oname) 
const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L959

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L959-L961

";

%feature("docstring")  casadi::Function::sx_out() const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L962

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1519-L1525

";

%feature("docstring")  casadi::Function::mx_out(casadi_int ind) const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L963

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1531-L1533

";

%feature("docstring")  casadi::Function::mx_out(const std::string &oname) 
const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L964

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L964-L966

";

%feature("docstring")  casadi::Function::mx_out() const "

[INTERNAL] 
Get symbolic primitives equivalent to the output expressions.

There is no guarantee that subsequent calls return unique answers

Extra doc: https://github.com/casadi/casadi/wiki/L_1x5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L967

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1539-L1541

";

%feature("docstring")  casadi::Function::nz_from_in(const std::vector< DM > 
&arg) const "

[INTERNAL] 
Convert from/to flat vector of input/output nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L974

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1543-L1545

";

%feature("docstring")  casadi::Function::nz_from_out(const std::vector< DM >
 &arg) const "

[INTERNAL] 
Convert from/to flat vector of input/output nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L975

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1547-L1549

";

%feature("docstring")  casadi::Function::nz_to_in(const std::vector< double 
> &arg) const "

[INTERNAL] 
Convert from/to flat vector of input/output nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L976

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1551-L1553

";

%feature("docstring")  casadi::Function::nz_to_out(const std::vector< double
 > &arg) const "

[INTERNAL] 
Convert from/to flat vector of input/output nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L977

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1555-L1557

";

%feature("docstring")  casadi::Function::convert_in(const std::vector< DM > 
&arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L987

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1559-L1561

";

%feature("docstring")  casadi::Function::convert_in(const DMDict &arg) const
 "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L988

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1563-L1565

";

%feature("docstring")  casadi::Function::convert_in(const std::vector< SX > 
&arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L991

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1575-L1577

";

%feature("docstring")  casadi::Function::convert_in(const SXDict &arg) const
 "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L992

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1579-L1581

";

%feature("docstring")  casadi::Function::convert_in(const std::vector< MX > 
&arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L995

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1591-L1593

";

%feature("docstring")  casadi::Function::convert_in(const MXDict &arg) const
 "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L996

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1595-L1597

";

%feature("docstring")  casadi::Function::convert_out(const std::vector< DM >
 &arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L989

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1567-L1569

";

%feature("docstring")  casadi::Function::convert_out(const DMDict &arg) 
const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L990

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1571-L1573

";

%feature("docstring")  casadi::Function::convert_out(const std::vector< SX >
 &arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L993

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1583-L1585

";

%feature("docstring")  casadi::Function::convert_out(const SXDict &arg) 
const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L994

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1587-L1589

";

%feature("docstring")  casadi::Function::convert_out(const std::vector< MX >
 &arg) const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L997

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1599-L1601

";

%feature("docstring")  casadi::Function::convert_out(const MXDict &arg) 
const "

[INTERNAL] 
Convert from/to input/output lists/map.

Will raise an error when an unknown key is used or a list has 
incorrect 
size. Does not perform sparsity checking.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L998

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1603-L1605

";

%feature("docstring")  casadi::Function::has_spfwd() const "

[INTERNAL] 
Is the class able to propagate seeds through the algorithm?

Extra doc: https://github.com/casadi/casadi/wiki/L_1xl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1078

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1627-L1629

";

%feature("docstring")  casadi::Function::has_sprev() const "

[INTERNAL] 
Is the class able to propagate seeds through the algorithm?

Extra doc: https://github.com/casadi/casadi/wiki/L_1xl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1079

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1631-L1633

";

%feature("docstring") casadi::Function::~Function "

[INTERNAL] 
Destructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L59-L60

";

%feature("docstring")  casadi::Function::n_in() const "

[INTERNAL] 
Get the number of function inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L228

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L787-L789

";

%feature("docstring")  casadi::Function::n_out() const "

[INTERNAL] 
Get the number of function outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1v9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L791-L793

";

%feature("docstring")  casadi::Function::name_in() const "

[INTERNAL] 
Get input scheme.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L310

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L919-L921

";

%feature("docstring")  casadi::Function::name_in(casadi_int ind) const "

[INTERNAL] 
Get input scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L320

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L943-L949

";

%feature("docstring")  casadi::Function::name_out() const "

[INTERNAL] 
Get output scheme.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L315

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L923-L925

";

%feature("docstring")  casadi::Function::name_out(casadi_int ind) const "

[INTERNAL] 
Get output scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L325

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L951-L957

";

%feature("docstring")  casadi::Function::index_in(const std::string &name) 
const "

[INTERNAL] 
Find the index for a string describing a particular entry of an 
input 
scheme.

example: schemeEntry(\"x_opt\") -> returns NLPSOL_X if 
FunctionInternal 
adheres to SCHEME_NLPINput

Extra doc: https://github.com/casadi/casadi/wiki/L_1vk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L333

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L927-L933

";

%feature("docstring")  casadi::Function::index_out(const std::string &name) 
const "

[INTERNAL] 
Find the index for a string describing a particular entry of an 
output
 scheme.

example: schemeEntry(\"x_opt\") -> returns NLPSOL_X if 
FunctionInternal 
adheres to SCHEME_NLPINput

Extra doc: https://github.com/casadi/casadi/wiki/L_1vl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L341

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L935-L941

";

%feature("docstring")  casadi::Function::default_in(casadi_int ind) const "

[INTERNAL] 
Get default input value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L346

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1423-L1425

";

%feature("docstring")  casadi::Function::max_in(casadi_int ind) const "

[INTERNAL] 
Get largest input value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L351

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1427-L1429

";

%feature("docstring")  casadi::Function::min_in(casadi_int ind) const "

[INTERNAL] 
Get smallest input value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L356

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1431-L1433

";

%feature("docstring")  casadi::Function::nominal_in(casadi_int ind) const "

[INTERNAL] 
Get nominal input value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L361

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1435-L1437

";

%feature("docstring")  casadi::Function::nominal_out(casadi_int ind) const "

[INTERNAL] 
Get nominal output value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L366

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1439-L1441

";

%feature("docstring")  casadi::Function::factory(const std::string &name, 
const std::vector< std::string > &s_in, const std::vector< std::string > 
&s_out, const AuxOut &aux=AuxOut(), const Dict &opts=Dict()) const "

[INTERNAL] ";

%feature("docstring")  casadi::Function::oracle() const "

[INTERNAL] 
Get oracle.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L407

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1846-L1852

";

%feature("docstring")  casadi::Function::wrap() const "

[INTERNAL] 
Wrap in an  Function instance consisting of only one  MX call.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L412

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1854-L1856

";

%feature("docstring")  casadi::Function::wrap_as_needed(const Dict &opts) 
const "

[INTERNAL] 
Wrap in a  Function with options.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L417

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1858-L1860

";

%feature("docstring")  casadi::Function::which_depends(const std::string 
&s_in, const std::vector< std::string > &s_out, casadi_int order=1, bool 
tr=false) const "

[INTERNAL] 
Which variables enter with some order.

Parameters:
-----------

order: 
Only 1 (linear) and 2 (nonlinear) allowed

tr: 
Flip the relationship. Return which expressions contain the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1vx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1764-L1771

";

%feature("docstring") casadi::casadi_which_depends "

Which variables enter with some order.

Parameters:
-----------

order: 
Only 1 (linear) and 2 (nonlinear) allowed

tr: 
Flip the relationship. Return which expressions contain the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1vx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1764-L1771

";

%feature("docstring")  casadi::Function::casadi_which_depends "

Which variables enter with some order.

Parameters:
-----------

order: 
Only 1 (linear) and 2 (nonlinear) allowed

tr: 
Flip the relationship. Return which expressions contain the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1vx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1764-L1771

";

%feature("docstring")  casadi::Function::print_dimensions(std::ostream 
&stream=casadi::uout()) const "

[INTERNAL] 
Print dimensions of inputs and outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L432

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1095-L1097

";

%feature("docstring")  casadi::Function::print_options(std::ostream 
&stream=casadi::uout()) const "

[INTERNAL] 
Print options to a stream.

Extra doc: https://github.com/casadi/casadi/wiki/L_1vz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L437

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1099-L1101

";

%feature("docstring")  casadi::Function::print_option(const std::string 
&name, std::ostream &stream=casadi::uout()) const "

[INTERNAL] 
Print all information there is to know about a certain option.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L442

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1103-L1105

";

%feature("docstring")  casadi::Function::has_option(const std::string 
&option_name) const "

[INTERNAL] 
Does a particular option exist.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L447

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1107-L1114

";

%feature("docstring")  casadi::Function::change_option(const std::string 
&option_name, const GenericType &option_value) "

[INTERNAL] 
Change option after object creation for debugging.

This is only possible for a selected number of options that do not 
change 
the numerical results of the computation, e.g. to enable a more
 verbose 
output or saving to file.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L455

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1116-L1126

";

%feature("docstring")  casadi::Function::uses_output() const "

[INTERNAL] 
Do the derivative functions need nondifferentiated outputs?

Extra doc: https://github.com/casadi/casadi/wiki/L_1w3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L460

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L851-L853

";

%feature("docstring")  casadi::Function::jacobian_old(casadi_int iind, 
casadi_int oind) const "

[DEPRECATED] Replaced by  Function::factory.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L466

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L856-L862

";

%feature("docstring")  casadi::Function::hessian_old(casadi_int iind, 
casadi_int oind) const "

[DEPRECATED] Replaced by  Function::factory.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L471

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L864-L872

";

%feature("docstring")  casadi::Function::jacobian() const "

[INTERNAL] 
Calculate all Jacobian blocks.

Generates a function that takes all non-differentiated inputs and 
outputs 
and calculates all Jacobian blocks. Inputs that are not needed
 by the 
routine are all-zero sparse matrices with the correct 
dimensions.  Output 
blocks that are not calculated, e.g. if the corresponding input or 
output 
is marked non-differentiated are also all-zero sparse. The 
Jacobian blocks 
are sorted starting by all the blocks for the first 
output, then all the 
blocks for the second output and so on. E.g. f : 
(x, y) -> (r, s) results 
in the function jac_f : (x, y, out_r, out_s) 
-> (jac_r_x, jac_r_y, jac_s_x,
 jac_s_y)

This function is cached.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L884-L890

";

%feature("docstring") casadi::casadi_jacobian "

Calculate all Jacobian blocks.

Generates a function that takes all non-differentiated inputs and 
outputs 
and calculates all Jacobian blocks. Inputs that are not needed
 by the 
routine are all-zero sparse matrices with the correct 
dimensions.  Output 
blocks that are not calculated, e.g. if the corresponding input or 
output 
is marked non-differentiated are also all-zero sparse. The 
Jacobian blocks 
are sorted starting by all the blocks for the first 
output, then all the 
blocks for the second output and so on. E.g. f : 
(x, y) -> (r, s) results 
in the function jac_f : (x, y, out_r, out_s) 
-> (jac_r_x, jac_r_y, jac_s_x,
 jac_s_y)

This function is cached.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L884-L890

";

%feature("docstring")  casadi::Function::casadi_jacobian "

Calculate all Jacobian blocks.

Generates a function that takes all non-differentiated inputs and 
outputs 
and calculates all Jacobian blocks. Inputs that are not needed
 by the 
routine are all-zero sparse matrices with the correct 
dimensions.  Output 
blocks that are not calculated, e.g. if the corresponding input or 
output 
is marked non-differentiated are also all-zero sparse. The 
Jacobian blocks 
are sorted starting by all the blocks for the first 
output, then all the 
blocks for the second output and so on. E.g. f : 
(x, y) -> (r, s) results 
in the function jac_f : (x, y, out_r, out_s) 
-> (jac_r_x, jac_r_y, jac_s_x,
 jac_s_y)

This function is cached.

Extra doc: https://github.com/casadi/casadi/wiki/L_1w6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L508

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L884-L890

";

%feature("docstring")  casadi::Function::rev(bvec_t **arg, bvec_t **res, 
casadi_int *iw, bvec_t *w, int mem=0) const "

[INTERNAL] 
Propagate sparsity backward.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L628

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1044-L1050

";

%feature("docstring")  casadi::Function::rev(std::vector< bvec_t * > arg, 
std::vector< bvec_t * > res) const "

[INTERNAL] 
Propagate sparsity backward with temporary memory allocation.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L633

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L460-L475

";

%feature("docstring")  casadi::Function::mapsum(const std::vector< MX > &x, 
const std::string &parallelization="serial") const "

[INTERNAL] 
Evaluate symbolically in parallel and sum (matrix graph)

Parameters:
-----------

parallelization: 
Type of parallelization used: unroll|serial|openmp

Extra doc: https://github.com/casadi/casadi/wiki/L_1wh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L642

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L724-L731

";

%feature("docstring")  casadi::Function::slice(const std::string &name, 
const std::vector< casadi_int > &order_in, const std::vector< casadi_int > 
&order_out, const Dict &opts=Dict()) const "

[INTERNAL] 
returns a new function with a selection of inputs/outputs of the
 
original

Extra doc: https://github.com/casadi/casadi/wiki/L_1wl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L715-L722

";

%feature("docstring") casadi::casadi_slice "

returns a new function with a selection of inputs/outputs of the 
original

Extra doc: https://github.com/casadi/casadi/wiki/L_1wl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L715-L722

";

%feature("docstring")  casadi::Function::casadi_slice "

returns a new function with a selection of inputs/outputs of the 
original

Extra doc: https://github.com/casadi/casadi/wiki/L_1wl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L715-L722

";

%feature("docstring")  casadi::Function::forward(casadi_int nfwd) const "

[INTERNAL] 
Get a function that calculates  nfwd forward derivatives.



::

     Returns a function with <tt>n_in + n_out + n_in</tt> inputs
     and <tt>nfwd</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_in</tt> inputs correspond to forward seeds,
     stacked horizontally
     The  <tt>n_out</tt> outputs correspond to forward sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L800

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1079-L1085

";

%feature("docstring") casadi::casadi_forward "

Get a function that calculates  nfwd forward derivatives.



::

     Returns a function with <tt>n_in + n_out + n_in</tt> inputs
     and <tt>nfwd</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_in</tt> inputs correspond to forward seeds,
     stacked horizontally
     The  <tt>n_out</tt> outputs correspond to forward sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L800

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1079-L1085

";

%feature("docstring")  casadi::Function::casadi_forward "

Get a function that calculates  nfwd forward derivatives.



::

     Returns a function with <tt>n_in + n_out + n_in</tt> inputs
     and <tt>nfwd</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_in</tt> inputs correspond to forward seeds,
     stacked horizontally
     The  <tt>n_out</tt> outputs correspond to forward sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L800

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1079-L1085

";

%feature("docstring")  casadi::Function::reverse(casadi_int nadj) const "

[INTERNAL] 
Get a function that calculates  nadj adjoint derivatives.



::

     Returns a function with <tt>n_in + n_out + n_out</tt> inputs
     and <tt>n_in</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_out</tt> inputs correspond to adjoint seeds,
     stacked horizontally
     The  <tt>n_in</tt> outputs correspond to adjoint sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L820

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1087-L1093

";

%feature("docstring") casadi::casadi_reverse "

Get a function that calculates  nadj adjoint derivatives.



::

     Returns a function with <tt>n_in + n_out + n_out</tt> inputs
     and <tt>n_in</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_out</tt> inputs correspond to adjoint seeds,
     stacked horizontally
     The  <tt>n_in</tt> outputs correspond to adjoint sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L820

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1087-L1093

";

%feature("docstring")  casadi::Function::casadi_reverse "

Get a function that calculates  nadj adjoint derivatives.



::

     Returns a function with <tt>n_in + n_out + n_out</tt> inputs
     and <tt>n_in</tt> outputs.
     The first <tt>n_in</tt> inputs correspond to nondifferentiated inputs.
     The next <tt>n_out</tt> inputs correspond to nondifferentiated outputs.
     and the last <tt>n_out</tt> inputs correspond to adjoint seeds,
     stacked horizontally
     The  <tt>n_in</tt> outputs correspond to adjoint sensitivities,
     stacked horizontally.     *
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
     <tt>(n_in = n_in(), n_out = n_out())</tt>
  
    The functions returned are cached, meaning that if called multiple timed
    with the same value, then multiple references to the same function will be returned.
  

Extra doc: https://github.com/casadi/casadi/wiki/L_1wr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L820

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1087-L1093

";

%feature("docstring")  casadi::Function::jac_sparsity(bool compact=false) 
const "

[INTERNAL] 
Get, if necessary generate, the sparsity of all Jacobian blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ws

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L825

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L900-L909

";

%feature("docstring")  casadi::Function::jac_sparsity(casadi_int oind, 
casadi_int iind, bool compact=false) const "

[INTERNAL] 
Get, if necessary generate, the sparsity of a single Jacobian 
block.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L830

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L911-L917

";

%feature("docstring")  casadi::Function::generate(const std::string &fname, 
const Dict &opts=Dict()) const "

[INTERNAL] 
Export / Generate C code for the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L835

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1136-L1140

";

%feature("docstring")  casadi::Function::generate(const Dict &opts=Dict()) 
const "

[INTERNAL] 
Export / Generate C code for the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1wv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L840

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1132-L1134

";

%feature("docstring")  casadi::Function::generate_dependencies(const 
std::string &fname, const Dict &opts=Dict()) const "

[INTERNAL] 
Export / Generate C code for the dependency function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ww

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L845

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1142-L1144

";

%feature("docstring")  casadi::Function::stats(int mem=0) const "

[INTERNAL] 
Get all statistics obtained at the end of the last evaluate 
call.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L932

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L896-L898

";

%feature("docstring")  casadi::Function::has_free() const "

[INTERNAL] 
Does the function have free variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1004

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1635-L1637

";

%feature("docstring")  casadi::Function::get_free() const "

[INTERNAL] 
Get free variables as a string.

Extra doc: https://github.com/casadi/casadi/wiki/L_1x9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1009

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1128-L1130

";

%feature("docstring")  casadi::Function::free_sx() const "

[INTERNAL] 
Get all the free variables of the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1014

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1611-L1617

";

%feature("docstring")  casadi::Function::free_mx() const "

[INTERNAL] 
Get all the free variables of the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1019

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1619-L1625

";

%feature("docstring")  casadi::Function::generate_lifted(Function &vdef_fcn,
 Function &vinit_fcn) const "

[INTERNAL] 
Extract the functions needed for the Lifted  Newton method.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1024

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1639-L1645

";

%feature("docstring")  casadi::Function::n_nodes() const "

[INTERNAL] 
Number of nodes in the algorithm.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1030

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1703-L1709

";

%feature("docstring")  casadi::Function::n_instructions() const "

[INTERNAL] 
Number of instruction in the algorithm (SXFunction/MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1035

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1647-L1653

";

%feature("docstring")  casadi::Function::instruction_id(casadi_int k) const 
"

[INTERNAL] 
Identifier index of the instruction (SXFunction/MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1040

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1671-L1677

";

%feature("docstring")  casadi::Function::instruction_input(casadi_int k) 
const "

[INTERNAL] 
Locations in the work vector for the inputs of the instruction.

(SXFunction/MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1047

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1679-L1685

";

%feature("docstring")  casadi::Function::instruction_constant(casadi_int k) 
const "

[INTERNAL] 
Get the floating point output argument of an instruction 
(SXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1052

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1687-L1693

";

%feature("docstring")  casadi::Function::instruction_output(casadi_int k) 
const "

[INTERNAL] 
Location in the work vector for the output of the instruction.

(SXFunction/MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1059

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1695-L1701

";

%feature("docstring")  casadi::Function::instruction_MX(casadi_int k) const 
"

[INTERNAL] 
Get the  MX node corresponding to an instruction (MXFunction)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1064

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1655-L1661

";

%feature("docstring")  casadi::Function::instructions_sx() const "

[INTERNAL] 
Get the SX node corresponding to all instructions (SXFunction)

Note: input and output instructions have no SX representation. This 
method 
returns nan for those instructions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1072

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1663-L1669

";

%feature("docstring")  casadi::Function::sz_arg() const "

[INTERNAL] 
Get required length of arg field.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1085

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1027-L1027

";

%feature("docstring")  casadi::Function::sz_res() const "

[INTERNAL] 
Get required length of res field.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1090

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1029-L1029

";

%feature("docstring")  casadi::Function::sz_iw() const "

[INTERNAL] 
Get required length of iw field.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1095

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1031-L1031

";

%feature("docstring")  casadi::Function::sz_w() const "

[INTERNAL] 
Get required length of w field.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1100

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1033-L1033

";

%feature("docstring")  casadi::Function::sz_work(size_t &sz_arg, size_t 
&sz_res, size_t &sz_iw, size_t &sz_w) const "

[INTERNAL] 
Get number of temporary variables needed.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1106

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1023-L1025

";

%feature("docstring")  casadi::Function::set_work(const double **&arg, 
double **&res, casadi_int *&iw, double *&w, int mem=0) const "

[INTERNAL] 
Set the (persistent) work vectors.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1111

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1052-L1059

";

%feature("docstring")  casadi::Function::set_temp(const double **arg, double
 **res, casadi_int *iw, double *w, int mem=0) const "

[INTERNAL] 
Set the (temporary) work vectors.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1117

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1061-L1068

";

%feature("docstring")  casadi::Function::setup(const double **arg, double 
**res, casadi_int *iw, double *w, int mem=0) const "

[INTERNAL] 
Set the (persistent and temporary) work vectors.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1123

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1070-L1077

";

%feature("docstring")  casadi::Function::name() const "

[INTERNAL] 
Name of the function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1xv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1137

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1250-L1257

";

%feature("docstring")  casadi::Function::is_a(const std::string &type, bool 
recursive=true) const "

[INTERNAL] 
Check if the function is of a particular type.

Optionally check if name matches one of the base classes (default 
true)

Extra doc: https://github.com/casadi/casadi/wiki/L_1xw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1144

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1607-L1609

";

%feature("docstring")  casadi::Function::assert_size_in(casadi_int i, 
casadi_int nrow, casadi_int ncol) const "

[INTERNAL] 
Assert that an input dimension is equal so some given value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1723-L1729

";

%feature("docstring")  casadi::Function::assert_size_out(casadi_int i, 
casadi_int nrow, casadi_int ncol) const "

[INTERNAL] 
Assert that an output dimension is equal so some given value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1192

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1731-L1736

";

%feature("docstring")  casadi::Function::assert_sparsity_out(casadi_int i, 
const Sparsity &sp, casadi_int n=1, bool allow_all_zero_sparse=true) const "

[INTERNAL] 
Assert that an output sparsity is a multiple of some given 
sparsity.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1195

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1738-L1747

";

%feature("docstring")  casadi::Function::checkout() const "

[INTERNAL] 
Checkout a memory object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1199

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1711-L1713

";

%feature("docstring")  casadi::Function::release(int mem) const "

[INTERNAL] 
Release a memory object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1202

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1715-L1717

";

%feature("docstring")  casadi::Function::memory(int ind) const "

[INTERNAL] 
Get memory object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1719-L1721

";

%feature("docstring")  casadi::Function::cache() const "

[INTERNAL] 
Get all functions in the cache.

Extra doc: https://github.com/casadi/casadi/wiki/L_26i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1212

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1773-L1780

";

%feature("docstring")  casadi::Function::get_function() const "

[INTERNAL] 
Get a list of all functions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1y3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1217

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1782-L1789

";

%feature("docstring")  casadi::Function::get_function(const std::string 
&name) const "

[INTERNAL] 
Get a dependency function.

Extra doc: https://github.com/casadi/casadi/wiki/L_1y4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1791-L1797

";

%feature("docstring")  casadi::Function::has_function(const std::string 
&fname) const "

[INTERNAL] 
Check if a particular dependency exists.

Extra doc: https://github.com/casadi/casadi/wiki/L_1y5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1227

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1799-L1806

";

%feature("docstring")  casadi::Function::find_functions(casadi_int 
max_depth=-1) const "

[INTERNAL] 
Get all functions embedded in the expression graphs.

Parameters:
-----------

max_depth: 
Maximum depth - a negative number indicates no maximum

Extra doc: https://github.com/casadi/casadi/wiki/L_1y6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1234

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1808-L1824

";

%feature("docstring")  casadi::Function::find_function(const std::string 
&name, casadi_int max_depth=-1) const "

[INTERNAL] 
Get a specific function embedded in the expression graphs.

Parameters:
-----------

name: 
Name of function needed

max_depth: 
Maximum depth - a negative number indicates no maximum

Extra doc: https://github.com/casadi/casadi/wiki/L_1y7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1242

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1826-L1843

";

%feature("docstring")  casadi::Function::info() const "

[INTERNAL] 
Obtain information about function

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1245

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1872-L1874

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::Function::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1FunctionBuffer.xml
%feature("docstring") casadi::FunctionBuffer "

[INTERNAL] 
Class to achieve minimal overhead function evaluations.

Extra doc: https://github.com/casadi/casadi/wiki/L_1y9

C++ includes: function.hpp
";

%feature("docstring") casadi::FunctionBuffer::FunctionBuffer(const Function 
&f) "

[INTERNAL] 
Main constructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ya

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1309

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1876-L1884

";

%feature("docstring") casadi::FunctionBuffer::FunctionBuffer(const 
FunctionBuffer &f) "

[INTERNAL] ";

%feature("docstring") casadi::FunctionBuffer::~FunctionBuffer "

[INTERNAL] ";

%feature("docstring")  casadi::FunctionBuffer::set_arg(casadi_int i, const 
double *a, casadi_int size) "

[INTERNAL] 
Set input buffer for input i.

mem.set_arg(0, memoryview(a))

Note that CasADi uses 'fortran' order: column-by-column

Extra doc: https://github.com/casadi/casadi/wiki/L_1yb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1323

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1912-L1917

";

%feature("docstring")  casadi::FunctionBuffer::set_res(casadi_int i, double 
*a, casadi_int size) "

[INTERNAL] 
Set output buffer for ouput i.

mem.set_res(0, memoryview(a))

Note that CasADi uses 'fortran' order: column-by-column

Extra doc: https://github.com/casadi/casadi/wiki/L_1yc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1332

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1918-L1923

";

%feature("docstring")  casadi::FunctionBuffer::ret() "

[INTERNAL] 
Get last return value.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.hpp#L1334

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/function.cpp#L1931-L1933

";

%feature("docstring") casadi::FunctionBuffer::_eval "

[INTERNAL] ";

%feature("docstring") casadi::FunctionBuffer::_self "

[INTERNAL] ";


// File: classcasadi_1_1GenericExpression.xml
%feature("docstring") casadi::GenericExpressionCommon "

[INTERNAL] 
Expression interface.

This is a common base class for SX,  MX and Matrix<>, introducing a uniform 
syntax and implementing common 
functionality using the curiously recurring 
template pattern (CRTP) 
idiom.
Joel Andersson

C++ includes: generic_expression.hpp
";

%feature("docstring")  casadi::GenericExpressionCommon::minus(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83-L85

";

%feature("docstring") casadi::casadi_minus "

Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83-L85

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_minus "

Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83-L85

";

%feature("docstring")  casadi::GenericExpressionCommon::minus(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L86

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L86-L88

";

%feature("docstring") casadi::casadi_minus "

Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L86

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L86-L88

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_minus "

Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L86

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L86-L88

";

%feature("docstring")  casadi::GenericExpressionCommon::times(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99-L101

";

%feature("docstring") casadi::casadi_times "

Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99-L101

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_times "

Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99-L101

";

%feature("docstring")  casadi::GenericExpressionCommon::times(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L102

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L102-L104

";

%feature("docstring") casadi::casadi_times "

Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L102

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L102-L104

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_times "

Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L102

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L102-L104

";

%feature("docstring")  casadi::GenericExpressionCommon::rdivide(const ExType
 &x, const ExType &y) "

[INTERNAL] 
Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115-L117

";

%feature("docstring") casadi::casadi_rdivide "

Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115-L117

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_rdivide "

Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115-L117

";

%feature("docstring")  casadi::GenericExpressionCommon::rdivide(const ExType
 &x, const ExType &y) "

[INTERNAL] 
Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L118

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L118-L120

";

%feature("docstring") casadi::casadi_rdivide "

Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L118

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L118-L120

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_rdivide "

Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L118

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L118-L120

";

%feature("docstring")  casadi::GenericExpressionCommon::lt(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131-L133

";

%feature("docstring") casadi::casadi_lt "

Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131-L133

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_lt "

Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131-L133

";

%feature("docstring")  casadi::GenericExpressionCommon::lt(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L134

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L134-L136

";

%feature("docstring") casadi::casadi_lt "

Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L134

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L134-L136

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_lt "

Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L134

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L134-L136

";

%feature("docstring")  casadi::GenericExpressionCommon::le(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146-L148

";

%feature("docstring") casadi::casadi_le "

Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146-L148

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_le "

Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146-L148

";

%feature("docstring")  casadi::GenericExpressionCommon::le(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L149

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L149-L151

";

%feature("docstring") casadi::casadi_le "

Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L149

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L149-L151

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_le "

Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L149

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L149-L151

";

%feature("docstring")  casadi::GenericExpressionCommon::gt(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161-L163

";

%feature("docstring") casadi::casadi_gt "

Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161-L163

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_gt "

Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161-L163

";

%feature("docstring")  casadi::GenericExpressionCommon::gt(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L164

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L164-L166

";

%feature("docstring") casadi::casadi_gt "

Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L164

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L164-L166

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_gt "

Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L164

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L164-L166

";

%feature("docstring")  casadi::GenericExpressionCommon::ge(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176-L178

";

%feature("docstring") casadi::casadi_ge "

Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176-L178

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ge "

Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176-L178

";

%feature("docstring")  casadi::GenericExpressionCommon::ge(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L179

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L179-L181

";

%feature("docstring") casadi::casadi_ge "

Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L179

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L179-L181

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ge "

Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L179

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L179-L181

";

%feature("docstring")  casadi::GenericExpressionCommon::eq(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191-L193

";

%feature("docstring") casadi::casadi_eq "

Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191-L193

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_eq "

Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191-L193

";

%feature("docstring")  casadi::GenericExpressionCommon::eq(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L194

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L194-L196

";

%feature("docstring") casadi::casadi_eq "

Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L194

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L194-L196

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_eq "

Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L194

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L194-L196

";

%feature("docstring")  casadi::GenericExpressionCommon::ne(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206-L208

";

%feature("docstring") casadi::casadi_ne "

Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206-L208

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ne "

Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206-L208

";

%feature("docstring")  casadi::GenericExpressionCommon::ne(const ExType &x, 
const ExType &y) "

[INTERNAL] 
Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L209

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L209-L211

";

%feature("docstring") casadi::casadi_ne "

Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L209

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L209-L211

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ne "

Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L209

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L209-L211

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_and(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Logical  and

Returns (an expression evaluating to) 1 if both expressions are 
nonzero and
 0 otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_ox

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L224

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L224-L226

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_and(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Logical  and

Returns (an expression evaluating to) 1 if both expressions are 
nonzero and
 0 otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_ox

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L227

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L227-L229

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_or(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Logical  or

returns (an expression evaluating to) 1 if at least one expression is 

nonzero and 0 otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_oy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L242

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L242-L244

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_or(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Logical  or

returns (an expression evaluating to) 1 if at least one expression is 

nonzero and 0 otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_oy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L245

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L245-L247

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_not(const 
ExType &x) "

[INTERNAL] 
Logical  not x -> !x.

Returns (an expression evaluating to) 1 if expression is zero and 0 

otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_oz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L260

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L260-L262

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_not(const 
ExType &x) "

[INTERNAL] 
Logical  not x -> !x.

Returns (an expression evaluating to) 1 if expression is zero and 0 

otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_oz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L263

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L263-L265

";

%feature("docstring")  casadi::GenericExpressionCommon::abs(const ExType &x)
 "

[INTERNAL] 
Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275-L277

";

%feature("docstring") casadi::casadi_abs "

Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275-L277

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_abs "

Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275-L277

";

%feature("docstring")  casadi::GenericExpressionCommon::abs(const ExType &x)
 "

[INTERNAL] 
Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L278

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L278-L280

";

%feature("docstring") casadi::casadi_abs "

Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L278

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L278-L280

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_abs "

Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L278

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L278-L280

";

%feature("docstring")  casadi::GenericExpressionCommon::fabs(const ExType 
&x) "

[INTERNAL] 
Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L281

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L281-L283

";

%feature("docstring")  casadi::GenericExpressionCommon::sqrt(const ExType 
&x) "

[INTERNAL] 
Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290-L292

";

%feature("docstring") casadi::casadi_sqrt "

Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290-L292

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sqrt "

Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290-L292

";

%feature("docstring")  casadi::GenericExpressionCommon::sqrt(const ExType 
&x) "

[INTERNAL] 
Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L293

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L293-L295

";

%feature("docstring") casadi::casadi_sqrt "

Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L293

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L293-L295

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sqrt "

Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L293

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L293-L295

";

%feature("docstring")  casadi::GenericExpressionCommon::sq(const ExType &x) 
"

[INTERNAL] 
Square: x -> x^2.

Extra doc: https://github.com/casadi/casadi/wiki/L_p2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L302

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L302-L304

";

%feature("docstring")  casadi::GenericExpressionCommon::sq(const ExType &x) 
"

[INTERNAL] 
Square: x -> x^2.

Extra doc: https://github.com/casadi/casadi/wiki/L_p2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L305

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L305-L307

";

%feature("docstring")  casadi::GenericExpressionCommon::sin(const ExType &x)
 "

[INTERNAL] 
Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314-L316

";

%feature("docstring") casadi::casadi_sin "

Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314-L316

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sin "

Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314-L316

";

%feature("docstring")  casadi::GenericExpressionCommon::sin(const ExType &x)
 "

[INTERNAL] 
Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L317

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L317-L319

";

%feature("docstring") casadi::casadi_sin "

Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L317

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L317-L319

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sin "

Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L317

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L317-L319

";

%feature("docstring")  casadi::GenericExpressionCommon::cos(const ExType &x)
 "

[INTERNAL] 
Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326-L328

";

%feature("docstring") casadi::casadi_cos "

Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326-L328

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_cos "

Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326-L328

";

%feature("docstring")  casadi::GenericExpressionCommon::cos(const ExType &x)
 "

[INTERNAL] 
Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L329

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L329-L331

";

%feature("docstring") casadi::casadi_cos "

Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L329

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L329-L331

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_cos "

Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L329

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L329-L331

";

%feature("docstring")  casadi::GenericExpressionCommon::tan(const ExType &x)
 "

[INTERNAL] 
Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338-L340

";

%feature("docstring") casadi::casadi_tan "

Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338-L340

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_tan "

Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338-L340

";

%feature("docstring")  casadi::GenericExpressionCommon::tan(const ExType &x)
 "

[INTERNAL] 
Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L341

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L341-L343

";

%feature("docstring") casadi::casadi_tan "

Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L341

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L341-L343

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_tan "

Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L341

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L341-L343

";

%feature("docstring")  casadi::GenericExpressionCommon::atan(const ExType 
&x) "

[INTERNAL] 
Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350-L352

";

%feature("docstring") casadi::casadi_atan "

Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350-L352

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atan "

Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350-L352

";

%feature("docstring")  casadi::GenericExpressionCommon::atan(const ExType 
&x) "

[INTERNAL] 
Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L353

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L353-L355

";

%feature("docstring") casadi::casadi_atan "

Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L353

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L353-L355

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atan "

Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L353

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L353-L355

";

%feature("docstring")  casadi::GenericExpressionCommon::asin(const ExType 
&x) "

[INTERNAL] 
Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362-L364

";

%feature("docstring") casadi::casadi_asin "

Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362-L364

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_asin "

Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362-L364

";

%feature("docstring")  casadi::GenericExpressionCommon::asin(const ExType 
&x) "

[INTERNAL] 
Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L365

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L365-L367

";

%feature("docstring") casadi::casadi_asin "

Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L365

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L365-L367

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_asin "

Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L365

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L365-L367

";

%feature("docstring")  casadi::GenericExpressionCommon::acos(const ExType 
&x) "

[INTERNAL] 
Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374-L376

";

%feature("docstring") casadi::casadi_acos "

Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374-L376

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_acos "

Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374-L376

";

%feature("docstring")  casadi::GenericExpressionCommon::acos(const ExType 
&x) "

[INTERNAL] 
Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L377

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L377-L379

";

%feature("docstring") casadi::casadi_acos "

Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L377

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L377-L379

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_acos "

Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L377

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L377-L379

";

%feature("docstring")  casadi::GenericExpressionCommon::tanh(const ExType 
&x) "

[INTERNAL] 
Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386-L388

";

%feature("docstring") casadi::casadi_tanh "

Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386-L388

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_tanh "

Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386-L388

";

%feature("docstring")  casadi::GenericExpressionCommon::tanh(const ExType 
&x) "

[INTERNAL] 
Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L389

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L389-L391

";

%feature("docstring") casadi::casadi_tanh "

Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L389

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L389-L391

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_tanh "

Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L389

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L389-L391

";

%feature("docstring")  casadi::GenericExpressionCommon::sinh(const ExType 
&x) "

[INTERNAL] 
Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398-L400

";

%feature("docstring") casadi::casadi_sinh "

Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398-L400

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sinh "

Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398-L400

";

%feature("docstring")  casadi::GenericExpressionCommon::sinh(const ExType 
&x) "

[INTERNAL] 
Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L401

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L401-L403

";

%feature("docstring") casadi::casadi_sinh "

Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L401

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L401-L403

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sinh "

Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L401

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L401-L403

";

%feature("docstring")  casadi::GenericExpressionCommon::cosh(const ExType 
&x) "

[INTERNAL] 
Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410-L412

";

%feature("docstring") casadi::casadi_cosh "

Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410-L412

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_cosh "

Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410-L412

";

%feature("docstring")  casadi::GenericExpressionCommon::cosh(const ExType 
&x) "

[INTERNAL] 
Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L413

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L413-L415

";

%feature("docstring") casadi::casadi_cosh "

Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L413

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L413-L415

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_cosh "

Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L413

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L413-L415

";

%feature("docstring")  casadi::GenericExpressionCommon::atanh(const ExType 
&x) "

[INTERNAL] 
Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422-L424

";

%feature("docstring") casadi::casadi_atanh "

Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422-L424

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atanh "

Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422-L424

";

%feature("docstring")  casadi::GenericExpressionCommon::atanh(const ExType 
&x) "

[INTERNAL] 
Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L425-L427

";

%feature("docstring") casadi::casadi_atanh "

Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L425-L427

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atanh "

Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L425

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L425-L427

";

%feature("docstring")  casadi::GenericExpressionCommon::asinh(const ExType 
&x) "

[INTERNAL] 
Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434-L436

";

%feature("docstring") casadi::casadi_asinh "

Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434-L436

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_asinh "

Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434-L436

";

%feature("docstring")  casadi::GenericExpressionCommon::asinh(const ExType 
&x) "

[INTERNAL] 
Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L437

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L437-L439

";

%feature("docstring") casadi::casadi_asinh "

Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L437

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L437-L439

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_asinh "

Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L437

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L437-L439

";

%feature("docstring")  casadi::GenericExpressionCommon::acosh(const ExType 
&x) "

[INTERNAL] 
Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446-L448

";

%feature("docstring") casadi::casadi_acosh "

Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446-L448

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_acosh "

Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446-L448

";

%feature("docstring")  casadi::GenericExpressionCommon::acosh(const ExType 
&x) "

[INTERNAL] 
Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L449

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L449-L451

";

%feature("docstring") casadi::casadi_acosh "

Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L449

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L449-L451

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_acosh "

Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L449

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L449-L451

";

%feature("docstring")  casadi::GenericExpressionCommon::exp(const ExType &x)
 "

[INTERNAL] 
Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458-L460

";

%feature("docstring") casadi::casadi_exp "

Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458-L460

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_exp "

Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458-L460

";

%feature("docstring")  casadi::GenericExpressionCommon::exp(const ExType &x)
 "

[INTERNAL] 
Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L461

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L461-L463

";

%feature("docstring") casadi::casadi_exp "

Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L461

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L461-L463

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_exp "

Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L461

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L461-L463

";

%feature("docstring")  casadi::GenericExpressionCommon::log(const ExType &x)
 "

[INTERNAL] 
Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470-L472

";

%feature("docstring") casadi::casadi_log "

Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470-L472

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log "

Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470-L472

";

%feature("docstring")  casadi::GenericExpressionCommon::log(const ExType &x)
 "

[INTERNAL] 
Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L473

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L473-L475

";

%feature("docstring") casadi::casadi_log "

Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L473

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L473-L475

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log "

Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L473

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L473-L475

";

%feature("docstring")  casadi::GenericExpressionCommon::log10(const ExType 
&x) "

[INTERNAL] 
Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482-L484

";

%feature("docstring") casadi::casadi_log10 "

Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482-L484

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log10 "

Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482-L484

";

%feature("docstring")  casadi::GenericExpressionCommon::log10(const ExType 
&x) "

[INTERNAL] 
Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L485

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L485-L487

";

%feature("docstring") casadi::casadi_log10 "

Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L485

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L485-L487

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log10 "

Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L485

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L485-L487

";

%feature("docstring")  casadi::GenericExpressionCommon::log1p(const ExType 
&x) "

[INTERNAL] 
Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494-L496

";

%feature("docstring") casadi::casadi_log1p "

Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494-L496

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log1p "

Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494-L496

";

%feature("docstring")  casadi::GenericExpressionCommon::log1p(const ExType 
&x) "

[INTERNAL] 
Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L497

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L497-L499

";

%feature("docstring") casadi::casadi_log1p "

Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L497

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L497-L499

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log1p "

Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L497

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L497-L499

";

%feature("docstring")  casadi::GenericExpressionCommon::expm1(const ExType 
&x) "

[INTERNAL] 
Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506-L508

";

%feature("docstring") casadi::casadi_expm1 "

Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506-L508

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_expm1 "

Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506-L508

";

%feature("docstring")  casadi::GenericExpressionCommon::expm1(const ExType 
&x) "

[INTERNAL] 
Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L509

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L509-L511

";

%feature("docstring") casadi::casadi_expm1 "

Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L509

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L509-L511

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_expm1 "

Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L509

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L509-L511

";

%feature("docstring")  casadi::GenericExpressionCommon::floor(const ExType 
&x) "

[INTERNAL] 
Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518-L520

";

%feature("docstring") casadi::casadi_floor "

Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518-L520

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_floor "

Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518-L520

";

%feature("docstring")  casadi::GenericExpressionCommon::floor(const ExType 
&x) "

[INTERNAL] 
Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L521

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L521-L523

";

%feature("docstring") casadi::casadi_floor "

Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L521

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L521-L523

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_floor "

Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L521

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L521-L523

";

%feature("docstring")  casadi::GenericExpressionCommon::ceil(const ExType 
&x) "

[INTERNAL] 
Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530-L532

";

%feature("docstring") casadi::casadi_ceil "

Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530-L532

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ceil "

Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530-L532

";

%feature("docstring")  casadi::GenericExpressionCommon::ceil(const ExType 
&x) "

[INTERNAL] 
Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L533

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L533-L535

";

%feature("docstring") casadi::casadi_ceil "

Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L533

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L533-L535

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ceil "

Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L533

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L533-L535

";

%feature("docstring")  casadi::GenericExpressionCommon::erf(const ExType &x)
 "

[INTERNAL] 
Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542-L544

";

%feature("docstring") casadi::casadi_erf "

Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542-L544

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_erf "

Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542-L544

";

%feature("docstring")  casadi::GenericExpressionCommon::erf(const ExType &x)
 "

[INTERNAL] 
Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L545

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L545-L547

";

%feature("docstring") casadi::casadi_erf "

Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L545

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L545-L547

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_erf "

Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L545

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L545-L547

";

%feature("docstring")  casadi::GenericExpressionCommon::erfinv(const ExType 
&x) "

[INTERNAL] 
Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554-L556

";

%feature("docstring") casadi::casadi_erfinv "

Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554-L556

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_erfinv "

Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554-L556

";

%feature("docstring")  casadi::GenericExpressionCommon::erfinv(const ExType 
&x) "

[INTERNAL] 
Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L557

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L557-L559

";

%feature("docstring") casadi::casadi_erfinv "

Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L557

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L557-L559

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_erfinv "

Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L557

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L557-L559

";

%feature("docstring")  casadi::GenericExpressionCommon::sign(const ExType 
&x) "

[INTERNAL] 
Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571-L573

";

%feature("docstring") casadi::casadi_sign "

Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571-L573

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sign "

Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571-L573

";

%feature("docstring")  casadi::GenericExpressionCommon::sign(const ExType 
&x) "

[INTERNAL] 
Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L574

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L574-L576

";

%feature("docstring") casadi::casadi_sign "

Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L574

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L574-L576

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sign "

Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L574

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L574-L576

";

%feature("docstring")  casadi::GenericExpressionCommon::pow(const ExType &x,
 const ExType &y) "

[INTERNAL] 
Elementwise power: (x,y) -> x.^y.

Extra doc: https://github.com/casadi/casadi/wiki/L_pp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L583

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L583-L585

";

%feature("docstring")  casadi::GenericExpressionCommon::pow(const ExType &x,
 const ExType &y) "

[INTERNAL] 
Elementwise power: (x,y) -> x.^y.

Extra doc: https://github.com/casadi/casadi/wiki/L_pp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L586

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L586-L588

";

%feature("docstring")  casadi::GenericExpressionCommon::mod(const ExType &x,
 const ExType &y) "

[INTERNAL] 
Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607-L609

";

%feature("docstring") casadi::casadi_mod "

Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607-L609

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_mod "

Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607-L609

";

%feature("docstring")  casadi::GenericExpressionCommon::mod(const ExType &x,
 const ExType &y) "

[INTERNAL] 
Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L610

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L610-L612

";

%feature("docstring") casadi::casadi_mod "

Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L610

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L610-L612

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_mod "

Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L610

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L610-L612

";

%feature("docstring")  casadi::GenericExpressionCommon::fmod(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L613

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L613-L615

";

%feature("docstring") casadi::casadi_fmod "

Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L613

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L613-L615

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_fmod "

Remainder after division: (x,y) -> fmod(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L613

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L613-L615

";

%feature("docstring")  casadi::GenericExpressionCommon::remainder(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Remainder after division: (x,y) -> remainder(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634-L636

";

%feature("docstring") casadi::casadi_remainder "

Remainder after division: (x,y) -> remainder(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634-L636

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_remainder "

Remainder after division: (x,y) -> remainder(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634-L636

";

%feature("docstring")  casadi::GenericExpressionCommon::remainder(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Remainder after division: (x,y) -> remainder(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L637

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L637-L639

";

%feature("docstring") casadi::casadi_remainder "

Remainder after division: (x,y) -> remainder(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L637

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L637-L639

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_remainder "

Remainder after division: (x,y) -> remainder(x,y)

This  Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L637

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L637-L639

";

%feature("docstring")  casadi::GenericExpressionCommon::atan2(const ExType 
&y, const ExType &x) "

[INTERNAL] 
Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648-L650

";

%feature("docstring") casadi::casadi_atan2 "

Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648-L650

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atan2 "

Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648-L650

";

%feature("docstring")  casadi::GenericExpressionCommon::atan2(const ExType 
&y, const ExType &x) "

[INTERNAL] 
Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L651

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L651-L653

";

%feature("docstring") casadi::casadi_atan2 "

Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L651

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L651-L653

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atan2 "

Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L651

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L651-L653

";

%feature("docstring")  casadi::GenericExpressionCommon::if_else_zero(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Conditional assignment: (x,y) -> x ? y : 0.

Extra doc: https://github.com/casadi/casadi/wiki/L_ps

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L660

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L660-L662

";

%feature("docstring")  casadi::GenericExpressionCommon::if_else_zero(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Conditional assignment: (x,y) -> x ? y : 0.

Extra doc: https://github.com/casadi/casadi/wiki/L_ps

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L663

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L663-L665

";

%feature("docstring")  casadi::GenericExpressionCommon::fmin(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672-L674

";

%feature("docstring") casadi::casadi_fmin "

Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672-L674

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_fmin "

Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672-L674

";

%feature("docstring")  casadi::GenericExpressionCommon::fmin(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L675

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L675-L677

";

%feature("docstring") casadi::casadi_fmin "

Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L675

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L675-L677

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_fmin "

Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L675

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L675-L677

";

%feature("docstring")  casadi::GenericExpressionCommon::fmax(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684-L686

";

%feature("docstring") casadi::casadi_fmax "

Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684-L686

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_fmax "

Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684-L686

";

%feature("docstring")  casadi::GenericExpressionCommon::fmax(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L687

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L687-L689

";

%feature("docstring") casadi::casadi_fmax "

Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L687

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L687-L689

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_fmax "

Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L687

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L687-L689

";

%feature("docstring")  casadi::GenericExpressionCommon::copysign(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710-L712

";

%feature("docstring") casadi::casadi_copysign "

Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710-L712

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_copysign "

Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710-L712

";

%feature("docstring")  casadi::GenericExpressionCommon::copysign(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L713

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L713-L715

";

%feature("docstring") casadi::casadi_copysign "

Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L713

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L713-L715

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_copysign "

Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L713

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L713-L715

";

%feature("docstring")  casadi::GenericExpressionCommon::constpow(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720-L722

";

%feature("docstring") casadi::casadi_constpow "

Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720-L722

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_constpow "

Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720-L722

";

%feature("docstring")  casadi::GenericExpressionCommon::constpow(const 
ExType &x, const ExType &y) "

[INTERNAL] 
Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L723

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L723-L725

";

%feature("docstring") casadi::casadi_constpow "

Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L723

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L723-L725

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_constpow "

Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L723

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L723-L725

";

%feature("docstring")  casadi::GenericExpressionCommon::printme(const ExType
 &x, const ExType &y) "

[INTERNAL] 
Debug printing

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L730

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L730-L732

";

%feature("docstring")  casadi::GenericExpressionCommon::printme(const ExType
 &x, const ExType &y) "

[INTERNAL] 
Debug printing

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L733

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L733-L735

";

%feature("docstring")  casadi::GenericExpressionCommon::hypot(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742-L744

";

%feature("docstring") casadi::casadi_hypot "

Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742-L744

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_hypot "

Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742-L744

";

%feature("docstring")  casadi::GenericExpressionCommon::hypot(const ExType 
&x, const ExType &y) "

[INTERNAL] 
Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L745-L747

";

%feature("docstring") casadi::casadi_hypot "

Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L745-L747

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_hypot "

Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L745-L747

";

%feature("docstring")  casadi::GenericExpressionCommon::is_equal(const 
ExType &x, const ExType &y, casadi_int depth=0) "

[INTERNAL] 
Check if two nodes are equivalent up to a given depth.

Depth=0 checks if the expressions are identical, i.e. points to the 
same 
node.

a = x*x b = x*x

is_equal(a,b,0) will return false, but a.is_equal(a,b,1) will return 
true

Extra doc: https://github.com/casadi/casadi/wiki/L_pv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L703

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L703-L705

";

%feature("docstring") casadi::casadi_is_equal "

Check if two nodes are equivalent up to a given depth.

Depth=0 checks if the expressions are identical, i.e. points to the 
same 
node.

a = x*x b = x*x

is_equal(a,b,0) will return false, but a.is_equal(a,b,1) will return 
true

Extra doc: https://github.com/casadi/casadi/wiki/L_pv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L703

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L703-L705

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_is_equal "

Check if two nodes are equivalent up to a given depth.

Depth=0 checks if the expressions are identical, i.e. points to the 
same 
node.

a = x*x b = x*x

is_equal(a,b,0) will return false, but a.is_equal(a,b,1) will return 
true

Extra doc: https://github.com/casadi/casadi/wiki/L_pv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L703

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L703-L705

";

%feature("docstring")  casadi::GenericExpressionCommon::plus(const ExType 
&x, const ExType &y) "

[INTERNAL] ";


// File: classcasadi_1_1GenericMatrix.xml


/*
 Construct symbolic primitives 
*/

/*
The \"sym\" function is intended to work in a similar way as \"sym\" 

used in the Symbolic Toolbox for Matlab but instead creating a CasADi 

symbolic primitive.

*/
%feature("docstring") casadi::GenericMatrixCommon "

[INTERNAL] 
 Matrix base class.

This is a common base class for  MX and Matrix<>, introducing a uniform 
syntax and implementing common 
functionality using the curiously recurring 
template pattern (CRTP) 
idiom.
 The class is designed with the idea that 
\"everything is a matrix\",
 that is, also scalars and vectors.
This 
philosophy makes it easy to use and to interface in particularly
 with 
Python and Matlab/Octave.
 The syntax tries to stay as close as possible to 
the ublas syntax 
when it comes to vector/matrix operations.
 Index starts 
with 0.
Index vec happens as follows: (rr, cc) -> k = rr+cc*size1()
Vectors 
are column vectors.
 The storage format is Compressed Column Storage (CCS), 
similar to 
that used for sparse matrices in Matlab, 
but unlike this 
format, we do allow for elements to be structurally 
non-zero but 
numerically zero.
 The sparsity pattern, which is reference counted and 
cached, can be 
accessed with Sparsity&  sparsity()
Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_1am

C++ includes: generic_matrix.hpp
";

%feature("docstring")  casadi::GenericMatrixCommon::get_row() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L194

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L194-L194

";

%feature("docstring")  casadi::GenericMatrixCommon::get_colind() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L195

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L195-L195

";

%feature("docstring")  casadi::GenericMatrixCommon::row() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L197

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L197-L197

";

%feature("docstring")  casadi::GenericMatrixCommon::row(casadi_int el) const
 "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L200-L200

";

%feature("docstring")  casadi::GenericMatrixCommon::colind() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L198

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L198-L198

";

%feature("docstring")  casadi::GenericMatrixCommon::colind(casadi_int col) 
const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L201

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L201-L201

";

%feature("docstring")  casadi::GenericMatrixCommon::interp1d(const 
std::vector< double > &x, const MatType &v, const std::vector< double > &xq,
 const std::string &mode, bool equidistant) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L213

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1252-L1308

";

%feature("docstring")  casadi::GenericMatrixCommon::interp1d(const 
std::vector< double > &x, const MatType &v, const std::vector< double > &xq,
 const std::string &mode, bool equidistant=false) "

[INTERNAL] 
Performs 1d linear interpolation.

The data-points to be interpolated are given as (x[i], v[i]). xq[j] is
 used
 as interplating value

Extra doc: https://github.com/casadi/casadi/wiki/L_1bh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L311

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L311-L314

";

%feature("docstring") casadi::casadi_interp1d "

Performs 1d linear interpolation.

The data-points to be interpolated are given as (x[i], v[i]). xq[j] is
 used
 as interplating value

Extra doc: https://github.com/casadi/casadi/wiki/L_1bh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L311

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L311-L314

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_interp1d "

Performs 1d linear interpolation.

The data-points to be interpolated are given as (x[i], v[i]). xq[j] is
 used
 as interplating value

Extra doc: https://github.com/casadi/casadi/wiki/L_1bh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L311

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L311-L314

";

%feature("docstring")  casadi::GenericMatrixCommon::sprank(const MatType &x)
 "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L215

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L215-L215

";

%feature("docstring")  casadi::GenericMatrixCommon::norm_0_mul(const MatType
 &x, const MatType &y) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L216

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L216-L218

";

%feature("docstring")  casadi::GenericMatrixCommon::tril(const MatType &x, 
bool includeDiagonal=true) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L219

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L219-L221

";

%feature("docstring")  casadi::GenericMatrixCommon::triu(const MatType &x, 
bool includeDiagonal=true) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L222-L224

";

%feature("docstring")  casadi::GenericMatrixCommon::sumsqr(const MatType &x)
 "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L225-L225

";

%feature("docstring")  casadi::GenericMatrixCommon::sumsqr(const MatType &x)
 "

[INTERNAL] 
Calculate sum of squares: sum_ij X_ij^2.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L429

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L429-L431

";

%feature("docstring") casadi::casadi_sumsqr "

Calculate sum of squares: sum_ij X_ij^2.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L429

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L429-L431

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_sumsqr "

Calculate sum of squares: sum_ij X_ij^2.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L429

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L429-L431

";

%feature("docstring")  casadi::GenericMatrixCommon::linspace(const MatType 
&a, const MatType &b, casadi_int nsteps) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L226

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1202-L1212

";

%feature("docstring")  casadi::GenericMatrixCommon::linspace(const MatType 
&a, const MatType &b, casadi_int nsteps) "

[INTERNAL] 
Matlab's  linspace command.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L460

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L460-L462

";

%feature("docstring") casadi::casadi_linspace "

Matlab's  linspace command.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L460

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L460-L462

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_linspace "

Matlab's  linspace command.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L460

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L460-L462

";

%feature("docstring")  casadi::GenericMatrixCommon::cross(const MatType &a, 
const MatType &b, casadi_int dim=-1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L227

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1215-L1246

";

%feature("docstring")  casadi::GenericMatrixCommon::cross(const MatType &a, 
const MatType &b, casadi_int dim=-1) "

[INTERNAL] 
Matlab's  cross command.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L467

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L467-L469

";

%feature("docstring") casadi::casadi_cross "

Matlab's  cross command.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L467

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L467-L469

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_cross "

Matlab's  cross command.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L467

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L467-L469

";

%feature("docstring")  casadi::GenericMatrixCommon::skew(const MatType &a) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L228

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1311-L1319

";

%feature("docstring")  casadi::GenericMatrixCommon::skew(const MatType &a) "

[INTERNAL] 
Generate a skew symmetric matrix from a 3-vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L474

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L474-L476

";

%feature("docstring") casadi::casadi_skew "

Generate a skew symmetric matrix from a 3-vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L474

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L474-L476

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_skew "

Generate a skew symmetric matrix from a 3-vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L474

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L474-L476

";

%feature("docstring")  casadi::GenericMatrixCommon::inv_skew(const MatType 
&a) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L229

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1322-L1327

";

%feature("docstring")  casadi::GenericMatrixCommon::inv_skew(const MatType 
&a) "

[INTERNAL] 
Generate the 3-vector progenitor of a skew symmetric matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L481

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L481-L483

";

%feature("docstring") casadi::casadi_inv_skew "

Generate the 3-vector progenitor of a skew symmetric matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L481

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L481-L483

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_inv_skew "

Generate the 3-vector progenitor of a skew symmetric matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L481

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L481-L483

";

%feature("docstring")  casadi::GenericMatrixCommon::tril2symm(const MatType 
&x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L230

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1331-L1337

";

%feature("docstring")  casadi::GenericMatrixCommon::tril2symm(const MatType 
&a) "

[INTERNAL] 
Convert a lower triangular matrix to a symmetric one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L519

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L519-L519

";

%feature("docstring") casadi::casadi_tril2symm "

Convert a lower triangular matrix to a symmetric one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L519

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L519-L519

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_tril2symm "

Convert a lower triangular matrix to a symmetric one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L519

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L519-L519

";

%feature("docstring")  casadi::GenericMatrixCommon::triu2symm(const MatType 
&x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L231

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1355-L1361

";

%feature("docstring")  casadi::GenericMatrixCommon::triu2symm(const MatType 
&a) "

[INTERNAL] 
Convert a upper triangular matrix to a symmetric one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L524

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L524-L524

";

%feature("docstring") casadi::casadi_triu2symm "

Convert a upper triangular matrix to a symmetric one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L524

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L524-L524

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_triu2symm "

Convert a upper triangular matrix to a symmetric one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L524

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L524-L524

";

%feature("docstring")  casadi::GenericMatrixCommon::repsum(const MatType &x,
 casadi_int n, casadi_int m=1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L232

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1340-L1352

";

%feature("docstring")  casadi::GenericMatrixCommon::repsum(const MatType &A,
 casadi_int n, casadi_int m=1) "

[INTERNAL] 
Given a repeated matrix, computes the sum of repeated parts.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L980

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L980-L982

";

%feature("docstring") casadi::casadi_repsum "

Given a repeated matrix, computes the sum of repeated parts.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L980

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L980-L982

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_repsum "

Given a repeated matrix, computes the sum of repeated parts.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L980

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L980-L982

";

%feature("docstring")  casadi::GenericMatrixCommon::diff(const MatType &x, 
casadi_int n=1, casadi_int axis=-1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1565-L1590

";

%feature("docstring")  casadi::GenericMatrixCommon::diff(const MatType &x, 
casadi_int n=1, casadi_int axis=-1) "

[INTERNAL] 
Returns difference (n-th order) along given axis (MATLAB 
convention)

Extra doc: https://github.com/casadi/casadi/wiki/L_1c8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L549-L551

";

%feature("docstring") casadi::casadi_diff "

Returns difference (n-th order) along given axis (MATLAB convention)

Extra doc: https://github.com/casadi/casadi/wiki/L_1c8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L549-L551

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_diff "

Returns difference (n-th order) along given axis (MATLAB convention)

Extra doc: https://github.com/casadi/casadi/wiki/L_1c8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L549-L551

";

%feature("docstring")  casadi::GenericMatrixCommon::is_linear(const MatType 
&expr, const MatType &var) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L235

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1534-L1536

";

%feature("docstring")  casadi::GenericMatrixCommon::is_linear(const MatType 
&expr, const MatType &var) "

[INTERNAL] 
Is expr linear in var?

False negatives are possible (an expression may not be recognised as 
linear
 while it really is), false positives not.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L895

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L895-L897

";

%feature("docstring") casadi::casadi_is_linear "

Is expr linear in var?

False negatives are possible (an expression may not be recognised as 
linear
 while it really is), false positives not.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L895

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L895-L897

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_is_linear "

Is expr linear in var?

False negatives are possible (an expression may not be recognised as 
linear
 while it really is), false positives not.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L895

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L895-L897

";

%feature("docstring")  casadi::GenericMatrixCommon::is_quadratic(const 
MatType &expr, const MatType &var) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L236

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1539-L1541

";

%feature("docstring")  casadi::GenericMatrixCommon::is_quadratic(const 
MatType &expr, const MatType &var) "

[INTERNAL] 
Is expr quadratic in var?

False negatives are possible (an expression may not be recognised as 

quadratic while it really is), false positives not.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L906

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L906-L908

";

%feature("docstring") casadi::casadi_is_quadratic "

Is expr quadratic in var?

False negatives are possible (an expression may not be recognised as 

quadratic while it really is), false positives not.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L906

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L906-L908

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_is_quadratic "

Is expr quadratic in var?

False negatives are possible (an expression may not be recognised as 

quadratic while it really is), false positives not.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L906

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L906-L908

";

%feature("docstring")  casadi::GenericMatrixCommon::quadratic_coeff(const 
MatType &expr, const MatType &var, MatType &A, MatType &b, MatType &c, bool 
check) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L237

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1544-L1552

";

%feature("docstring")  casadi::GenericMatrixCommon::quadratic_coeff(const 
MatType &expr, const MatType &var, MatType &A, MatType &b, MatType &c, bool 
check=true) "

[INTERNAL] 
Recognizes quadratic form in scalar expression.

1/2*x' A x + b' x + c

e = 0.5*bilin(A,x,x)+dot(b,x)+c

Parameters:
-----------

check[in]: 
When true (default), A is checked to be independent of x. 
Provided to 
deal with false positive dependency checks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L920

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L920-L923

";

%feature("docstring") casadi::casadi_quadratic_coeff "

Recognizes quadratic form in scalar expression.

1/2*x' A x + b' x + c

e = 0.5*bilin(A,x,x)+dot(b,x)+c

Parameters:
-----------

check[in]: 
When true (default), A is checked to be independent of x. 
Provided to 
deal with false positive dependency checks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L920

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L920-L923

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_quadratic_coeff "

Recognizes quadratic form in scalar expression.

1/2*x' A x + b' x + c

e = 0.5*bilin(A,x,x)+dot(b,x)+c

Parameters:
-----------

check[in]: 
When true (default), A is checked to be independent of x. 
Provided to 
deal with false positive dependency checks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L920

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L920-L923

";

%feature("docstring")  casadi::GenericMatrixCommon::linear_coeff(const 
MatType &expr, const MatType &var, MatType &A, MatType &b, bool check) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L239

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1555-L1562

";

%feature("docstring")  casadi::GenericMatrixCommon::linear_coeff(const 
MatType &expr, const MatType &var, MatType &A, MatType &b, bool check=true) 
"

[INTERNAL] 
Recognizes linear form in vector expression.

A x + b

Parameters:
-----------

check[in]: 
When true (default)m, A is checked to be independent of x. 
Provided to
 deal with false positive dependency checks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L933

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L933-L936

";

%feature("docstring") casadi::casadi_linear_coeff "

Recognizes linear form in vector expression.

A x + b

Parameters:
-----------

check[in]: 
When true (default)m, A is checked to be independent of x. 
Provided to
 deal with false positive dependency checks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L933

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L933-L936

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_linear_coeff "

Recognizes linear form in vector expression.

A x + b

Parameters:
-----------

check[in]: 
When true (default)m, A is checked to be independent of x. 
Provided to
 deal with false positive dependency checks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L933

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L933-L936

";

%feature("docstring")  casadi::GenericMatrixCommon::bilin(const MatType &A, 
const MatType &x, const MatType &y) "

[INTERNAL] 
Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring") casadi::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring")  casadi::GenericMatrixCommon::bilin(const MatType &A, 
const MatType &x, const MatType &y) "

[INTERNAL] 
Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L403

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L403-L405

";

%feature("docstring") casadi::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L403

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L403-L405

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L403

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L403-L405

";

%feature("docstring")  casadi::GenericMatrixCommon::bilin(const MatType &A, 
const MatType &x) "

[INTERNAL] 
Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L406

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L406-L408

";

%feature("docstring") casadi::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L406

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L406-L408

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L406

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L406-L408

";

%feature("docstring")  casadi::GenericMatrixCommon::rank1(const MatType &A, 
const MatType &alpha, const MatType &x, const MatType &y) "

[INTERNAL] 
Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring") casadi::casadi_rank1 "

Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_rank1 "

Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring")  casadi::GenericMatrixCommon::rank1(const MatType &A, 
const MatType &alpha, const MatType &x, const MatType &y) "

[INTERNAL] 
Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L418

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L418-L421

";

%feature("docstring") casadi::casadi_rank1 "

Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L418

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L418-L421

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_rank1 "

Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L418

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L418-L421

";

%feature("docstring")  casadi::GenericMatrixCommon::jtimes(const MatType 
&ex, const MatType &arg, const MatType &v, bool tr=false, const Dict 
&opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1004

";

%feature("docstring")  casadi::GenericMatrixCommon::jtimes(const MatType 
&ex, const MatType &arg, const MatType &v, bool tr=false, const Dict 
&opts=Dict()) "

[INTERNAL] 
Calculate the Jacobian and multiply by a vector from the right.

This is equivalent to  mul(jacobian(ex, arg), v) or  mul(jacobian(ex, 
arg).T, v) for tr set to false and true respectively. If contrast to these 

expressions, it will use directional derivatives which is typically 
(but 
not necessarily) more efficient if the complete Jacobian is not 
needed and 
v has few rows.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L832

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L832-L835

";

%feature("docstring") casadi::casadi_jtimes "

Calculate the Jacobian and multiply by a vector from the right.

This is equivalent to  mul(jacobian(ex, arg), v) or  mul(jacobian(ex, 
arg).T, v) for tr set to false and true respectively. If contrast to these 

expressions, it will use directional derivatives which is typically 
(but 
not necessarily) more efficient if the complete Jacobian is not 
needed and 
v has few rows.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L832

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L832-L835

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_jtimes "

Calculate the Jacobian and multiply by a vector from the right.

This is equivalent to  mul(jacobian(ex, arg), v) or  mul(jacobian(ex, 
arg).T, v) for tr set to false and true respectively. If contrast to these 

expressions, it will use directional derivatives which is typically 
(but 
not necessarily) more efficient if the complete Jacobian is not 
needed and 
v has few rows.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L832

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L832-L835

";

%feature("docstring")  casadi::GenericMatrixCommon::gradient(const MatType 
&ex, const MatType &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1006

";

%feature("docstring")  casadi::GenericMatrixCommon::gradient(const MatType 
&ex, const MatType &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Calculate the gradient of an expression.

Parameters:
-----------

ex[in]: 
Scalar expression to take the gradient of

arg[in]: 
Vector expression of symbols

opts[in]: 
Options

Dense column vector

Extra doc: https://github.com/casadi/casadi/wiki/L_23x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L812

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L812-L814

";

%feature("docstring") casadi::casadi_gradient "

Calculate the gradient of an expression.

Parameters:
-----------

ex[in]: 
Scalar expression to take the gradient of

arg[in]: 
Vector expression of symbols

opts[in]: 
Options

Dense column vector

Extra doc: https://github.com/casadi/casadi/wiki/L_23x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L812

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L812-L814

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_gradient "

Calculate the gradient of an expression.

Parameters:
-----------

ex[in]: 
Scalar expression to take the gradient of

arg[in]: 
Vector expression of symbols

opts[in]: 
Options

Dense column vector

Extra doc: https://github.com/casadi/casadi/wiki/L_23x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L812

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L812-L814

";

%feature("docstring")  casadi::GenericMatrixCommon::tangent(const MatType 
&ex, const MatType &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1007

";

%feature("docstring")  casadi::GenericMatrixCommon::tangent(const MatType 
&ex, const MatType &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Calculate the tangent of an expression.

Extra doc: https://github.com/casadi/casadi/wiki/L_23y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L819

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L819-L821

";

%feature("docstring") casadi::casadi_tangent "

Calculate the tangent of an expression.

Extra doc: https://github.com/casadi/casadi/wiki/L_23y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L819

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L819-L821

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_tangent "

Calculate the tangent of an expression.

Extra doc: https://github.com/casadi/casadi/wiki/L_23y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L819

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L819-L821

";

%feature("docstring")  casadi::GenericMatrixCommon::linearize(const MatType 
&f, const MatType &x, const MatType &x0, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1008

";

%feature("docstring")  casadi::GenericMatrixCommon::linearize(const MatType 
&f, const MatType &x, const MatType &x0, const Dict &opts=Dict()) "

[INTERNAL] 
Linearize an expression.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L740

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L740-L743

";

%feature("docstring") casadi::casadi_linearize "

Linearize an expression.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L740

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L740-L743

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_linearize "

Linearize an expression.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L740

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L740-L743

";

%feature("docstring")  casadi::GenericMatrixCommon::mpower(const MatType &x,
 const MatType &y) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1010

";

%feature("docstring")  casadi::GenericMatrixCommon::mpower(const MatType &x,
 const MatType &n) "

[INTERNAL] 
 Matrix power x^n.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L319

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L319-L321

";

%feature("docstring") casadi::casadi_mpower "

Matrix power x^n.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L319

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L319-L321

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_mpower "

Matrix power x^n.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L319

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L319-L321

";

%feature("docstring")  casadi::GenericMatrixCommon::soc(const MatType &x, 
const MatType &y) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1011

";

%feature("docstring")  casadi::GenericMatrixCommon::soc(const MatType &x, 
const MatType &y) "

[INTERNAL] 
Construct second-order-convex.

Parameters:
-----------

x: 
vector expression of size n

y: 
scalar expression

soc(x,y) computes [y*eye(n) x; x' y]

soc(x,y) positive semi definite <=> || x ||_2 <= y

Extra doc: https://github.com/casadi/casadi/wiki/L_1bj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L334

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L334-L336

";

%feature("docstring") casadi::casadi_soc "

Construct second-order-convex.

Parameters:
-----------

x: 
vector expression of size n

y: 
scalar expression

soc(x,y) computes [y*eye(n) x; x' y]

soc(x,y) positive semi definite <=> || x ||_2 <= y

Extra doc: https://github.com/casadi/casadi/wiki/L_1bj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L334

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L334-L336

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_soc "

Construct second-order-convex.

Parameters:
-----------

x: 
vector expression of size n

y: 
scalar expression

soc(x,y) computes [y*eye(n) x; x' y]

soc(x,y) positive semi definite <=> || x ||_2 <= y

Extra doc: https://github.com/casadi/casadi/wiki/L_1bj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L334

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L334-L336

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow=1, casadi_int ncol=1) "

[INTERNAL] 
Create an nrow-by-ncol symbolic primitive.

Extra doc: https://github.com/casadi/casadi/wiki/L_1da

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1027

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1027-L1029

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const std::pair< casadi_int, casadi_int > &rc) "

[INTERNAL] 
Construct a symbolic primitive with given dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1db

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1034

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1034-L1036

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp) "

[INTERNAL] 
Create symbolic primitive with a given sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1041

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1041-L1043

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp, casadi_int p) "

[INTERNAL] 
Create a vector of length p with with matrices.

with symbolic primitives of given sparsity

Extra doc: https://github.com/casadi/casadi/wiki/L_1dd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1050

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1176-L1186

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow, casadi_int ncol, casadi_int p) "

[INTERNAL] 
Create a vector of length p with nrow-by-ncol symbolic 
primitives.

Extra doc: https://github.com/casadi/casadi/wiki/L_1de

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1055

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1055-L1058

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp, casadi_int p, casadi_int r) "

[INTERNAL] 
Create a vector of length r of vectors of length p with.

symbolic primitives with given sparsity

Extra doc: https://github.com/casadi/casadi/wiki/L_1df

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1066

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1189-L1199

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow, casadi_int ncol, casadi_int p, casadi_int r) "

[INTERNAL] 
Create a vector of length r of vectors of length p.

with nrow-by-ncol symbolic primitives

Extra doc: https://github.com/casadi/casadi/wiki/L_1dg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1074

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1074-L1076

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(casadi_int nrow=1,
 casadi_int ncol=1) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1083

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1083-L1085

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(const Sparsity 
&sp) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1086

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1086-L1086

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1087

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1087-L1089

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(casadi_int nrow=1, 
casadi_int ncol=1) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1096

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1096-L1098

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(const Sparsity &sp)
 "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1099

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1099-L1099

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1100

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1100-L1102

";

%feature("docstring")  casadi::GenericMatrixCommon::einstein(const MatType 
&A, const MatType &B, const MatType &C, const std::vector< casadi_int > 
&dim_a, const std::vector< casadi_int > &dim_b, const std::vector< 
casadi_int > &dim_c, const std::vector< casadi_int > &a, const std::vector< 
casadi_int > &b, const std::vector< casadi_int > &c) "

[INTERNAL] 
Compute any contraction of two dense tensors, using 
index/einstein 
notation.

einstein(A, B, a, b, c) -> C

Given two tensors, A and B, computes a third tensor C such that:

C_c = A_a * B_b

With a, b, c representing einstein indices. Instead of the classical 
index 
labels i,j,k,... we employ -1,-2,-3,...

A, B, C are represented as CasADi vectors, with dim_a, dim_b, dim_c 

indictating theire tensorial dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L355

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L355-L361

";

%feature("docstring") casadi::casadi_einstein "

Compute any contraction of two dense tensors, using index/einstein 

notation.

einstein(A, B, a, b, c) -> C

Given two tensors, A and B, computes a third tensor C such that:

C_c = A_a * B_b

With a, b, c representing einstein indices. Instead of the classical 
index 
labels i,j,k,... we employ -1,-2,-3,...

A, B, C are represented as CasADi vectors, with dim_a, dim_b, dim_c 

indictating theire tensorial dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L355

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L355-L361

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_einstein "

Compute any contraction of two dense tensors, using index/einstein 

notation.

einstein(A, B, a, b, c) -> C

Given two tensors, A and B, computes a third tensor C such that:

C_c = A_a * B_b

With a, b, c representing einstein indices. Instead of the classical 
index 
labels i,j,k,... we employ -1,-2,-3,...

A, B, C are represented as CasADi vectors, with dim_a, dim_b, dim_c 

indictating theire tensorial dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L355

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L355-L361

";

%feature("docstring")  casadi::GenericMatrixCommon::einstein(const MatType 
&A, const MatType &B, const std::vector< casadi_int > &dim_a, const 
std::vector< casadi_int > &dim_b, const std::vector< casadi_int > &dim_c, 
const std::vector< casadi_int > &a, const std::vector< casadi_int > &b, 
const std::vector< casadi_int > &c) "

[INTERNAL] 
Compute any contraction of two dense tensors, using 
index/einstein 
notation.

einstein(A, B, a, b, c) -> C

Given two tensors, A and B, computes a third tensor C such that:

C_c = A_a * B_b

With a, b, c representing einstein indices. Instead of the classical 
index 
labels i,j,k,... we employ -1,-2,-3,...

A, B, C are represented as CasADi vectors, with dim_a, dim_b, dim_c 

indictating theire tensorial dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L364

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L364-L370

";

%feature("docstring") casadi::casadi_einstein "

Compute any contraction of two dense tensors, using index/einstein 

notation.

einstein(A, B, a, b, c) -> C

Given two tensors, A and B, computes a third tensor C such that:

C_c = A_a * B_b

With a, b, c representing einstein indices. Instead of the classical 
index 
labels i,j,k,... we employ -1,-2,-3,...

A, B, C are represented as CasADi vectors, with dim_a, dim_b, dim_c 

indictating theire tensorial dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L364

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L364-L370

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_einstein "

Compute any contraction of two dense tensors, using index/einstein 

notation.

einstein(A, B, a, b, c) -> C

Given two tensors, A and B, computes a third tensor C such that:

C_c = A_a * B_b

With a, b, c representing einstein indices. Instead of the classical 
index 
labels i,j,k,... we employ -1,-2,-3,...

A, B, C are represented as CasADi vectors, with dim_a, dim_b, dim_c 

indictating theire tensorial dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L364

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L364-L370

";

%feature("docstring")  casadi::GenericMatrixCommon::hessian(const MatType 
&ex, const MatType &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Hessian and (optionally) gradient.

Extra doc: https://github.com/casadi/casadi/wiki/L_23z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L861

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L861-L864

";

%feature("docstring") casadi::casadi_hessian "

Hessian and (optionally) gradient.

Extra doc: https://github.com/casadi/casadi/wiki/L_23z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L861

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L861-L864

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_hessian "

Hessian and (optionally) gradient.

Extra doc: https://github.com/casadi/casadi/wiki/L_23z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L861

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L861-L864

";

%feature("docstring")  casadi::GenericMatrixCommon::hessian(const MatType 
&ex, const MatType &arg, MatType &output_g, const Dict &opts=Dict()) "

[INTERNAL] 
Hessian and (optionally) gradient.

Extra doc: https://github.com/casadi/casadi/wiki/L_23z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L865

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L865-L868

";

%feature("docstring") casadi::casadi_hessian "

Hessian and (optionally) gradient.

Extra doc: https://github.com/casadi/casadi/wiki/L_23z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L865

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L865-L868

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_hessian "

Hessian and (optionally) gradient.

Extra doc: https://github.com/casadi/casadi/wiki/L_23z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L865

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L865-L868

";

%feature("docstring")  casadi::GenericMatrixCommon::mmin(const MatType &x) "

[INTERNAL] 
Smallest element in a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L988

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L988-L990

";

%feature("docstring") casadi::casadi_mmin "

Smallest element in a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L988

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L988-L990

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_mmin "

Smallest element in a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L988

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L988-L990

";

%feature("docstring")  casadi::GenericMatrixCommon::mmax(const MatType &x) "

[INTERNAL] 
Largest element in a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L997

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L997-L999

";

%feature("docstring") casadi::casadi_mmax "

Largest element in a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L997

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L997-L999

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_mmax "

Largest element in a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L997

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L997-L999

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz() const "

[INTERNAL] 
Get the number of (structural) non-zero elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_1an

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L84

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1119-L1121

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_lower() const "

[INTERNAL] 
Get the number of non-zeros in the lower triangular half.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ao

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L89

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1124-L1126

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_upper() const "

[INTERNAL] 
Get the number of non-zeros in the upper triangular half.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ap

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L94

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1129-L1131

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_diag() const "

[INTERNAL] 
Get get the number of non-zeros on the diagonal.

Extra doc: https://github.com/casadi/casadi/wiki/L_1aq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1134-L1136

";

%feature("docstring")  casadi::GenericMatrixCommon::numel() const "

[INTERNAL] 
Get the number of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ar

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L104

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1139-L1141

";

%feature("docstring")  casadi::GenericMatrixCommon::size1() const "

[INTERNAL] 
Get the first dimension (i.e. number of rows)

Extra doc: https://github.com/casadi/casadi/wiki/L_1as

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L109

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1144-L1146

";

%feature("docstring")  casadi::GenericMatrixCommon::rows() const "

[INTERNAL] 
Get the number of rows, Octave-style syntax.

Extra doc: https://github.com/casadi/casadi/wiki/L_1at

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L114

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L114-L114

";

%feature("docstring")  casadi::GenericMatrixCommon::size2() const "

[INTERNAL] 
Get the second dimension (i.e. number of columns)

Extra doc: https://github.com/casadi/casadi/wiki/L_1au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L119

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1149-L1151

";

%feature("docstring")  casadi::GenericMatrixCommon::columns() const "

[INTERNAL] 
Get the number of columns, Octave-style syntax.

Extra doc: https://github.com/casadi/casadi/wiki/L_1av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L124

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L124-L124

";

%feature("docstring")  casadi::GenericMatrixCommon::dim(bool with_nz=false) 
const "

[INTERNAL] 
Get string representation of dimensions.

The representation is e.g. \"4x5\" or \"4x5,10nz\"

Extra doc: https://github.com/casadi/casadi/wiki/L_1aw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1164-L1166

";

%feature("docstring")  casadi::GenericMatrixCommon::size() const "

[INTERNAL] 
Get the shape.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ax

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L136

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1154-L1156

";

%feature("docstring")  casadi::GenericMatrixCommon::size(casadi_int axis) 
const "

[INTERNAL] 
Get the size along a particular dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ay

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L141

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1159-L1161

";

%feature("docstring")  casadi::GenericMatrixCommon::is_empty(bool 
both=false) const "

[INTERNAL] 
Check if the sparsity is empty, i.e. if one of the dimensions is
 zero.

(or optionally both dimensions)

Extra doc: https://github.com/casadi/casadi/wiki/L_1az

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L148

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L148-L148

";

%feature("docstring")  casadi::GenericMatrixCommon::is_dense() const "

[INTERNAL] 
Check if the matrix expression is dense.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L153

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L153-L153

";

%feature("docstring")  casadi::GenericMatrixCommon::is_scalar(bool 
scalar_and_dense=false) const "

[INTERNAL] 
Check if the matrix expression is scalar.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L158

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1169-L1171

";

%feature("docstring")  casadi::GenericMatrixCommon::is_square() const "

[INTERNAL] 
Check if the matrix expression is square.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L163

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L163-L163

";

%feature("docstring")  casadi::GenericMatrixCommon::is_vector() const "

[INTERNAL] 
Check if the matrix is a row or column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L168

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L168-L168

";

%feature("docstring")  casadi::GenericMatrixCommon::is_row() const "

[INTERNAL] 
Check if the matrix is a row vector (i.e.  size1()==1)

Extra doc: https://github.com/casadi/casadi/wiki/L_1b4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L173

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L173-L173

";

%feature("docstring")  casadi::GenericMatrixCommon::is_column() const "

[INTERNAL] 
Check if the matrix is a column vector (i.e.  size2()==1)

Extra doc: https://github.com/casadi/casadi/wiki/L_1b5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L178-L178

";

%feature("docstring")  casadi::GenericMatrixCommon::is_triu() const "

[INTERNAL] 
Check if the matrix is upper triangular.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L183

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L183-L183

";

%feature("docstring")  casadi::GenericMatrixCommon::is_tril() const "

[INTERNAL] 
Check if the matrix is lower triangular.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L188

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L188-L188

";

%feature("docstring")  casadi::GenericMatrixCommon::sparsity() const "

[INTERNAL] 
Get the sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1114-L1116

";

%feature("docstring") casadi::casadi_sparsity "

Get the sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1114-L1116

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_sparsity "

Get the sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1114-L1116

";

%feature("docstring")  casadi::GenericMatrixCommon::nz(const K &k) const "

[INTERNAL] 
Get vector nonzero or slice of nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L248

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L248-L252

";

%feature("docstring")  casadi::GenericMatrixCommon::nz(const K &k) "

[INTERNAL] 
Access vector nonzero or slice of nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L258

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L258-L260

";

%feature("docstring")  casadi::GenericMatrixCommon::mrdivide(const MatType 
&x, const MatType &n) "

[INTERNAL] 
 Matrix divide (cf. slash '/' in MATLAB)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L376

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L376-L378

";

%feature("docstring") casadi::casadi_mrdivide "

Matrix divide (cf. slash '/' in MATLAB)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L376

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L376-L378

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_mrdivide "

Matrix divide (cf. slash '/' in MATLAB)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L376

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L376-L378

";

%feature("docstring")  casadi::GenericMatrixCommon::mldivide(const MatType 
&x, const MatType &n) "

[INTERNAL] 
 Matrix divide (cf. backslash '\\\\' in MATLAB)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L383

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L383-L385

";

%feature("docstring") casadi::casadi_mldivide "

Matrix divide (cf. backslash '\\\\' in MATLAB)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L383

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L383-L385

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_mldivide "

Matrix divide (cf. backslash '\\\\' in MATLAB)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L383

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L383-L385

";

%feature("docstring")  casadi::GenericMatrixCommon::symvar(const MatType &x)
 "

[INTERNAL] 
Get all symbols contained in the supplied expression.

Get all symbols on which the supplied expression depends 
See: 

SXFunction::getFree(), MXFunction::getFree()

Extra doc: https://github.com/casadi/casadi/wiki/L_1bn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L393

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L393-L395

";

%feature("docstring") casadi::casadi_symvar "

Get all symbols contained in the supplied expression.

Get all symbols on which the supplied expression depends 
See: 

SXFunction::getFree(), MXFunction::getFree()

Extra doc: https://github.com/casadi/casadi/wiki/L_1bn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L393

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L393-L395

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_symvar "

Get all symbols contained in the supplied expression.

Get all symbols on which the supplied expression depends 
See: 

SXFunction::getFree(), MXFunction::getFree()

Extra doc: https://github.com/casadi/casadi/wiki/L_1bn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L393

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L393-L395

";

%feature("docstring")  casadi::GenericMatrixCommon::logsumexp(const MatType 
&x) "

[INTERNAL] 
x -> log(sum_i exp(x_i))

Can be used to achieve a smooth max.

Implementations for DM/SX/MX are hardened against overflow 
Implementations 
for DM/MX are more accurate with log1p (*)

(*) https://nhigham.com/2021/01/05/what-is-the-log-sum-exp-function/

Extra doc: https://github.com/casadi/casadi/wiki/L_1br

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L443

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L443-L445

";

%feature("docstring") casadi::casadi_logsumexp "

x -> log(sum_i exp(x_i))

Can be used to achieve a smooth max.

Implementations for DM/SX/MX are hardened against overflow 
Implementations 
for DM/MX are more accurate with log1p (*)

(*) https://nhigham.com/2021/01/05/what-is-the-log-sum-exp-function/

Extra doc: https://github.com/casadi/casadi/wiki/L_1br

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L443

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L443-L445

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_logsumexp "

x -> log(sum_i exp(x_i))

Can be used to achieve a smooth max.

Implementations for DM/SX/MX are hardened against overflow 
Implementations 
for DM/MX are more accurate with log1p (*)

(*) https://nhigham.com/2021/01/05/what-is-the-log-sum-exp-function/

Extra doc: https://github.com/casadi/casadi/wiki/L_1br

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L443

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L443-L445

";

%feature("docstring")  casadi::GenericMatrixCommon::logsumexp(const MatType 
&x, const MatType &margin) "

[INTERNAL] 
Scaled version of logsumexp.

Scaled such that max(x) <= logsumexp(x, margin) <= max(x)+margin

Extra doc: https://github.com/casadi/casadi/wiki/L_1bs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L451

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L451-L454

";

%feature("docstring") casadi::casadi_logsumexp "

Scaled version of logsumexp.

Scaled such that max(x) <= logsumexp(x, margin) <= max(x)+margin

Extra doc: https://github.com/casadi/casadi/wiki/L_1bs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L451

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L451-L454

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_logsumexp "

Scaled version of logsumexp.

Scaled such that max(x) <= logsumexp(x, margin) <= max(x)+margin

Extra doc: https://github.com/casadi/casadi/wiki/L_1bs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L451

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L451-L454

";

%feature("docstring")  casadi::GenericMatrixCommon::det(const MatType &A) "

[INTERNAL] 
 Matrix determinant (experimental)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L488

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L488-L488

";

%feature("docstring") casadi::casadi_det "

Matrix determinant (experimental)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L488

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L488-L488

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_det "

Matrix determinant (experimental)

Extra doc: https://github.com/casadi/casadi/wiki/L_1bx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L488

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L488-L488

";

%feature("docstring")  casadi::GenericMatrixCommon::inv_minor(const MatType 
&A) "

[INTERNAL] 
 Matrix inverse (experimental)

Extra doc: https://github.com/casadi/casadi/wiki/L_1by

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L493

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L493-L493

";

%feature("docstring") casadi::casadi_inv_minor "

Matrix inverse (experimental)

Extra doc: https://github.com/casadi/casadi/wiki/L_1by

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L493

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L493-L493

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_inv_minor "

Matrix inverse (experimental)

Extra doc: https://github.com/casadi/casadi/wiki/L_1by

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L493

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L493-L493

";

%feature("docstring")  casadi::GenericMatrixCommon::inv(const MatType &A) "

[INTERNAL] 
 Matrix inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L498

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L498-L500

";

%feature("docstring") casadi::casadi_inv "

Matrix inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L498

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L498-L500

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_inv "

Matrix inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L498

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L498-L500

";

%feature("docstring")  casadi::GenericMatrixCommon::inv(const MatType &A, 
const std::string &lsolver, const Dict &options=Dict()) "

[INTERNAL] 
 Matrix inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L505

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L505-L509

";

%feature("docstring") casadi::casadi_inv "

Matrix inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L505

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L505-L509

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_inv "

Matrix inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L505

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L505-L509

";

%feature("docstring")  casadi::GenericMatrixCommon::trace(const MatType &x) 
"

[INTERNAL] 
 Matrix trace.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L514-L514

";

%feature("docstring") casadi::casadi_trace "

Matrix trace.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L514-L514

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_trace "

Matrix trace.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L514-L514

";

%feature("docstring")  casadi::GenericMatrixCommon::norm_fro(const MatType 
&x) "

[INTERNAL] 
Frobenius norm.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L529

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L529-L529

";

%feature("docstring") casadi::casadi_norm_fro "

Frobenius norm.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L529

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L529-L529

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_norm_fro "

Frobenius norm.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L529

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L529-L529

";

%feature("docstring")  casadi::GenericMatrixCommon::norm_2(const MatType &x)
 "

[INTERNAL] 
2-norm

Extra doc: https://github.com/casadi/casadi/wiki/L_1c5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L534

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L534-L534

";

%feature("docstring") casadi::casadi_norm_2 "

2-norm

Extra doc: https://github.com/casadi/casadi/wiki/L_1c5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L534

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L534-L534

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_norm_2 "

2-norm

Extra doc: https://github.com/casadi/casadi/wiki/L_1c5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L534

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L534-L534

";

%feature("docstring")  casadi::GenericMatrixCommon::norm_1(const MatType &x)
 "

[INTERNAL] 
1-norm

Extra doc: https://github.com/casadi/casadi/wiki/L_1c6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L539

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L539-L539

";

%feature("docstring") casadi::casadi_norm_1 "

1-norm

Extra doc: https://github.com/casadi/casadi/wiki/L_1c6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L539

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L539-L539

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_norm_1 "

1-norm

Extra doc: https://github.com/casadi/casadi/wiki/L_1c6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L539

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L539-L539

";

%feature("docstring")  casadi::GenericMatrixCommon::norm_inf(const MatType 
&x) "

[INTERNAL] 
Infinity-norm.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L544

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L544-L544

";

%feature("docstring") casadi::casadi_norm_inf "

Infinity-norm.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L544

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L544-L544

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_norm_inf "

Infinity-norm.

Extra doc: https://github.com/casadi/casadi/wiki/L_1c7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L544

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L544-L544

";

%feature("docstring")  casadi::GenericMatrixCommon::cumsum(const MatType &x,
 casadi_int axis=-1) "

[INTERNAL] 
Returns cumulative sum along given axis (MATLAB convention)

Extra doc: https://github.com/casadi/casadi/wiki/L_1c9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L556

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L556-L558

";

%feature("docstring") casadi::casadi_cumsum "

Returns cumulative sum along given axis (MATLAB convention)

Extra doc: https://github.com/casadi/casadi/wiki/L_1c9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L556

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L556-L558

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_cumsum "

Returns cumulative sum along given axis (MATLAB convention)

Extra doc: https://github.com/casadi/casadi/wiki/L_1c9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L556

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L556-L558

";

%feature("docstring")  casadi::GenericMatrixCommon::dot(const MatType &x, 
const MatType &y) "

[INTERNAL] 
Inner product of two matrices.

with x and y matrices of the same dimension

Extra doc: https://github.com/casadi/casadi/wiki/L_1ca

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L565

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L565-L567

";

%feature("docstring") casadi::casadi_dot "

Inner product of two matrices.

with x and y matrices of the same dimension

Extra doc: https://github.com/casadi/casadi/wiki/L_1ca

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L565

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L565-L567

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_dot "

Inner product of two matrices.

with x and y matrices of the same dimension

Extra doc: https://github.com/casadi/casadi/wiki/L_1ca

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L565

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L565-L567

";

%feature("docstring")  casadi::GenericMatrixCommon::nullspace(const MatType 
&A) "

[INTERNAL] 
Computes the nullspace of a matrix A.

Finds Z m-by-(m-n) such that AZ = 0 with A n-by-m with m > n

Assumes A is full rank

Inspired by Numerical Methods in Scientific Computing by Ake Bjorck

Extra doc: https://github.com/casadi/casadi/wiki/L_1cb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L579

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L579-L581

";

%feature("docstring") casadi::casadi_nullspace "

Computes the nullspace of a matrix A.

Finds Z m-by-(m-n) such that AZ = 0 with A n-by-m with m > n

Assumes A is full rank

Inspired by Numerical Methods in Scientific Computing by Ake Bjorck

Extra doc: https://github.com/casadi/casadi/wiki/L_1cb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L579

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L579-L581

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_nullspace "

Computes the nullspace of a matrix A.

Finds Z m-by-(m-n) such that AZ = 0 with A n-by-m with m > n

Assumes A is full rank

Inspired by Numerical Methods in Scientific Computing by Ake Bjorck

Extra doc: https://github.com/casadi/casadi/wiki/L_1cb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L579

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L579-L581

";

%feature("docstring")  casadi::GenericMatrixCommon::polyval(const MatType 
&p, const MatType &x) "

[INTERNAL] 
Evaluate a polynomial with coefficients p in x.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L586

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L586-L588

";

%feature("docstring") casadi::casadi_polyval "

Evaluate a polynomial with coefficients p in x.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L586

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L586-L588

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_polyval "

Evaluate a polynomial with coefficients p in x.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L586

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L586-L588

";

%feature("docstring")  casadi::GenericMatrixCommon::diag(const MatType &A) "

[INTERNAL] 
Get the diagonal of a matrix or construct a diagonal.

When the input is square, the diagonal elements are returned. If the 
input 
is vector-like, a diagonal matrix is constructed with it.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L596

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L596-L598

";

%feature("docstring") casadi::casadi_diag "

Get the diagonal of a matrix or construct a diagonal.

When the input is square, the diagonal elements are returned. If the 
input 
is vector-like, a diagonal matrix is constructed with it.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L596

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L596-L598

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_diag "

Get the diagonal of a matrix or construct a diagonal.

When the input is square, the diagonal elements are returned. If the 
input 
is vector-like, a diagonal matrix is constructed with it.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L596

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L596-L598

";

%feature("docstring")  casadi::GenericMatrixCommon::unite(const MatType &A, 
const MatType &B) "

[INTERNAL] 
Unite two matrices no overlapping sparsity.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ce

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L603

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L603-L605

";

%feature("docstring") casadi::casadi_unite "

Unite two matrices no overlapping sparsity.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ce

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L603

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L603-L605

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_unite "

Unite two matrices no overlapping sparsity.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ce

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L603

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L603-L605

";

%feature("docstring")  casadi::GenericMatrixCommon::densify(const MatType 
&x) "

[INTERNAL] 
Make the matrix dense if not already.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L610

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L610-L612

";

%feature("docstring") casadi::casadi_densify "

Make the matrix dense if not already.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L610

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L610-L612

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_densify "

Make the matrix dense if not already.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L610

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L610-L612

";

%feature("docstring")  casadi::GenericMatrixCommon::densify(const MatType 
&x, const MatType &val) "

[INTERNAL] 
Make the matrix dense and assign nonzeros to a value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L617

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L617-L619

";

%feature("docstring") casadi::casadi_densify "

Make the matrix dense and assign nonzeros to a value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L617

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L617-L619

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_densify "

Make the matrix dense and assign nonzeros to a value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L617

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L617-L619

";

%feature("docstring")  casadi::GenericMatrixCommon::project(const MatType 
&A, const Sparsity &sp, bool intersect=false) "

[INTERNAL] 
Create a new matrix with a given sparsity pattern but with the.

nonzeros taken from an existing matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_1ch

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L626

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L626-L629

";

%feature("docstring") casadi::casadi_project "

Create a new matrix with a given sparsity pattern but with the.

nonzeros taken from an existing matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_1ch

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L626

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L626-L629

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_project "

Create a new matrix with a given sparsity pattern but with the.

nonzeros taken from an existing matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_1ch

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L626

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L626-L629

";

%feature("docstring")  casadi::GenericMatrixCommon::if_else(const MatType 
&cond, const MatType &if_true, const MatType &if_false, bool 
short_circuit=false) "

[INTERNAL] 
Branching on  MX nodes.

Ternary operator, \"cond ? if_true : if_false\"

Extra doc: https://github.com/casadi/casadi/wiki/L_1ci

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L636

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L636-L639

";

%feature("docstring") casadi::casadi_if_else "

Branching on  MX nodes.

Ternary operator, \"cond ? if_true : if_false\"

Extra doc: https://github.com/casadi/casadi/wiki/L_1ci

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L636

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L636-L639

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_if_else "

Branching on  MX nodes.

Ternary operator, \"cond ? if_true : if_false\"

Extra doc: https://github.com/casadi/casadi/wiki/L_1ci

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L636

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L636-L639

";

%feature("docstring")  casadi::GenericMatrixCommon::conditional(const 
MatType &ind, const std::vector< MatType > &x, const MatType &x_default, 
bool short_circuit=false) "

[INTERNAL] 
Create a switch.

If the condition

Parameters:
-----------

ind: 
evaluates to the integer k, where 0<=k<f.size(), then x[k] will be 

returned, otherwise

x_default: 
will be returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L647

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L647-L650

";

%feature("docstring") casadi::casadi_conditional "

Create a switch.

If the condition

Parameters:
-----------

ind: 
evaluates to the integer k, where 0<=k<f.size(), then x[k] will be 

returned, otherwise

x_default: 
will be returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L647

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L647-L650

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_conditional "

Create a switch.

If the condition

Parameters:
-----------

ind: 
evaluates to the integer k, where 0<=k<f.size(), then x[k] will be 

returned, otherwise

x_default: 
will be returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L647

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L647-L650

";

%feature("docstring")  casadi::GenericMatrixCommon::depends_on(const MatType
 &f, const MatType &arg) "

[INTERNAL] 
Check if expression depends on the argument.

The argument must be symbolic

Extra doc: https://github.com/casadi/casadi/wiki/L_1ck

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L657

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L657-L659

";

%feature("docstring") casadi::casadi_depends_on "

Check if expression depends on the argument.

The argument must be symbolic

Extra doc: https://github.com/casadi/casadi/wiki/L_1ck

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L657

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L657-L659

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_depends_on "

Check if expression depends on the argument.

The argument must be symbolic

Extra doc: https://github.com/casadi/casadi/wiki/L_1ck

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L657

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L657-L659

";

%feature("docstring")  casadi::GenericMatrixCommon::substitute(const MatType
 &ex, const MatType &v, const MatType &vdef) "

[INTERNAL] 
Substitute variable v with expression vdef in an expression ex.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L664

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L664-L667

";

%feature("docstring") casadi::casadi_substitute "

Substitute variable v with expression vdef in an expression ex.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L664

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L664-L667

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_substitute "

Substitute variable v with expression vdef in an expression ex.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L664

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L664-L667

";

%feature("docstring")  casadi::GenericMatrixCommon::substitute(const 
std::vector< MatType > &ex, const std::vector< MatType > &v, const 
std::vector< MatType > &vdef) "

[INTERNAL] 
Substitute variable var with expression expr in multiple 
expressions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L673

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L673-L676

";

%feature("docstring") casadi::casadi_substitute "

Substitute variable var with expression expr in multiple expressions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L673

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L673-L676

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_substitute "

Substitute variable var with expression expr in multiple expressions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L673

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L673-L676

";

%feature("docstring")  casadi::GenericMatrixCommon::substitute_inplace(const
 std::vector< MatType > &v, std::vector< MatType > &inout_vdef, std::vector<
 MatType > &inout_ex, bool reverse=false) "

[INTERNAL] 
Inplace substitution with piggyback expressions.

Substitute variables v out of the expressions vdef sequentially, as 
well as
 out of a number of other expressions piggyback

Extra doc: https://github.com/casadi/casadi/wiki/L_1cn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L685

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L685-L689

";

%feature("docstring") casadi::casadi_substitute_inplace "

Inplace substitution with piggyback expressions.

Substitute variables v out of the expressions vdef sequentially, as 
well as
 out of a number of other expressions piggyback

Extra doc: https://github.com/casadi/casadi/wiki/L_1cn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L685

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L685-L689

";

%feature("docstring")  
casadi::GenericMatrixCommon::casadi_substitute_inplace "

Inplace substitution with piggyback expressions.

Substitute variables v out of the expressions vdef sequentially, as 
well as
 out of a number of other expressions piggyback

Extra doc: https://github.com/casadi/casadi/wiki/L_1cn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L685

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L685-L689

";

%feature("docstring")  casadi::GenericMatrixCommon::cse(const MatType &e) "

[INTERNAL] 
Common subexpression elimination.

Extra doc: https://github.com/casadi/casadi/wiki/L_1co

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L694

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L694-L696

";

%feature("docstring") casadi::casadi_cse "

Common subexpression elimination.

Extra doc: https://github.com/casadi/casadi/wiki/L_1co

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L694

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L694-L696

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_cse "

Common subexpression elimination.

Extra doc: https://github.com/casadi/casadi/wiki/L_1co

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L694

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L694-L696

";

%feature("docstring")  casadi::GenericMatrixCommon::cse(const std::vector< 
MatType > &e) "

[INTERNAL] 
Common subexpression elimination.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L702

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L702-L704

";

%feature("docstring") casadi::casadi_cse "

Common subexpression elimination.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L702

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L702-L704

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_cse "

Common subexpression elimination.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L702

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L702-L704

";

%feature("docstring")  casadi::GenericMatrixCommon::solve(const MatType &A, 
const MatType &b) "

[INTERNAL] 
 Solve a system of equations: A*x = b.

The solve routine works similar to Matlab's backslash when A is square
 and 
nonsingular. The algorithm used is the following:
A simple forward or 
backward substitution if A is upper or lower 
triangular

If the linear system is at most 3-by-3, form the inverse via minor 

expansion and multiply

Permute the variables and equations as to get a (structurally) nonzero
 
diagonal, then perform a QR factorization without pivoting and solve 
the 
factorized system.

Note 1: If there are entries of the linear system known to be zero, 
these 
will be removed. Elements that are very small, or will evaluate 
to be zero,
 can still cause numerical errors, due to the lack of 
pivoting (which is 
not possible since cannot compare the size of 
entries)

Note 2: When permuting the linear system, a BLT (block lower 
triangular) 
transformation is formed. Only the permutation part of 
this is however 
used. An improvement would be to solve block-by-block 
if there are multiple
 BLT blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L724

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L724-L726

";

%feature("docstring") casadi::casadi_solve "

Solve a system of equations: A*x = b.

The solve routine works similar to Matlab's backslash when A is square
 and 
nonsingular. The algorithm used is the following:
A simple forward or 
backward substitution if A is upper or lower 
triangular

If the linear system is at most 3-by-3, form the inverse via minor 

expansion and multiply

Permute the variables and equations as to get a (structurally) nonzero
 
diagonal, then perform a QR factorization without pivoting and solve 
the 
factorized system.

Note 1: If there are entries of the linear system known to be zero, 
these 
will be removed. Elements that are very small, or will evaluate 
to be zero,
 can still cause numerical errors, due to the lack of 
pivoting (which is 
not possible since cannot compare the size of 
entries)

Note 2: When permuting the linear system, a BLT (block lower 
triangular) 
transformation is formed. Only the permutation part of 
this is however 
used. An improvement would be to solve block-by-block 
if there are multiple
 BLT blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L724

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L724-L726

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_solve "

Solve a system of equations: A*x = b.

The solve routine works similar to Matlab's backslash when A is square
 and 
nonsingular. The algorithm used is the following:
A simple forward or 
backward substitution if A is upper or lower 
triangular

If the linear system is at most 3-by-3, form the inverse via minor 

expansion and multiply

Permute the variables and equations as to get a (structurally) nonzero
 
diagonal, then perform a QR factorization without pivoting and solve 
the 
factorized system.

Note 1: If there are entries of the linear system known to be zero, 
these 
will be removed. Elements that are very small, or will evaluate 
to be zero,
 can still cause numerical errors, due to the lack of 
pivoting (which is 
not possible since cannot compare the size of 
entries)

Note 2: When permuting the linear system, a BLT (block lower 
triangular) 
transformation is formed. Only the permutation part of 
this is however 
used. An improvement would be to solve block-by-block 
if there are multiple
 BLT blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L724

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L724-L726

";

%feature("docstring")  casadi::GenericMatrixCommon::solve(const MatType &A, 
const MatType &b, const std::string &lsolver, const Dict &dict=Dict()) "

[INTERNAL] 
 Solve a system of equations: A*x = b.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L731

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L731-L735

";

%feature("docstring") casadi::casadi_solve "

Solve a system of equations: A*x = b.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L731

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L731-L735

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_solve "

Solve a system of equations: A*x = b.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L731

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L731-L735

";

%feature("docstring")  casadi::GenericMatrixCommon::pinv(const MatType &A) "

[INTERNAL] 
Computes the Moore-Penrose pseudo-inverse.

If the matrix A is fat (size1<size2), mul(A, pinv(A)) is unity.

pinv(A)' = (AA')^(-1) A

If the matrix A is slender (size1>size2), mul(pinv(A), A) is unity.

pinv(A) = (A'A)^(-1) A'

Extra doc: https://github.com/casadi/casadi/wiki/L_1ct

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L757

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L757-L759

";

%feature("docstring") casadi::casadi_pinv "

Computes the Moore-Penrose pseudo-inverse.

If the matrix A is fat (size1<size2), mul(A, pinv(A)) is unity.

pinv(A)' = (AA')^(-1) A

If the matrix A is slender (size1>size2), mul(pinv(A), A) is unity.

pinv(A) = (A'A)^(-1) A'

Extra doc: https://github.com/casadi/casadi/wiki/L_1ct

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L757

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L757-L759

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_pinv "

Computes the Moore-Penrose pseudo-inverse.

If the matrix A is fat (size1<size2), mul(A, pinv(A)) is unity.

pinv(A)' = (AA')^(-1) A

If the matrix A is slender (size1>size2), mul(pinv(A), A) is unity.

pinv(A) = (A'A)^(-1) A'

Extra doc: https://github.com/casadi/casadi/wiki/L_1ct

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L757

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L757-L759

";

%feature("docstring")  casadi::GenericMatrixCommon::pinv(const MatType &A, 
const std::string &lsolver, const Dict &dict=Dict()) "

[INTERNAL] 
Computes the Moore-Penrose pseudo-inverse.

If the matrix A is fat (size1>size2), mul(A, pinv(A)) is unity. If the
 
matrix A is slender (size2<size1), mul(pinv(A), A) is unity.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L767

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L767-L770

";

%feature("docstring") casadi::casadi_pinv "

Computes the Moore-Penrose pseudo-inverse.

If the matrix A is fat (size1>size2), mul(A, pinv(A)) is unity. If the
 
matrix A is slender (size2<size1), mul(pinv(A), A) is unity.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L767

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L767-L770

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_pinv "

Computes the Moore-Penrose pseudo-inverse.

If the matrix A is fat (size1>size2), mul(A, pinv(A)) is unity. If the
 
matrix A is slender (size2<size1), mul(pinv(A), A) is unity.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L767

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L767-L770

";

%feature("docstring")  casadi::GenericMatrixCommon::expm_const(const MatType
 &A, const MatType &t) "

[INTERNAL] 
Calculate  Matrix exponential.

Computes expm(A*t) with A constant

Parameters:
-----------

A[in]: 
Square matrix

t[in]: 
Scalar

Extra doc: https://github.com/casadi/casadi/wiki/L_23v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L782

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L782-L784

";

%feature("docstring") casadi::casadi_expm_const "

Calculate  Matrix exponential.

Computes expm(A*t) with A constant

Parameters:
-----------

A[in]: 
Square matrix

t[in]: 
Scalar

Extra doc: https://github.com/casadi/casadi/wiki/L_23v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L782

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L782-L784

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_expm_const "

Calculate  Matrix exponential.

Computes expm(A*t) with A constant

Parameters:
-----------

A[in]: 
Square matrix

t[in]: 
Scalar

Extra doc: https://github.com/casadi/casadi/wiki/L_23v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L782

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L782-L784

";

%feature("docstring")  casadi::GenericMatrixCommon::expm(const MatType &A) "

[INTERNAL] 
Calculate  Matrix exponential.

Extra doc: https://github.com/casadi/casadi/wiki/L_23w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L790

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L790-L792

";

%feature("docstring") casadi::casadi_expm "

Calculate  Matrix exponential.

Extra doc: https://github.com/casadi/casadi/wiki/L_23w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L790

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L790-L792

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_expm "

Calculate  Matrix exponential.

Extra doc: https://github.com/casadi/casadi/wiki/L_23w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L790

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L790-L792

";

%feature("docstring")  casadi::GenericMatrixCommon::jacobian(const MatType 
&ex, const MatType &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Calculate Jacobian.

Sparse matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_1cv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L799

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L799-L802

";

%feature("docstring") casadi::casadi_jacobian "

Calculate Jacobian.

Sparse matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_1cv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L799

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L799-L802

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_jacobian "

Calculate Jacobian.

Sparse matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_1cv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L799

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L799-L802

";

%feature("docstring")  casadi::GenericMatrixCommon::forward(const 
std::vector< MatType > &ex, const std::vector< MatType > &arg, const 
std::vector< std::vector< MatType > > &v, const Dict &opts=Dict()) "

[INTERNAL] 
Forward directional derivative.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L841

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L841-L845

";

%feature("docstring") casadi::casadi_forward "

Forward directional derivative.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L841

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L841-L845

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_forward "

Forward directional derivative.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L841

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L841-L845

";

%feature("docstring")  casadi::GenericMatrixCommon::reverse(const 
std::vector< MatType > &ex, const std::vector< MatType > &arg, const 
std::vector< std::vector< MatType > > &v, const Dict &opts=Dict()) "

[INTERNAL] 
Reverse directional derivative.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L851

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L851-L855

";

%feature("docstring") casadi::casadi_reverse "

Reverse directional derivative.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L851

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L851-L855

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_reverse "

Reverse directional derivative.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L851

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L851-L855

";

%feature("docstring")  casadi::GenericMatrixCommon::which_depends(const 
MatType &expr, const MatType &var, casadi_int order, bool tr) "

[INTERNAL] 
Find out which variables enter with some order.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L874

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L874-L877

";

%feature("docstring") casadi::casadi_which_depends "

Find out which variables enter with some order.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L874

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L874-L877

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_which_depends "

Find out which variables enter with some order.

Extra doc: https://github.com/casadi/casadi/wiki/L_1cz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L874

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L874-L877

";

%feature("docstring")  casadi::GenericMatrixCommon::jacobian_sparsity(const 
MatType &f, const MatType &x) "

[INTERNAL] 
Get the sparsity pattern of a jacobian.

Equivalent to, but cheaper to compute than, jacobian(f,x). sparsity()

Extra doc: https://github.com/casadi/casadi/wiki/L_259

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L884

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L884-L886

";

%feature("docstring") casadi::casadi_jacobian_sparsity "

Get the sparsity pattern of a jacobian.

Equivalent to, but cheaper to compute than, jacobian(f,x). sparsity()

Extra doc: https://github.com/casadi/casadi/wiki/L_259

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L884

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L884-L886

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_jacobian_sparsity
 "

Get the sparsity pattern of a jacobian.

Equivalent to, but cheaper to compute than, jacobian(f,x). sparsity()

Extra doc: https://github.com/casadi/casadi/wiki/L_259

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L884

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L884-L886

";

%feature("docstring")  casadi::GenericMatrixCommon::n_nodes(const MatType 
&A) "

[INTERNAL] 
Count number of nodes

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L939

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L939-L941

";

%feature("docstring")  casadi::GenericMatrixCommon::simplify(const MatType 
&x) "

[INTERNAL] 
Simplify an expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L944

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L944-L946

";

%feature("docstring") casadi::casadi_simplify "

Simplify an expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L944

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L944-L946

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_simplify "

Simplify an expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L944

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L944-L946

";

%feature("docstring")  casadi::GenericMatrixCommon::print_operator(const 
MatType &xb, const std::vector< std::string > &args) "

[INTERNAL] 
Get a string representation for a binary MatType, using custom 

arguments.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L952

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L952-L954

";

%feature("docstring") casadi::casadi_print_operator "

Get a string representation for a binary MatType, using custom 
arguments.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L952

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L952-L954

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_print_operator "

Get a string representation for a binary MatType, using custom 
arguments.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L952

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L952-L954

";

%feature("docstring")  casadi::GenericMatrixCommon::extract(std::vector< 
MatType > &ex, std::vector< MatType > &v, std::vector< MatType > &vdef, 
const Dict &opts=Dict()) "

[INTERNAL] 
Introduce intermediate variables for selected nodes in a graph.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L959

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L959-L964

";

%feature("docstring") casadi::casadi_extract "

Introduce intermediate variables for selected nodes in a graph.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L959

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L959-L964

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_extract "

Introduce intermediate variables for selected nodes in a graph.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L959

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L959-L964

";

%feature("docstring")  casadi::GenericMatrixCommon::shared(std::vector< 
MatType > &ex, std::vector< MatType > &v, std::vector< MatType > &vdef, 
const std::string &v_prefix="v_", const std::string &v_suffix="") "

[INTERNAL] 
Extract shared subexpressions from an set of expressions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L969

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L969-L975

";

%feature("docstring") casadi::casadi_shared "

Extract shared subexpressions from an set of expressions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L969

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L969-L975

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_shared "

Extract shared subexpressions from an set of expressions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1d6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L969

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L969-L975

";


// File: classcasadi_1_1GenericType.xml
%feature("docstring") casadi::GenericType "

[INTERNAL] 
Generic data type, can hold different types such as bool, 
casadi_int, 
std::string etc.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_17n

C++ includes: generic_type.hpp
";

%feature("docstring")  casadi::GenericType::is_bool() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L134-L136

";

%feature("docstring")  casadi::GenericType::is_int() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L162

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L138-L140

";

%feature("docstring")  casadi::GenericType::is_double() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L163

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L142-L144

";

%feature("docstring")  casadi::GenericType::is_string() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L164

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L146-L148

";

%feature("docstring")  casadi::GenericType::is_empty_vector() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L165

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L150-L157

";

%feature("docstring")  casadi::GenericType::is_int_vector() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L166

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L159-L161

";

%feature("docstring")  casadi::GenericType::is_int_vector_vector() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L167

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L167-L169

";

%feature("docstring")  casadi::GenericType::is_double_vector() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L168

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L171-L173

";

%feature("docstring")  casadi::GenericType::is_double_vector_vector() const 
"

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L169

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L175-L177

";

%feature("docstring")  casadi::GenericType::is_bool_vector() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L170

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L163-L165

";

%feature("docstring")  casadi::GenericType::is_string_vector() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L171

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L179-L181

";

%feature("docstring")  casadi::GenericType::is_dict() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L172

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L195-L197

";

%feature("docstring")  casadi::GenericType::is_function() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L173

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L183-L185

";

%feature("docstring")  casadi::GenericType::is_function_vector() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L174

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L187-L189

";

%feature("docstring")  casadi::GenericType::is_void_pointer() const "

[INTERNAL] 
Check if a particular type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L175

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L191-L193

";

%feature("docstring")  casadi::GenericType::as_bool() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L182

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L262-L265

";

%feature("docstring")  casadi::GenericType::as_int() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L183

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L267-L270

";

%feature("docstring")  casadi::GenericType::as_double() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L184

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L272-L275

";

%feature("docstring")  casadi::GenericType::as_string() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L185

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L277-L280

";

%feature("docstring")  casadi::GenericType::as_int_vector() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L186

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L282-L285

";

%feature("docstring")  casadi::GenericType::as_bool_vector() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L187

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L287-L290

";

%feature("docstring")  casadi::GenericType::as_int_vector_vector() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L188

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L292-L295

";

%feature("docstring")  casadi::GenericType::as_double_vector() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L297-L300

";

%feature("docstring")  casadi::GenericType::as_double_vector_vector() const 
"

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L190

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L302-L305

";

%feature("docstring")  casadi::GenericType::as_string_vector() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L307-L310

";

%feature("docstring")  casadi::GenericType::as_dict() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L192

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L312-L315

";

%feature("docstring")  casadi::GenericType::as_function() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L193

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L317-L320

";

%feature("docstring")  casadi::GenericType::as_function_vector() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L194

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L322-L325

";

%feature("docstring")  casadi::GenericType::as_void_pointer() const "

[INTERNAL] 
Cast to the internal type.

Extra doc: https://github.com/casadi/casadi/wiki/L_17q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L195

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L327-L330

";

%feature("docstring")  casadi::GenericType::to_bool() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L332-L341

";

%feature("docstring")  casadi::GenericType::to_int() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L201

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L343-L352

";

%feature("docstring")  casadi::GenericType::to_double() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L202

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L354-L361

";

%feature("docstring")  casadi::GenericType::to_string() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L203

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L363-L366

";

%feature("docstring")  casadi::GenericType::to_int_vector() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L204

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L373-L376

";

%feature("docstring")  casadi::GenericType::to_bool_vector() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L205

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L384-L393

";

%feature("docstring")  casadi::GenericType::to_int_vector_vector() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L395-L398

";

%feature("docstring")  casadi::GenericType::to_double_vector() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L400-L408

";

%feature("docstring")  casadi::GenericType::to_double_vector_vector() const 
"

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L208

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L410-L421

";

%feature("docstring")  casadi::GenericType::to_string_vector() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L209

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L423-L439

";

%feature("docstring")  casadi::GenericType::to_dict() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L210

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L441-L444

";

%feature("docstring")  casadi::GenericType::to_function() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L211

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L446-L449

";

%feature("docstring")  casadi::GenericType::to_function_vector() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L212

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L451-L454

";

%feature("docstring")  casadi::GenericType::to_void_pointer() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L213

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L456-L464

";

%feature("docstring")  casadi::GenericType::to_int_type_vector() const "

[INTERNAL] 
Convert to a type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L214

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L368-L371

";

%feature("docstring") casadi::GenericType::GenericType() "

[INTERNAL] 
Default constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L81

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L199-L200

";

%feature("docstring") casadi::GenericType::GenericType(bool b) "

[INTERNAL] 
Constructors (implicit type conversion)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L84

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L202-L204

";

%feature("docstring") casadi::GenericType::GenericType(casadi_int i) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(int i) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(double d) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::string &s)
 "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::vector< 
bool > &iv) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::vector< 
casadi_int > &iv) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::vector< 
int > &iv) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::vector< 
std::vector< casadi_int > > &ivv) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::vector< 
double > &dv) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::vector< 
std::vector< double > > &dv) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::vector< 
std::string > &sv) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const char s[]) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const Function &f) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const std::vector< 
Function > &f) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(const Dict &dict) "

[INTERNAL] ";

%feature("docstring") casadi::GenericType::GenericType(void *ptr) "

[INTERNAL] ";

%feature("docstring")  casadi::GenericType::get_description() const "

[INTERNAL] 
Get a description of the object's type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L120

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L120-L120

";

%feature("docstring")  casadi::GenericType::can_cast_to(TypeID other) const 
"

[INTERNAL] ";

%feature("docstring")  casadi::GenericType::can_cast_to(const GenericType 
&other) const "

[INTERNAL] ";

%feature("docstring")  casadi::GenericType::getType() const "

[INTERNAL] ";

%feature("docstring")  casadi::GenericType::serialize(SerializingStream &s) 
const "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_17r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L547-L550

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::GenericType::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1GlobalOptions.xml
%feature("docstring") casadi::GlobalOptions "

[INTERNAL] 
Collects global CasADi options.

Note to developers: 
use sparingly. Global options are - in general - a 
rather bad idea

this class must never be instantiated. Access its static members 
directly 

Joris Gillis

Extra doc: https://github.com/casadi/casadi/wiki/L_23m

C++ includes: global_options.hpp
";


// File: classcasadi_1_1ImplicitFixedStepIntegrator.xml
%feature("docstring") casadi::ImplicitFixedStepIntegrator "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1ImplicitToNlp.xml
%feature("docstring") casadi::ImplicitToNlp "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Importer.xml
%feature("docstring") casadi::Importer "

[INTERNAL] 
 Importer.

Just-in-time compilation of code
General informationList of plugins
- clang

- shell

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with   
Importer.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

clang
-----



Interface to the JIT compiler CLANG

Extra doc: https://github.com/casadi/casadi/wiki/L_21v

>List of available options

+--------------+-----------------+-----------------------------------------+
|      Id      |      Type       |               Description               |
+==============+=================+=========================================+
| flags        | OT_STRINGVECTOR | Compile flags for the JIT compiler.     |
|              |                 | Default: None                           |
+--------------+-----------------+-----------------------------------------+
| include_path | OT_STRING       | Include paths for the JIT compiler. The |
|              |                 | include directory shipped with CasADi   |
|              |                 | will be automatically appended.         |
+--------------+-----------------+-----------------------------------------+



--------------------------------------------------------------------------------

shell
-----



Interface to the JIT compiler SHELL

Extra doc: https://github.com/casadi/casadi/wiki/L_22w

>List of available options

+----------------------+-----------------+---------------------------------+
|          Id          |      Type       |           Description           |
+======================+=================+=================================+
| cleanup              | OT_BOOL         | Cleanup temporary files when    |
|                      |                 | unloading. Default: true        |
+----------------------+-----------------+---------------------------------+
| compiler             | OT_STRING       | Compiler command                |
+----------------------+-----------------+---------------------------------+
| compiler_flags       | OT_STRINGVECTOR | Alias for 'compiler_flags'      |
+----------------------+-----------------+---------------------------------+
| compiler_output_flag | OT_STRING       | Compiler flag to denote object  |
|                      |                 | output. Default: '-o '          |
+----------------------+-----------------+---------------------------------+
| compiler_setup       | OT_STRING       | Compiler setup command.         |
|                      |                 | Intended to be fixed. The       |
|                      |                 | 'flag' option is the prefered   |
|                      |                 | way to set custom flags.        |
+----------------------+-----------------+---------------------------------+
| directory            | OT_STRING       | Directory to put temporary      |
|                      |                 | objects in. Must end with a     |
|                      |                 | file separator.                 |
+----------------------+-----------------+---------------------------------+
| extra_suffixes       | OT_STRINGVECTOR | List of suffixes for extra      |
|                      |                 | files that the compiler may     |
|                      |                 | generate. Default: None         |
+----------------------+-----------------+---------------------------------+
| flags                | OT_STRINGVECTOR | Compile flags for the JIT       |
|                      |                 | compiler. Default: None         |
+----------------------+-----------------+---------------------------------+
| linker               | OT_STRING       | Linker command                  |
+----------------------+-----------------+---------------------------------+
| linker_flags         | OT_STRINGVECTOR | Linker flags for the JIT        |
|                      |                 | compiler. Default: None         |
+----------------------+-----------------+---------------------------------+
| linker_output_flag   | OT_STRING       | Linker flag to denote shared    |
|                      |                 | library output. Default: '-o '  |
+----------------------+-----------------+---------------------------------+
| linker_setup         | OT_STRING       | Linker setup command. Intended  |
|                      |                 | to be fixed. The 'flag' option  |
|                      |                 | is the prefered way to set      |
|                      |                 | custom flags.                   |
+----------------------+-----------------+---------------------------------+
| name                 | OT_STRING       | The file name used to write out |
|                      |                 | compiled objects/libraries. The |
|                      |                 | actual file names used depend   |
|                      |                 | on 'temp_suffix' and include    |
|                      |                 | extensions. Default:            |
|                      |                 | 'tmp_casadi_compiler_shell'     |
+----------------------+-----------------+---------------------------------+
| temp_suffix          | OT_BOOL         | Use a temporary (seemingly      |
|                      |                 | random) filename suffix for     |
|                      |                 | file names. This is desired for |
|                      |                 | thread-safety. This behaviour   |
|                      |                 | may defeat caching compiler     |
|                      |                 | wrappers. Default: true         |
+----------------------+-----------------+---------------------------------+

Joris Gillis

Extra doc: https://github.com/casadi/casadi/wiki/L_161

C++ includes: importer.hpp
";

%feature("docstring") casadi::Importer::Importer() "

[INTERNAL] 
Default constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L94

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L31-L32

";

%feature("docstring") casadi::Importer::Importer(const std::string &name, 
const std::string &compiler, const Dict &opts=Dict()) "

[INTERNAL] 
 Importer factory.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L97

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L34-L45

";

%feature("docstring")  casadi::Importer::plugin_name() const "

[INTERNAL] 
Query plugin name.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L118

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L71-L73

";

%feature("docstring")  casadi::Importer::has_function(const std::string 
&symname) const "

[INTERNAL] ";

%feature("docstring")  casadi::Importer::get_function(const std::string 
&symname) "

[INTERNAL] 
Get a function pointer for numerical evaluation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L125

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L79-L81

";

%feature("docstring")  casadi::Importer::has_meta(const std::string &cmd, 
casadi_int ind=-1) const "

[INTERNAL] 
Does a meta entry exist?

Extra doc: https://github.com/casadi/casadi/wiki/L_165

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L145

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L83-L85

";

%feature("docstring")  casadi::Importer::get_meta(const std::string &cmd, 
casadi_int ind=-1) const "

[INTERNAL] 
Get entry as a text.

Extra doc: https://github.com/casadi/casadi/wiki/L_166

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L87-L89

";

%feature("docstring")  casadi::Importer::inlined(const std::string &symname)
 const "

[INTERNAL] 
Check if a function is inlined.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L153

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L91-L93

";

%feature("docstring")  casadi::Importer::body(const std::string &symname) 
const "

[INTERNAL] 
Get the function body, if inlined.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L156

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L95-L97

";

%feature("docstring")  casadi::Importer::library() const "

[INTERNAL] 
Get library name.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L159

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L99-L101

";

%feature("docstring")  casadi::Importer::to(const std::string &cmd, 
casadi_int ind=-1) const "

[INTERNAL] 
Convert to a type.

Extra doc: https://github.com/casadi/casadi/wiki/L_167

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L173

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L173-L175

";

%feature("docstring")  casadi::Importer::meta_string(const std::string &cmd,
 casadi_int ind=-1) const "

[INTERNAL] 
Get entry as a string.

Extra doc: https://github.com/casadi/casadi/wiki/L_168

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L180

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L180-L182

";

%feature("docstring")  casadi::Importer::meta_vector(const std::string &cmd,
 casadi_int ind=-1) const "

[INTERNAL] 
Get entry as a vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_169

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L188

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L188-L190

";

%feature("docstring")  casadi::Importer::meta_set(const std::string &cmd, 
casadi_int ind=-1) const "

[INTERNAL] 
Get entry as a set.

Extra doc: https://github.com/casadi/casadi/wiki/L_16a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L196

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L196-L198

";

%feature("docstring")  casadi::Importer::meta_int(const std::string &cmd, 
casadi_int ind=-1) const "

[INTERNAL] 
Get entry as an integer.

Extra doc: https://github.com/casadi/casadi/wiki/L_16b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L203

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L203-L205

";

%feature("docstring")  casadi::Importer::serialize(SerializingStream &s) 
const "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_16c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L211

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.cpp#L103-L105

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::Importer::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1IncrementalSerializer.xml
%feature("docstring") casadi::IncrementalSerializer "

[INTERNAL] ";


// File: classcasadi_1_1Input.xml


// File: classcasadi_1_1Integrator.xml
%feature("docstring") casadi::Integrator "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Interpolant.xml
%feature("docstring") casadi::Interpolant "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1IOInstruction.xml


// File: classcasadi_1_1Ipqp.xml
%feature("docstring") casadi::Ipqp "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1KeyboardInterruptException.xml
%feature("docstring") casadi::KeyboardInterruptException "

[INTERNAL] C++ includes: exception.hpp
";

%feature("docstring") 
casadi::KeyboardInterruptException::KeyboardInterruptException() "

[INTERNAL] 
Default constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L101

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L101-L101

";

%feature("docstring") 
casadi::KeyboardInterruptException::~KeyboardInterruptException "

[INTERNAL]  throw ()
Destructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L103

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L103-L103

";

%feature("docstring")  casadi::CasadiException::what() const  "

[INTERNAL]  throw ()
Display error.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L90

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/exception.hpp#L90-L92

";


// File: classcasadi_1_1LapackLu.xml
%feature("docstring") casadi::LapackLu "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1LapackQr.xml
%feature("docstring") casadi::LapackQr "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1LinearInterpolant.xml
%feature("docstring") casadi::LinearInterpolant "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Linsol.xml
%feature("docstring") casadi::Linsol "

[INTERNAL] 
Linear solver.

Create a solver for linear systems of equations Solves the linear 
system 
A*X = B or A^T*X = B for X with A square and non-singular

If A is structurally singular, an error will be thrown during init. If
 A is
 numerically singular, the prepare step will fail.
General informationList 
of plugins
- csparsecholesky

- csparse

- ma27

- lapacklu

- lapackqr

- mumps

- ldl

- qr

- tridiag

- symbolicqr

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with   
Linsol.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

csparsecholesky
---------------



Linsol with CSparseCholesky Interface

Extra doc: https://github.com/casadi/casadi/wiki/L_21u



--------------------------------------------------------------------------------

csparse
-------



Linsol with CSparse Interface

Extra doc: https://github.com/casadi/casadi/wiki/L_21t



--------------------------------------------------------------------------------

ma27
----



Interface to the sparse direct linear solver MA27 Works for symmetric
 
indefinite systems Partly adopted from qpOASES 3.2 
Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_229



--------------------------------------------------------------------------------

lapacklu
--------



This class solves the linear system  A.x=b by making an LU factorization of 
A:  A = L.U, with L lower and U upper triangular

Extra doc: https://github.com/casadi/casadi/wiki/L_22h

>List of available options

+-----------------------------+---------+----------------------------------+
|             Id              |  Type   |           Description            |
+=============================+=========+==================================+
| allow_equilibration_failure | OT_BOOL | Non-fatal error when             |
|                             |         | equilibration fails              |
+-----------------------------+---------+----------------------------------+
| equilibration               | OT_BOOL | Equilibrate the matrix           |
+-----------------------------+---------+----------------------------------+



--------------------------------------------------------------------------------

lapackqr
--------



This class solves the linear system  A.x=b by making an QR factorization of 
A:  A = Q.R, with Q orthogonal and R upper triangular

Extra doc: https://github.com/casadi/casadi/wiki/L_22g

>List of available options

+----------+--------+------------------------------------------------------+
|    Id    |  Type  |                     Description                      |
+==========+========+======================================================+
| max_nrhs | OT_INT | Maximum number of right-hand-sides that get          |
|          |        | processed in a single pass [default:10].             |
+----------+--------+------------------------------------------------------+



--------------------------------------------------------------------------------

mumps
-----



Interface to the sparse direct linear solver MUMPS Works for 
symmetric 
indefinite systems 
Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_22t

>List of available options

+-----------+---------+-------------------+
|    Id     |  Type   |    Description    |
+===========+=========+===================+
| posdef    | OT_BOOL | Positive definite |
+-----------+---------+-------------------+
| symmetric | OT_BOOL | Symmetric matrix  |
+-----------+---------+-------------------+



--------------------------------------------------------------------------------

ldl
---



Linear solver using sparse direct LDL factorization

Extra doc: https://github.com/casadi/casadi/wiki/L_233



--------------------------------------------------------------------------------

qr
--



Linear solver using sparse direct QR factorization

Extra doc: https://github.com/casadi/casadi/wiki/L_22z



--------------------------------------------------------------------------------

tridiag
-------



Linear solver for tridiagonal matrices

Extra doc: https://github.com/casadi/casadi/wiki/L_22v



--------------------------------------------------------------------------------

symbolicqr
----------



Linear solver for sparse least-squares problems Inspired from 
https://github.com/scipy/scipy/blob/v0.14.0/scipy/sparse/linalg/isolve/lsqr.py#L96

Extra doc: https://github.com/casadi/casadi/wiki/L_230

Linsol based on QR factorization with sparsity pattern based reordering  
without partial pivoting

Extra doc: https://github.com/casadi/casadi/wiki/L_231

>List of available options

+-------+---------+----------------------------------------------------+
|  Id   |  Type   |                    Description                     |
+=======+=========+====================================================+
| fopts | OT_DICT | Options to be passed to generated function objects |
+-------+---------+----------------------------------------------------+

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_1kh

C++ includes: linsol.hpp
";

%feature("docstring")  casadi::Linsol::solve(const DM &A, const DM &B, bool 
tr=false) const "

[INTERNAL] 
 Solve linear system of equations

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L110

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L72-L98

";

%feature("docstring") casadi::casadi_solve "

Solve linear system of equations

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L110

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L72-L98

";

%feature("docstring")  casadi::Linsol::casadi_solve "

Solve linear system of equations

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L110

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L72-L98

";

%feature("docstring")  casadi::Linsol::solve(const MX &A, const MX &B, bool 
tr=false) const "

[INTERNAL] 
 Solve linear system of equations

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L111

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L100-L102

";

%feature("docstring") casadi::casadi_solve "

Solve linear system of equations

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L111

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L100-L102

";

%feature("docstring")  casadi::Linsol::casadi_solve "

Solve linear system of equations

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L111

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L100-L102

";

%feature("docstring")  casadi::Linsol::solve(const double *A, double *x, 
casadi_int nrhs=1, bool tr=false, int mem=0) const "

[INTERNAL] 
Low-level API

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L136

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L187-L194

";

%feature("docstring") casadi::casadi_solve "

Low-level API

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L136

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L187-L194

";

%feature("docstring")  casadi::Linsol::casadi_solve "

Low-level API

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L136

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L187-L194

";

%feature("docstring")  casadi::Linsol::sfact(const double *A, int mem=0) 
const "

[INTERNAL] 
Low-level API

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L134

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L109-L124

";

%feature("docstring")  casadi::Linsol::sfact(const DM &A) const "

[INTERNAL] 
Symbolic factorization of the linear system, e.g. selecting 
pivots.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L103

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L104-L107

";

%feature("docstring")  casadi::Linsol::nfact(const double *A, int mem=0) 
const "

[INTERNAL] 
Low-level API

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L131-L163

";

%feature("docstring")  casadi::Linsol::nfact(const DM &A) const "

[INTERNAL] 
Numeric factorization of the linear system.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L106

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L126-L129

";

%feature("docstring")  casadi::Linsol::neig(const double *A, int mem=0) 
const "

[INTERNAL] 
Low-level API

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L137

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L172-L174

";

%feature("docstring")  casadi::Linsol::neig(const DM &A) const "

[INTERNAL] 
Number of negative eigenvalues.

Not available for all solvers

Extra doc: https://github.com/casadi/casadi/wiki/L_1kk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L119

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L165-L170

";

%feature("docstring")  casadi::Linsol::rank(const double *A, int mem=0) 
const "

[INTERNAL] 
Low-level API

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L183-L185

";

%feature("docstring")  casadi::Linsol::rank(const DM &A) const "

[INTERNAL] 
 Matrix rank.

Not available for all solvers

Extra doc: https://github.com/casadi/casadi/wiki/L_1kl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L126

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L176-L181

";

%feature("docstring") casadi::Linsol::Linsol() "

[INTERNAL] 
Default constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L63

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L31-L32

";

%feature("docstring") casadi::Linsol::Linsol(const std::string &name, const 
std::string &solver, const Sparsity &sp, const Dict &opts=Dict()) "

[INTERNAL] 
Constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L66

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L34-L38

";

%feature("docstring")  casadi::Linsol::plugin_name() const "

[INTERNAL] 
Query plugin name.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L97

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L64-L66

";

%feature("docstring")  casadi::Linsol::sparsity() const "

[INTERNAL] 
Get linear system sparsity.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L100

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L68-L70

";

%feature("docstring") casadi::casadi_sparsity "

Get linear system sparsity.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L100

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L68-L70

";

%feature("docstring")  casadi::Linsol::casadi_sparsity "

Get linear system sparsity.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L100

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L68-L70

";

%feature("docstring")  casadi::Linsol::stats(int mem=1) const "

[INTERNAL] 
Get all statistics obtained at the end of the last evaluate 
call.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L129

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L217-L219

";

%feature("docstring")  casadi::Linsol::checkout() const "

[INTERNAL] 
Checkout a memory object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L142

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L196-L198

";

%feature("docstring")  casadi::Linsol::release(int mem) const "

[INTERNAL] 
Release a memory object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L145

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L200-L202

";

%feature("docstring")  casadi::Linsol::serialize(SerializingStream &s) const
 "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_1km

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L221-L224

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::Linsol::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1LinsolCall.xml


// File: classcasadi_1_1LinsolLdl.xml
%feature("docstring") casadi::LinsolLdl "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1LinsolQr.xml
%feature("docstring") casadi::LinsolQr "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Logger.xml
%feature("docstring") casadi::Logger "

[INTERNAL] 
Keeps track of logging output to screen and/or files.

All printout from CasADi routines should go through this files.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_23u

C++ includes: casadi_logger.hpp
";


// File: classcasadi_1_1Matrix.xml


/*
 Construct symbolic primitives 
*/

/*
The \"sym\" function is intended to work in a similar way as \"sym\" 

used in the Symbolic Toolbox for Matlab but instead creating a CasADi 

symbolic primitive.

*/
%feature("docstring") casadi::MatrixCommon "

[INTERNAL] 
Sparse matrix class. SX and DM are specializations.

General sparse matrix class that is designed with the idea that 

\"everything is a matrix\", that is, also scalars and vectors.
This 
philosophy makes it easy to use and to interface in particularly
 with 
Python and Matlab/Octave.
 Index starts with 0.
Index vec happens as 
follows: (rr, cc) -> k = rr+cc*size1()
Vectors are column vectors.
 The 
storage format is Compressed Column Storage (CCS), similar to 
that used for
 sparse matrices in Matlab, 
but unlike this format, we do allow for 
elements to be structurally 
non-zero but numerically zero.
 Matrix<Scalar> 
is polymorphic with a std::vector<Scalar> that 
contain all non-identical-
zero elements.
The sparsity can be accessed with Sparsity&  sparsity()
Joel 
Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_18e

C++ includes: matrix_decl.hpp
";

%feature("docstring")  casadi::MatrixCommon::get(MatrixCommon &m, bool ind1,
 const Slice &rr) const "

[INTERNAL] 
Get a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L226

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L134-L149

";

%feature("docstring")  casadi::MatrixCommon::get(MatrixCommon &m, bool ind1,
 const MatrixCommon &rr) const "

[INTERNAL] 
Get a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L227

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L152-L173

";

%feature("docstring")  casadi::MatrixCommon::get(MatrixCommon &m, bool ind1,
 const Sparsity &sp) const "

[INTERNAL] 
Get a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L228

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L176-L182

";

%feature("docstring")  casadi::MatrixCommon::get(MatrixCommon &m, bool ind1,
 const Slice &rr, const Slice &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L79-L94

";

%feature("docstring")  casadi::MatrixCommon::get(MatrixCommon &m, bool ind1,
 const Slice &rr, const MatrixCommon &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L235

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L97-L101

";

%feature("docstring")  casadi::MatrixCommon::get(MatrixCommon &m, bool ind1,
 const MatrixCommon &rr, const Slice &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L237

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L104-L108

";

%feature("docstring")  casadi::MatrixCommon::get(MatrixCommon &m, bool ind1,
 const MatrixCommon &rr, const MatrixCommon &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L239

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L111-L131

";

%feature("docstring")  casadi::MatrixCommon::set(const MatrixCommon &m, bool
 ind1, const Slice &rr) "

[INTERNAL] 
Set a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L245

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L285-L301

";

%feature("docstring")  casadi::MatrixCommon::set(const MatrixCommon &m, bool
 ind1, const MatrixCommon &rr) "

[INTERNAL] 
Set a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L246

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L304-L377

";

%feature("docstring")  casadi::MatrixCommon::set(const MatrixCommon &m, bool
 ind1, const Sparsity &sp) "

[INTERNAL] 
Set a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L247

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L380-L391

";

%feature("docstring")  casadi::MatrixCommon::set(const MatrixCommon &m, bool
 ind1, const Slice &rr, const Slice &cc) "

[INTERNAL] 
Set a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L252

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L185-L201

";

%feature("docstring")  casadi::MatrixCommon::set(const MatrixCommon &m, bool
 ind1, const Slice &rr, const MatrixCommon &cc) "

[INTERNAL] 
Set a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L253

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L204-L208

";

%feature("docstring")  casadi::MatrixCommon::set(const MatrixCommon &m, bool
 ind1, const MatrixCommon &rr, const Slice &cc) "

[INTERNAL] 
Set a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L254

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L211-L215

";

%feature("docstring")  casadi::MatrixCommon::set(const MatrixCommon &m, bool
 ind1, const MatrixCommon &rr, const MatrixCommon &cc) "

[INTERNAL] 
Set a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L255

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L218-L282

";

%feature("docstring")  casadi::MatrixCommon::get_nz(MatrixCommon &m, bool 
ind1, const Slice &k) const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L261

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L394-L403

";

%feature("docstring")  casadi::MatrixCommon::get_nz(MatrixCommon &m, bool 
ind1, const MatrixCommon &k) const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L262

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L406-L432

";

%feature("docstring")  casadi::MatrixCommon::set_nz(const MatrixCommon &m, 
bool ind1, const Slice &k) "

[INTERNAL] 
Set a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L267

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L435-L444

";

%feature("docstring")  casadi::MatrixCommon::set_nz(const MatrixCommon &m, 
bool ind1, const MatrixCommon &k) "

[INTERNAL] 
Set a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L268

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L447-L489

";

%feature("docstring")  casadi::MatrixCommon::nonzeros() "

[INTERNAL] 
Access the non-zero elements

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L959

";

%feature("docstring")  casadi::MatrixCommon::nonzeros() const "

[INTERNAL] 
Access the non-zero elements

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L960

";

%feature("docstring")  casadi::MatrixCommon::ptr() "

[INTERNAL] 
Get a pointer to the data

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L965

";

%feature("docstring")  casadi::MatrixCommon::ptr() const "

[INTERNAL] 
Get a pointer to the data

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L966

";

%feature("docstring")  casadi::MatrixCommon::get_ptr(MatrixCommon &v) "

[INTERNAL] 
Get a pointer to the data

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L967

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L967-L967

";

%feature("docstring")  casadi::MatrixCommon::get_ptr(const MatrixCommon &v) 
"

[INTERNAL] 
Get a pointer to the data

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L968

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L968-L968

";

%feature("docstring")  casadi::GenericMatrixCommon::get_row() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L194

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L194-L194

";

%feature("docstring")  casadi::GenericMatrixCommon::get_colind() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L195

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L195-L195

";

%feature("docstring")  casadi::GenericMatrixCommon::row() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L197

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L197-L197

";

%feature("docstring")  casadi::GenericMatrixCommon::row(casadi_int el) const
 "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L200-L200

";

%feature("docstring")  casadi::GenericMatrixCommon::colind() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L198

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L198-L198

";

%feature("docstring")  casadi::GenericMatrixCommon::colind(casadi_int col) 
const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L201

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L201-L201

";

%feature("docstring")  casadi::MatrixCommon::is_equal(const MatrixCommon &x,
 const MatrixCommon &y, casadi_int depth=0) "

[INTERNAL] 
Functions called by friend functions defined for  
GenericExpression

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L294

";

%feature("docstring")  casadi::MatrixCommon::mmin(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  
GenericExpression

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L295

";

%feature("docstring")  casadi::MatrixCommon::mmax(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  
GenericExpression

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L296

";

%feature("docstring")  casadi::MatrixCommon::simplify(const MatrixCommon &x)
 "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L301

";

%feature("docstring")  casadi::MatrixCommon::jacobian(const MatrixCommon &f,
 const MatrixCommon &x, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L302

";

%feature("docstring")  casadi::MatrixCommon::jacobian_sparsity(const 
MatrixCommon &f, const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L304

";

%feature("docstring")  casadi::MatrixCommon::hessian(const MatrixCommon &f, 
const MatrixCommon &x, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L305

";

%feature("docstring")  casadi::MatrixCommon::hessian(const MatrixCommon &f, 
const MatrixCommon &x, MatrixCommon &g, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L307

";

%feature("docstring")  casadi::MatrixCommon::substitute(const MatrixCommon 
&ex, const MatrixCommon &v, const MatrixCommon &vdef) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L310

";

%feature("docstring")  casadi::MatrixCommon::substitute(const std::vector< 
MatrixCommon > &ex, const std::vector< MatrixCommon > &v, const std::vector<
 MatrixCommon > &vdef) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L314

";

%feature("docstring")  casadi::MatrixCommon::substitute_inplace(const 
std::vector< MatrixCommon > &v, std::vector< MatrixCommon > &vdef, 
std::vector< MatrixCommon > &ex, bool revers) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L317

";

%feature("docstring")  casadi::MatrixCommon::pinv(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L321

";

%feature("docstring")  casadi::MatrixCommon::pinv(const MatrixCommon &A, 
const std::string &lsolver, const Dict &opts) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L322

";

%feature("docstring")  casadi::MatrixCommon::expm_const(const MatrixCommon 
&A, const MatrixCommon &t) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L324

";

%feature("docstring")  casadi::MatrixCommon::expm(const MatrixCommon &A) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L325

";

%feature("docstring")  casadi::MatrixCommon::solve(const MatrixCommon &A, 
const MatrixCommon &b) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L326

";

%feature("docstring")  casadi::MatrixCommon::solve(const MatrixCommon &A, 
const MatrixCommon &b, const std::string &lsolver, const Dict &opts) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L327

";

%feature("docstring")  casadi::MatrixCommon::inv(const MatrixCommon &A) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L329

";

%feature("docstring")  casadi::MatrixCommon::inv(const MatrixCommon &A, 
const std::string &lsolver, const Dict &opts) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L330

";

%feature("docstring")  casadi::MatrixCommon::n_nodes(const MatrixCommon &x) 
"

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L333

";

%feature("docstring")  casadi::MatrixCommon::print_operator(const 
MatrixCommon &x, const std::vector< std::string > &args) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L334

";

%feature("docstring")  casadi::MatrixCommon::extract(std::vector< 
MatrixCommon> &ex, std::vector< MatrixCommon> &v, std::vector< MatrixCommon>
 &vdef, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L336

";

%feature("docstring")  casadi::MatrixCommon::shared(std::vector< 
MatrixCommon > &ex, std::vector< MatrixCommon > &v, std::vector< 
MatrixCommon > &vdef, const std::string &v_prefix, const std::string 
&v_suffix) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L338

";

%feature("docstring") casadi::MatrixCommon::_bilin "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L343

";

%feature("docstring") casadi::MatrixCommon::_rank1 "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L346

";

%feature("docstring")  casadi::MatrixCommon::if_else(const MatrixCommon &x, 
const MatrixCommon &if_true, const MatrixCommon &if_false, bool 
short_circuit=false) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L350

";

%feature("docstring")  casadi::MatrixCommon::conditional(const MatrixCommon 
&ind, const std::vector< MatrixCommon > &x, const MatrixCommon &x_default, 
bool short_circuit=false) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L354

";

%feature("docstring")  casadi::MatrixCommon::depends_on(const MatrixCommon 
&x, const MatrixCommon &arg) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L358

";

%feature("docstring")  casadi::MatrixCommon::mrdivide(const MatrixCommon &x,
 const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L359

";

%feature("docstring")  casadi::MatrixCommon::mldivide(const MatrixCommon &x,
 const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L360

";

%feature("docstring")  casadi::MatrixCommon::symvar(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L361

";

%feature("docstring")  casadi::MatrixCommon::det(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L362

";

%feature("docstring")  casadi::MatrixCommon::inv_minor(const MatrixCommon 
&x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L363

";

%feature("docstring")  casadi::MatrixCommon::trace(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L364

";

%feature("docstring")  casadi::MatrixCommon::norm_1(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L365

";

%feature("docstring")  casadi::MatrixCommon::norm_2(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L366

";

%feature("docstring")  casadi::MatrixCommon::norm_fro(const MatrixCommon &x)
 "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L367

";

%feature("docstring")  casadi::MatrixCommon::norm_inf(const MatrixCommon &x)
 "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L368

";

%feature("docstring")  casadi::MatrixCommon::sum2(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L369

";

%feature("docstring")  casadi::MatrixCommon::sum1(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L370

";

%feature("docstring")  casadi::MatrixCommon::dot(const MatrixCommon &x, 
const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L371

";

%feature("docstring")  casadi::MatrixCommon::nullspace(const MatrixCommon 
&x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L372

";

%feature("docstring")  casadi::MatrixCommon::diag(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L373

";

%feature("docstring")  casadi::MatrixCommon::unite(const MatrixCommon &A, 
const MatrixCommon &B) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L374

";

%feature("docstring")  casadi::MatrixCommon::project(const MatrixCommon &x, 
const Sparsity &sp, bool intersect=false) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L375

";

%feature("docstring")  casadi::MatrixCommon::polyval(const MatrixCommon &p, 
const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L377

";

%feature("docstring")  casadi::MatrixCommon::densify(const MatrixCommon &x, 
const MatrixCommon &val) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L378

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L497-L524

";

%feature("docstring")  casadi::MatrixCommon::densify(const MatrixCommon &x) 
"

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L379

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L492-L494

";

%feature("docstring")  casadi::MatrixCommon::einstein(const MatrixCommon &A,
 const MatrixCommon &B, const MatrixCommon &C, const std::vector< casadi_int
 > &dim_a, const std::vector< casadi_int > &dim_b, const std::vector< 
casadi_int > &dim_c, const std::vector< casadi_int > &a, const std::vector< 
casadi_int > &b, const std::vector< casadi_int > &c) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L541-L563

";

%feature("docstring")  casadi::MatrixCommon::einstein(const MatrixCommon &A,
 const MatrixCommon &B, const std::vector< casadi_int > &dim_a, const 
std::vector< casadi_int > &dim_b, const std::vector< casadi_int > &dim_c, 
const std::vector< casadi_int > &a, const std::vector< casadi_int > &b, 
const std::vector< casadi_int > &c) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L387

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L566-L573

";

%feature("docstring")  casadi::MatrixCommon::cumsum(const MatrixCommon &x, 
casadi_int axis=-1) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L392

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L527-L538

";

%feature("docstring") casadi::MatrixCommon::_logsumexp "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L393

";

%feature("docstring")  casadi::MatrixCommon::cse(const std::vector< 
MatrixCommon > &e) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L394

";

%feature("docstring")  casadi::MatrixCommon::blockcat(const std::vector< 
std::vector< MatrixCommon > > &v) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L399

";

%feature("docstring")  casadi::MatrixCommon::horzcat(const std::vector< 
MatrixCommon > &v) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L400

";

%feature("docstring")  casadi::MatrixCommon::horzsplit(const MatrixCommon 
&x, const std::vector< casadi_int > &offset) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L402

";

%feature("docstring")  casadi::MatrixCommon::vertcat(const std::vector< 
MatrixCommon > &v) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L404

";

%feature("docstring")  casadi::MatrixCommon::vertsplit(const MatrixCommon 
&x, const std::vector< casadi_int > &offset) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L406

";

%feature("docstring")  casadi::MatrixCommon::diagsplit(const MatrixCommon 
&x, const std::vector< casadi_int > &offset1, const std::vector< casadi_int 
> &offset2) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L409

";

%feature("docstring")  casadi::MatrixCommon::reshape(const MatrixCommon &x, 
casadi_int nrow, casadi_int ncol) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L412

";

%feature("docstring")  casadi::MatrixCommon::reshape(const MatrixCommon &x, 
const Sparsity &sp) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L413

";

%feature("docstring")  casadi::MatrixCommon::sparsity_cast(const 
MatrixCommon &x, const Sparsity &sp) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L414

";

%feature("docstring")  casadi::MatrixCommon::kron(const MatrixCommon &x, 
const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L415

";

%feature("docstring")  casadi::MatrixCommon::mtimes(const MatrixCommon &x, 
const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L416

";

%feature("docstring")  casadi::MatrixCommon::mac(const MatrixCommon &x, 
const MatrixCommon &y, const MatrixCommon &z) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L417

";

%feature("docstring")  casadi::MatrixCommon::sparsify(const MatrixCommon &x,
 double tol=0) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L424

";

%feature("docstring")  casadi::MatrixCommon::sparsify(const MatrixCommon &A,
 double tol=0) "

[INTERNAL] 
Make a matrix sparse by removing numerical zeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_191

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L613

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L613-L615

";

%feature("docstring") casadi::casadi_sparsify "

Make a matrix sparse by removing numerical zeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_191

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L613

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L613-L615

";

%feature("docstring")  casadi::MatrixCommon::casadi_sparsify "

Make a matrix sparse by removing numerical zeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_191

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L613

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L613-L615

";

%feature("docstring")  casadi::MatrixCommon::expand(const MatrixCommon &x, 
MatrixCommon &weights, MatrixCommon &terms) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L425

";

%feature("docstring")  casadi::MatrixCommon::expand(const MatrixCommon &ex, 
MatrixCommon &weights, MatrixCommon &terms) "

[INTERNAL] 
Expand the expression as a weighted sum (with constant weights)

Extra doc: https://github.com/casadi/casadi/wiki/L_192

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L620

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L620-L623

";

%feature("docstring") casadi::casadi_expand "

Expand the expression as a weighted sum (with constant weights)

Extra doc: https://github.com/casadi/casadi/wiki/L_192

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L620

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L620-L623

";

%feature("docstring")  casadi::MatrixCommon::casadi_expand "

Expand the expression as a weighted sum (with constant weights)

Extra doc: https://github.com/casadi/casadi/wiki/L_192

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L620

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L620-L623

";

%feature("docstring")  casadi::MatrixCommon::pw_const(const MatrixCommon &t,
 const MatrixCommon &tval, const MatrixCommon &val) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L428

";

%feature("docstring")  casadi::MatrixCommon::pw_const(const MatrixCommon &t,
 const MatrixCommon &tval, const MatrixCommon &val) "

[INTERNAL] 
Create a piecewise constant function.

Create a piecewise constant function with n=val.size() intervals

Inputs:

Parameters:
-----------

t: 
a scalar variable (e.g. time)

tval: 
vector with the discrete values of t at the interval transitions 

(length n-1)

val: 
vector with the value of the function for each interval (length n)

Extra doc: https://github.com/casadi/casadi/wiki/L_193

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L635

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L635-L639

";

%feature("docstring") casadi::casadi_pw_const "

Create a piecewise constant function.

Create a piecewise constant function with n=val.size() intervals

Inputs:

Parameters:
-----------

t: 
a scalar variable (e.g. time)

tval: 
vector with the discrete values of t at the interval transitions 

(length n-1)

val: 
vector with the value of the function for each interval (length n)

Extra doc: https://github.com/casadi/casadi/wiki/L_193

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L635

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L635-L639

";

%feature("docstring")  casadi::MatrixCommon::casadi_pw_const "

Create a piecewise constant function.

Create a piecewise constant function with n=val.size() intervals

Inputs:

Parameters:
-----------

t: 
a scalar variable (e.g. time)

tval: 
vector with the discrete values of t at the interval transitions 

(length n-1)

val: 
vector with the value of the function for each interval (length n)

Extra doc: https://github.com/casadi/casadi/wiki/L_193

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L635

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L635-L639

";

%feature("docstring")  casadi::MatrixCommon::pw_lin(const MatrixCommon &t, 
const MatrixCommon &tval, const MatrixCommon &val) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L430

";

%feature("docstring")  casadi::MatrixCommon::pw_lin(const MatrixCommon &t, 
const MatrixCommon &tval, const MatrixCommon &val) "

[INTERNAL] 
t a scalar variable (e.g. time)

Create a piecewise linear function

Create a piecewise linear function:

Inputs:

tval vector with the the discrete values of t (monotonically 
increasing)

val vector with the corresponding function values (same length as 
tval)

::

                                                                                                      Extra doc: https://github.com/casadi/casadi/wiki/L_194 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L652

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L652-L655

";

%feature("docstring") casadi::casadi_pw_lin "

t a scalar variable (e.g. time)

Create a piecewise linear function

Create a piecewise linear function:

Inputs:

tval vector with the the discrete values of t (monotonically 
increasing)

val vector with the corresponding function values (same length as 
tval)

::

                                                                                                      Extra doc: https://github.com/casadi/casadi/wiki/L_194 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L652

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L652-L655

";

%feature("docstring")  casadi::MatrixCommon::casadi_pw_lin "

t a scalar variable (e.g. time)

Create a piecewise linear function

Create a piecewise linear function:

Inputs:

tval vector with the the discrete values of t (monotonically 
increasing)

val vector with the corresponding function values (same length as 
tval)

::

                                                                                                      Extra doc: https://github.com/casadi/casadi/wiki/L_194 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L652

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L652-L655

";

%feature("docstring")  casadi::MatrixCommon::heaviside(const MatrixCommon 
&x) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L432

";

%feature("docstring")  casadi::MatrixCommon::heaviside(const MatrixCommon 
&x) "

[INTERNAL] 
Heaviside function.

\\\\[ \\\\begin {cases} H(x) = 0 & x<0 \\\\\\\\ H(x) = 1/2 & x=0 
\\\\\\\\ 
H(x) = 1 & x>0 \\\\\\\\ \\\\end {cases} \\\\]

Extra doc: https://github.com/casadi/casadi/wiki/L_195

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L668

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L668-L670

";

%feature("docstring") casadi::casadi_heaviside "

Heaviside function.

\\\\[ \\\\begin {cases} H(x) = 0 & x<0 \\\\\\\\ H(x) = 1/2 & x=0 
\\\\\\\\ 
H(x) = 1 & x>0 \\\\\\\\ \\\\end {cases} \\\\]

Extra doc: https://github.com/casadi/casadi/wiki/L_195

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L668

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L668-L670

";

%feature("docstring")  casadi::MatrixCommon::casadi_heaviside "

Heaviside function.

\\\\[ \\\\begin {cases} H(x) = 0 & x<0 \\\\\\\\ H(x) = 1/2 & x=0 
\\\\\\\\ 
H(x) = 1 & x>0 \\\\\\\\ \\\\end {cases} \\\\]

Extra doc: https://github.com/casadi/casadi/wiki/L_195

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L668

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L668-L670

";

%feature("docstring")  casadi::MatrixCommon::rectangle(const MatrixCommon 
&x) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L433

";

%feature("docstring")  casadi::MatrixCommon::rectangle(const MatrixCommon 
&x) "

[INTERNAL] 
rectangle function

\\\\[ \\\\begin {cases} \\\\Pi(x) = 1 & |x| < 1/2 \\\\\\\\ \\\\Pi(x) =
 1/2 
& |x| = 1/2 \\\\\\\\ \\\\Pi(x) = 0 & |x| > 1/2 \\\\\\\\ \\\\end 
{cases} 
\\\\]

Also called: gate function, block function, band function, pulse 
function, 
window function

Extra doc: https://github.com/casadi/casadi/wiki/L_23n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L685

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L685-L687

";

%feature("docstring") casadi::casadi_rectangle "

rectangle function

\\\\[ \\\\begin {cases} \\\\Pi(x) = 1 & |x| < 1/2 \\\\\\\\ \\\\Pi(x) =
 1/2 
& |x| = 1/2 \\\\\\\\ \\\\Pi(x) = 0 & |x| > 1/2 \\\\\\\\ \\\\end 
{cases} 
\\\\]

Also called: gate function, block function, band function, pulse 
function, 
window function

Extra doc: https://github.com/casadi/casadi/wiki/L_23n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L685

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L685-L687

";

%feature("docstring")  casadi::MatrixCommon::casadi_rectangle "

rectangle function

\\\\[ \\\\begin {cases} \\\\Pi(x) = 1 & |x| < 1/2 \\\\\\\\ \\\\Pi(x) =
 1/2 
& |x| = 1/2 \\\\\\\\ \\\\Pi(x) = 0 & |x| > 1/2 \\\\\\\\ \\\\end 
{cases} 
\\\\]

Also called: gate function, block function, band function, pulse 
function, 
window function

Extra doc: https://github.com/casadi/casadi/wiki/L_23n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L685

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L685-L687

";

%feature("docstring")  casadi::MatrixCommon::triangle(const MatrixCommon &x)
 "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L434

";

%feature("docstring")  casadi::MatrixCommon::triangle(const MatrixCommon &x)
 "

[INTERNAL] 
triangle function

\\\\[ \\\\begin {cases} \\\\Lambda(x) = 0 & |x| >= 1 \\\\\\\\ 
\\\\Lambda(x)
 = 1-|x| & |x| < 1 \\\\end {cases} \\\\]

Extra doc: https://github.com/casadi/casadi/wiki/L_23o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L700

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L700-L702

";

%feature("docstring") casadi::casadi_triangle "

triangle function

\\\\[ \\\\begin {cases} \\\\Lambda(x) = 0 & |x| >= 1 \\\\\\\\ 
\\\\Lambda(x)
 = 1-|x| & |x| < 1 \\\\end {cases} \\\\]

Extra doc: https://github.com/casadi/casadi/wiki/L_23o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L700

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L700-L702

";

%feature("docstring")  casadi::MatrixCommon::casadi_triangle "

triangle function

\\\\[ \\\\begin {cases} \\\\Lambda(x) = 0 & |x| >= 1 \\\\\\\\ 
\\\\Lambda(x)
 = 1-|x| & |x| < 1 \\\\end {cases} \\\\]

Extra doc: https://github.com/casadi/casadi/wiki/L_23o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L700

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L700-L702

";

%feature("docstring")  casadi::MatrixCommon::ramp(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L435

";

%feature("docstring")  casadi::MatrixCommon::ramp(const MatrixCommon &x) "

[INTERNAL] 
ramp function

\\\\[ \\\\begin {cases} R(x) = 0 & x <= 1 \\\\\\\\ R(x) = x & x > 1 

\\\\\\\\ \\\\end {cases} \\\\]

Also called: slope function

Extra doc: https://github.com/casadi/casadi/wiki/L_23p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L717

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L717-L719

";

%feature("docstring") casadi::casadi_ramp "

ramp function

\\\\[ \\\\begin {cases} R(x) = 0 & x <= 1 \\\\\\\\ R(x) = x & x > 1 

\\\\\\\\ \\\\end {cases} \\\\]

Also called: slope function

Extra doc: https://github.com/casadi/casadi/wiki/L_23p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L717

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L717-L719

";

%feature("docstring")  casadi::MatrixCommon::casadi_ramp "

ramp function

\\\\[ \\\\begin {cases} R(x) = 0 & x <= 1 \\\\\\\\ R(x) = x & x > 1 

\\\\\\\\ \\\\end {cases} \\\\]

Also called: slope function

Extra doc: https://github.com/casadi/casadi/wiki/L_23p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L717

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L717-L719

";

%feature("docstring")  casadi::MatrixCommon::gauss_quadrature(const 
MatrixCommon &f, const MatrixCommon &x, const MatrixCommon &a, const 
MatrixCommon &b, casadi_int order=5) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L436

";

%feature("docstring")  casadi::MatrixCommon::gauss_quadrature(const 
MatrixCommon &f, const MatrixCommon &x, const MatrixCommon &a, const 
MatrixCommon &b, casadi_int order, const MatrixCommon &w) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L439

";

%feature("docstring")  casadi::MatrixCommon::gauss_quadrature(const 
MatrixCommon &f, const MatrixCommon &x, const MatrixCommon &a, const 
MatrixCommon &b, casadi_int order=5) "

[INTERNAL] 
Integrate f from a to b using Gaussian quadrature with n points.

Extra doc: https://github.com/casadi/casadi/wiki/L_196

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L726-L730

";

%feature("docstring") casadi::casadi_gauss_quadrature "

Integrate f from a to b using Gaussian quadrature with n points.

Extra doc: https://github.com/casadi/casadi/wiki/L_196

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L726-L730

";

%feature("docstring")  casadi::MatrixCommon::casadi_gauss_quadrature "

Integrate f from a to b using Gaussian quadrature with n points.

Extra doc: https://github.com/casadi/casadi/wiki/L_196

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L726

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L726-L730

";

%feature("docstring")  casadi::MatrixCommon::gauss_quadrature(const 
MatrixCommon &f, const MatrixCommon &x, const MatrixCommon &a, const 
MatrixCommon &b, casadi_int order, const MatrixCommon &w) "

[INTERNAL] 
Integrate f from a to b using Gaussian quadrature with n points.

Extra doc: https://github.com/casadi/casadi/wiki/L_196

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L732

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L732-L736

";

%feature("docstring") casadi::casadi_gauss_quadrature "

Integrate f from a to b using Gaussian quadrature with n points.

Extra doc: https://github.com/casadi/casadi/wiki/L_196

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L732

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L732-L736

";

%feature("docstring")  casadi::MatrixCommon::casadi_gauss_quadrature "

Integrate f from a to b using Gaussian quadrature with n points.

Extra doc: https://github.com/casadi/casadi/wiki/L_196

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L732

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L732-L736

";

%feature("docstring")  casadi::MatrixCommon::forward(const std::vector< 
MatrixCommon > &ex, const std::vector< MatrixCommon > &arg, const 
std::vector< std::vector< MatrixCommon > > &v, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L444

";

%feature("docstring")  casadi::MatrixCommon::reverse(const std::vector< 
MatrixCommon > &ex, const std::vector< MatrixCommon > &arg, const 
std::vector< std::vector< MatrixCommon > > &v, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L449

";

%feature("docstring")  casadi::MatrixCommon::which_depends(const 
MatrixCommon &expr, const MatrixCommon &var, casadi_int order=1, bool 
tr=false) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L453

";

%feature("docstring")  casadi::MatrixCommon::taylor(const MatrixCommon &ex, 
const MatrixCommon &x, const MatrixCommon &a, casadi_int order) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L455

";

%feature("docstring")  casadi::MatrixCommon::taylor(const MatrixCommon &ex, 
const MatrixCommon &x, const MatrixCommon &a, casadi_int order=1) "

[INTERNAL] 
univariate Taylor series expansion

Calculate the Taylor expansion of expression 'ex' up to order 'order' 
with 
respect to variable 'x' around the point 'a'

$(x)=f(a)+f'(a)(x-a)+f''(a)\\\\frac 

{(x-a)^2}{2!}+f'''(a)\\\\frac{(x-a)^3}{3!}+\\\\ldots$

Example usage:

::

>>> taylor(sin(x), x)

::

>>   x



Extra doc: https://github.com/casadi/casadi/wiki/L_23q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L754-L757

";

%feature("docstring") casadi::casadi_taylor "

univariate Taylor series expansion

Calculate the Taylor expansion of expression 'ex' up to order 'order' 
with 
respect to variable 'x' around the point 'a'

$(x)=f(a)+f'(a)(x-a)+f''(a)\\\\frac 

{(x-a)^2}{2!}+f'''(a)\\\\frac{(x-a)^3}{3!}+\\\\ldots$

Example usage:

::

>>> taylor(sin(x), x)

::

>>   x



Extra doc: https://github.com/casadi/casadi/wiki/L_23q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L754-L757

";

%feature("docstring")  casadi::MatrixCommon::casadi_taylor "

univariate Taylor series expansion

Calculate the Taylor expansion of expression 'ex' up to order 'order' 
with 
respect to variable 'x' around the point 'a'

$(x)=f(a)+f'(a)(x-a)+f''(a)\\\\frac 

{(x-a)^2}{2!}+f'''(a)\\\\frac{(x-a)^3}{3!}+\\\\ldots$

Example usage:

::

>>> taylor(sin(x), x)

::

>>   x



Extra doc: https://github.com/casadi/casadi/wiki/L_23q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L754

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L754-L757

";

%feature("docstring")  casadi::MatrixCommon::taylor(const MatrixCommon &ex, 
const MatrixCommon &x) "

[INTERNAL] 
univariate Taylor series expansion

Calculate the Taylor expansion of expression 'ex' up to order 'order' 
with 
respect to variable 'x' around the point 'a'

$(x)=f(a)+f'(a)(x-a)+f''(a)\\\\frac 

{(x-a)^2}{2!}+f'''(a)\\\\frac{(x-a)^3}{3!}+\\\\ldots$

Example usage:

::

>>> taylor(sin(x), x)

::

>>   x



Extra doc: https://github.com/casadi/casadi/wiki/L_23q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L758

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L758-L760

";

%feature("docstring") casadi::casadi_taylor "

univariate Taylor series expansion

Calculate the Taylor expansion of expression 'ex' up to order 'order' 
with 
respect to variable 'x' around the point 'a'

$(x)=f(a)+f'(a)(x-a)+f''(a)\\\\frac 

{(x-a)^2}{2!}+f'''(a)\\\\frac{(x-a)^3}{3!}+\\\\ldots$

Example usage:

::

>>> taylor(sin(x), x)

::

>>   x



Extra doc: https://github.com/casadi/casadi/wiki/L_23q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L758

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L758-L760

";

%feature("docstring")  casadi::MatrixCommon::casadi_taylor "

univariate Taylor series expansion

Calculate the Taylor expansion of expression 'ex' up to order 'order' 
with 
respect to variable 'x' around the point 'a'

$(x)=f(a)+f'(a)(x-a)+f''(a)\\\\frac 

{(x-a)^2}{2!}+f'''(a)\\\\frac{(x-a)^3}{3!}+\\\\ldots$

Example usage:

::

>>> taylor(sin(x), x)

::

>>   x



Extra doc: https://github.com/casadi/casadi/wiki/L_23q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L758

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L758-L760

";

%feature("docstring")  casadi::MatrixCommon::mtaylor(const MatrixCommon &ex,
 const MatrixCommon &x, const MatrixCommon &a, casadi_int order) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L457

";

%feature("docstring")  casadi::MatrixCommon::mtaylor(const MatrixCommon &ex,
 const MatrixCommon &x, const MatrixCommon &a, casadi_int order, const 
std::vector< casadi_int > &order_contributions) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L459

";

%feature("docstring")  casadi::MatrixCommon::mtaylor(const MatrixCommon &ex,
 const MatrixCommon &x, const MatrixCommon &a, casadi_int order=1) "

[INTERNAL] 
multivariate Taylor series expansion

Do Taylor expansions until the aggregated order of a term is equal to 

'order'. The aggregated order of  $x^n y^m$ equals  $n+m$.

Extra doc: https://github.com/casadi/casadi/wiki/L_23r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L770

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L770-L773

";

%feature("docstring") casadi::casadi_mtaylor "

multivariate Taylor series expansion

Do Taylor expansions until the aggregated order of a term is equal to 

'order'. The aggregated order of  $x^n y^m$ equals  $n+m$.

Extra doc: https://github.com/casadi/casadi/wiki/L_23r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L770

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L770-L773

";

%feature("docstring")  casadi::MatrixCommon::casadi_mtaylor "

multivariate Taylor series expansion

Do Taylor expansions until the aggregated order of a term is equal to 

'order'. The aggregated order of  $x^n y^m$ equals  $n+m$.

Extra doc: https://github.com/casadi/casadi/wiki/L_23r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L770

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L770-L773

";

%feature("docstring")  casadi::MatrixCommon::mtaylor(const MatrixCommon &ex,
 const MatrixCommon &x, const MatrixCommon &a, casadi_int order, const 
std::vector< casadi_int > &order_contributions) "

[INTERNAL] 
multivariate Taylor series expansion

Do Taylor expansions until the aggregated order of a term is equal to 

'order'. The aggregated order of  $x^n y^m$ equals  $n+m$.

The argument order_contributions can denote how match each variable 

contributes to the aggregated order. If x=[x, y] and 

order_contributions=[1, 2], then the aggregated order of  $x^n y^m$ equals  
$1n+2m$.

Example usage



::

>>> taylor(sin(x+y),[x, y],[a, b], 1)
 $ \\\\sin(b+a)+\\\\cos(b+a)(x-a)+\\\\cos(b+a)(y-b) $

::

>>> taylor(sin(x+y),[x, y],[0, 0], 4)
 $ y+x-(x^3+3y x^2+3 y^2 x+y^3)/6 $

::

>>> taylor(sin(x+y),[x, y],[0, 0], 4,[1, 2])
 $ (-3 x^2 y-x^3)/6+y+x $

Extra doc: https://github.com/casadi/casadi/wiki/L_23s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L801

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L801-L805

";

%feature("docstring") casadi::casadi_mtaylor "

multivariate Taylor series expansion

Do Taylor expansions until the aggregated order of a term is equal to 

'order'. The aggregated order of  $x^n y^m$ equals  $n+m$.

The argument order_contributions can denote how match each variable 

contributes to the aggregated order. If x=[x, y] and 

order_contributions=[1, 2], then the aggregated order of  $x^n y^m$ equals  
$1n+2m$.

Example usage



::

>>> taylor(sin(x+y),[x, y],[a, b], 1)
 $ \\\\sin(b+a)+\\\\cos(b+a)(x-a)+\\\\cos(b+a)(y-b) $

::

>>> taylor(sin(x+y),[x, y],[0, 0], 4)
 $ y+x-(x^3+3y x^2+3 y^2 x+y^3)/6 $

::

>>> taylor(sin(x+y),[x, y],[0, 0], 4,[1, 2])
 $ (-3 x^2 y-x^3)/6+y+x $

Extra doc: https://github.com/casadi/casadi/wiki/L_23s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L801

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L801-L805

";

%feature("docstring")  casadi::MatrixCommon::casadi_mtaylor "

multivariate Taylor series expansion

Do Taylor expansions until the aggregated order of a term is equal to 

'order'. The aggregated order of  $x^n y^m$ equals  $n+m$.

The argument order_contributions can denote how match each variable 

contributes to the aggregated order. If x=[x, y] and 

order_contributions=[1, 2], then the aggregated order of  $x^n y^m$ equals  
$1n+2m$.

Example usage



::

>>> taylor(sin(x+y),[x, y],[a, b], 1)
 $ \\\\sin(b+a)+\\\\cos(b+a)(x-a)+\\\\cos(b+a)(y-b) $

::

>>> taylor(sin(x+y),[x, y],[0, 0], 4)
 $ y+x-(x^3+3y x^2+3 y^2 x+y^3)/6 $

::

>>> taylor(sin(x+y),[x, y],[0, 0], 4,[1, 2])
 $ (-3 x^2 y-x^3)/6+y+x $

Extra doc: https://github.com/casadi/casadi/wiki/L_23s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L801

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L801-L805

";

%feature("docstring")  casadi::MatrixCommon::poly_coeff(const MatrixCommon 
&ex, const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L463

";

%feature("docstring")  casadi::MatrixCommon::poly_coeff(const MatrixCommon 
&f, const MatrixCommon &x) "

[INTERNAL] 
extracts polynomial coefficients from an expression

Parameters:
-----------

ex: 
Scalar expression that represents a polynomial

x: 
Scalar symbol that the polynomial is build up with

Extra doc: https://github.com/casadi/casadi/wiki/L_197

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L813

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L813-L816

";

%feature("docstring") casadi::casadi_poly_coeff "

extracts polynomial coefficients from an expression

Parameters:
-----------

ex: 
Scalar expression that represents a polynomial

x: 
Scalar symbol that the polynomial is build up with

Extra doc: https://github.com/casadi/casadi/wiki/L_197

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L813

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L813-L816

";

%feature("docstring")  casadi::MatrixCommon::casadi_poly_coeff "

extracts polynomial coefficients from an expression

Parameters:
-----------

ex: 
Scalar expression that represents a polynomial

x: 
Scalar symbol that the polynomial is build up with

Extra doc: https://github.com/casadi/casadi/wiki/L_197

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L813

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L813-L816

";

%feature("docstring")  casadi::MatrixCommon::poly_roots(const MatrixCommon 
&p) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L464

";

%feature("docstring")  casadi::MatrixCommon::poly_roots(const MatrixCommon 
&p) "

[INTERNAL] 
Attempts to find the roots of a polynomial.

This will only work for polynomials up to order 3 It is assumed that 
the 
roots are real.

Extra doc: https://github.com/casadi/casadi/wiki/L_198

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L824

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L824-L826

";

%feature("docstring") casadi::casadi_poly_roots "

Attempts to find the roots of a polynomial.

This will only work for polynomials up to order 3 It is assumed that 
the 
roots are real.

Extra doc: https://github.com/casadi/casadi/wiki/L_198

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L824

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L824-L826

";

%feature("docstring")  casadi::MatrixCommon::casadi_poly_roots "

Attempts to find the roots of a polynomial.

This will only work for polynomials up to order 3 It is assumed that 
the 
roots are real.

Extra doc: https://github.com/casadi/casadi/wiki/L_198

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L824

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L824-L826

";

%feature("docstring")  casadi::MatrixCommon::eig_symbolic(const MatrixCommon
 &m) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L465

";

%feature("docstring")  casadi::MatrixCommon::eig_symbolic(const MatrixCommon
 &m) "

[INTERNAL] 
Attempts to find the eigenvalues of a symbolic matrix.

This will only work for up to 3x3 matrices

Extra doc: https://github.com/casadi/casadi/wiki/L_199

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L833

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L833-L835

";

%feature("docstring") casadi::casadi_eig_symbolic "

Attempts to find the eigenvalues of a symbolic matrix.

This will only work for up to 3x3 matrices

Extra doc: https://github.com/casadi/casadi/wiki/L_199

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L833

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L833-L835

";

%feature("docstring")  casadi::MatrixCommon::casadi_eig_symbolic "

Attempts to find the eigenvalues of a symbolic matrix.

This will only work for up to 3x3 matrices

Extra doc: https://github.com/casadi/casadi/wiki/L_199

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L833

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L833-L835

";

%feature("docstring")  casadi::MatrixCommon::evalf(const MatrixCommon &m) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L466

";

%feature("docstring")  casadi::MatrixCommon::evalf(const MatrixCommon &expr)
 "

[INTERNAL] 
Evaluates the expression numerically.

An error is raised when the expression contains symbols

Extra doc: https://github.com/casadi/casadi/wiki/L_19a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L843

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L843-L845

";

%feature("docstring") casadi::casadi_evalf "

Evaluates the expression numerically.

An error is raised when the expression contains symbols

Extra doc: https://github.com/casadi/casadi/wiki/L_19a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L843

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L843-L845

";

%feature("docstring")  casadi::MatrixCommon::casadi_evalf "

Evaluates the expression numerically.

An error is raised when the expression contains symbols

Extra doc: https://github.com/casadi/casadi/wiki/L_19a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L843

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L843-L845

";

%feature("docstring")  casadi::MatrixCommon::qr_sparse(const MatrixCommon 
&A, MatrixCommon &V, MatrixCommon &R, MatrixCommon &beta, std::vector< 
casadi_int > &prinv, std::vector< casadi_int > &pc, bool amd=true) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L467

";

%feature("docstring")  casadi::MatrixCommon::qr_sparse(const MatrixCommon 
&A, MatrixCommon &V, MatrixCommon &R, MatrixCommon &beta, std::vector< 
casadi_int > &prinv, std::vector< casadi_int > &pc, bool amd=true) "

[INTERNAL] 
Sparse direct QR factorization.

See T. Davis: Direct Methods for Sparse Linear Systems

Extra doc: https://github.com/casadi/casadi/wiki/L_18t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L539

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L539-L543

";

%feature("docstring") casadi::casadi_qr_sparse "

Sparse direct QR factorization.

See T. Davis: Direct Methods for Sparse Linear Systems

Extra doc: https://github.com/casadi/casadi/wiki/L_18t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L539

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L539-L543

";

%feature("docstring")  casadi::MatrixCommon::casadi_qr_sparse "

Sparse direct QR factorization.

See T. Davis: Direct Methods for Sparse Linear Systems

Extra doc: https://github.com/casadi/casadi/wiki/L_18t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L539

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L539-L543

";

%feature("docstring")  casadi::MatrixCommon::qr_solve(const MatrixCommon &b,
 const MatrixCommon &v, const MatrixCommon &r, const MatrixCommon &beta, 
const std::vector< casadi_int > &prinv, const std::vector< casadi_int > &pc,
 bool tr=false) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L470

";

%feature("docstring")  casadi::MatrixCommon::qr_solve(const MatrixCommon &b,
 const MatrixCommon &v, const MatrixCommon &r, const MatrixCommon &beta, 
const std::vector< casadi_int > &prinv, const std::vector< casadi_int > &pc,
 bool tr=false) "

[INTERNAL] 
 Solve using a sparse QR factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_18u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L549-L554

";

%feature("docstring") casadi::casadi_qr_solve "

Solve using a sparse QR factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_18u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L549-L554

";

%feature("docstring")  casadi::MatrixCommon::casadi_qr_solve "

Solve using a sparse QR factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_18u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L549-L554

";

%feature("docstring")  casadi::MatrixCommon::qr(const MatrixCommon &A, 
MatrixCommon &Q, MatrixCommon &R) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L474

";

%feature("docstring")  casadi::MatrixCommon::qr(const MatrixCommon &A, 
MatrixCommon &Q, MatrixCommon &R) "

[INTERNAL] 
QR factorization using the modified Gram-Schmidt algorithm.

More stable than the classical Gram-Schmidt, but may break down if the
 rows
 of A are nearly linearly dependent See J. Demmel: Applied 
Numerical Linear
 Algebra (algorithm 3.1.). Note that in SWIG, Q and R 
are returned by 
value.

Extra doc: https://github.com/casadi/casadi/wiki/L_18s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L530-L532

";

%feature("docstring") casadi::casadi_qr "

QR factorization using the modified Gram-Schmidt algorithm.

More stable than the classical Gram-Schmidt, but may break down if the
 rows
 of A are nearly linearly dependent See J. Demmel: Applied 
Numerical Linear
 Algebra (algorithm 3.1.). Note that in SWIG, Q and R 
are returned by 
value.

Extra doc: https://github.com/casadi/casadi/wiki/L_18s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L530-L532

";

%feature("docstring")  casadi::MatrixCommon::casadi_qr "

QR factorization using the modified Gram-Schmidt algorithm.

More stable than the classical Gram-Schmidt, but may break down if the
 rows
 of A are nearly linearly dependent See J. Demmel: Applied 
Numerical Linear
 Algebra (algorithm 3.1.). Note that in SWIG, Q and R 
are returned by 
value.

Extra doc: https://github.com/casadi/casadi/wiki/L_18s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L530-L532

";

%feature("docstring")  casadi::MatrixCommon::ldl(const MatrixCommon &A, 
MatrixCommon &D, MatrixCommon &LT, std::vector< casadi_int > &p, bool 
amd=true) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L475

";

%feature("docstring")  casadi::MatrixCommon::ldl(const MatrixCommon &A, 
MatrixCommon &D, MatrixCommon &LT, std::vector< casadi_int > &p, bool 
amd=true) "

[INTERNAL] 
Sparse LDL^T factorization.

Returns D and the strictly upper triangular entries of L^T I.e. ones 
on the
 diagonal are ignored. Only guarenteed to work for positive 
definite 
matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_18w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L573

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L573-L576

";

%feature("docstring") casadi::casadi_ldl "

Sparse LDL^T factorization.

Returns D and the strictly upper triangular entries of L^T I.e. ones 
on the
 diagonal are ignored. Only guarenteed to work for positive 
definite 
matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_18w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L573

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L573-L576

";

%feature("docstring")  casadi::MatrixCommon::casadi_ldl "

Sparse LDL^T factorization.

Returns D and the strictly upper triangular entries of L^T I.e. ones 
on the
 diagonal are ignored. Only guarenteed to work for positive 
definite 
matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_18w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L573

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L573-L576

";

%feature("docstring")  casadi::MatrixCommon::ldl_solve(const MatrixCommon 
&b, const MatrixCommon &D, const MatrixCommon &LT, const std::vector< 
casadi_int > &p) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L477

";

%feature("docstring")  casadi::MatrixCommon::ldl_solve(const MatrixCommon 
&b, const MatrixCommon &D, const MatrixCommon &LT, const std::vector< 
casadi_int > &p) "

[INTERNAL] 
 Solve using a sparse LDL^T factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_18x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L582

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L582-L585

";

%feature("docstring") casadi::casadi_ldl_solve "

Solve using a sparse LDL^T factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_18x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L582

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L582-L585

";

%feature("docstring")  casadi::MatrixCommon::casadi_ldl_solve "

Solve using a sparse LDL^T factorization.

Extra doc: https://github.com/casadi/casadi/wiki/L_18x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L582

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L582-L585

";

%feature("docstring")  casadi::MatrixCommon::all(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L479

";

%feature("docstring")  casadi::MatrixCommon::all(const MatrixCommon &x) "

[INTERNAL] 
Returns true only if every element in the matrix is true.

Extra doc: https://github.com/casadi/casadi/wiki/L_18z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L597

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L597-L599

";

%feature("docstring") casadi::casadi_all "

Returns true only if every element in the matrix is true.

Extra doc: https://github.com/casadi/casadi/wiki/L_18z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L597

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L597-L599

";

%feature("docstring")  casadi::MatrixCommon::casadi_all "

Returns true only if every element in the matrix is true.

Extra doc: https://github.com/casadi/casadi/wiki/L_18z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L597

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L597-L599

";

%feature("docstring")  casadi::MatrixCommon::any(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L480

";

%feature("docstring")  casadi::MatrixCommon::any(const MatrixCommon &x) "

[INTERNAL] 
Returns true only if any element in the matrix is true.

Extra doc: https://github.com/casadi/casadi/wiki/L_18y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L590

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L590-L592

";

%feature("docstring") casadi::casadi_any "

Returns true only if any element in the matrix is true.

Extra doc: https://github.com/casadi/casadi/wiki/L_18y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L590

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L590-L592

";

%feature("docstring")  casadi::MatrixCommon::casadi_any "

Returns true only if any element in the matrix is true.

Extra doc: https://github.com/casadi/casadi/wiki/L_18y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L590

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L590-L592

";

%feature("docstring")  casadi::MatrixCommon::adj(const MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L481

";

%feature("docstring")  casadi::MatrixCommon::adj(const MatrixCommon &A) "

[INTERNAL] 
 Matrix adjoint.

Extra doc: https://github.com/casadi/casadi/wiki/L_18p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L504

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L504-L506

";

%feature("docstring") casadi::casadi_adj "

Matrix adjoint.

Extra doc: https://github.com/casadi/casadi/wiki/L_18p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L504

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L504-L506

";

%feature("docstring")  casadi::MatrixCommon::casadi_adj "

Matrix adjoint.

Extra doc: https://github.com/casadi/casadi/wiki/L_18p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L504

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L504-L506

";

%feature("docstring")  casadi::MatrixCommon::minor(const MatrixCommon &x, 
casadi_int i, casadi_int j) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L482

";

%feature("docstring")  casadi::MatrixCommon::minor(const MatrixCommon &x, 
casadi_int i, casadi_int j) "

[INTERNAL] 
Get the (i,j) minor matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_18q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L511

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L511-L513

";

%feature("docstring") casadi::casadi_minor "

Get the (i,j) minor matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_18q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L511

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L511-L513

";

%feature("docstring")  casadi::MatrixCommon::casadi_minor "

Get the (i,j) minor matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_18q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L511

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L511-L513

";

%feature("docstring")  casadi::MatrixCommon::cofactor(const MatrixCommon &A,
 casadi_int i, casadi_int j) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L483

";

%feature("docstring")  casadi::MatrixCommon::cofactor(const MatrixCommon &x,
 casadi_int i, casadi_int j) "

[INTERNAL] 
Get the (i,j) cofactor matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_18r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L518-L520

";

%feature("docstring") casadi::casadi_cofactor "

Get the (i,j) cofactor matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_18r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L518-L520

";

%feature("docstring")  casadi::MatrixCommon::casadi_cofactor "

Get the (i,j) cofactor matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_18r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L518-L520

";

%feature("docstring")  casadi::MatrixCommon::chol(const MatrixCommon &A) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L484

";

%feature("docstring")  casadi::MatrixCommon::chol(const MatrixCommon &A) "

[INTERNAL] 
Obtain a Cholesky factorisation of a matrix.

Performs and LDL transformation [L,D] = ldl(A) and returns 
diag(sqrt(D))*L'

Extra doc: https://github.com/casadi/casadi/wiki/L_18v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L562

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L562-L564

";

%feature("docstring") casadi::casadi_chol "

Obtain a Cholesky factorisation of a matrix.

Performs and LDL transformation [L,D] = ldl(A) and returns 
diag(sqrt(D))*L'

Extra doc: https://github.com/casadi/casadi/wiki/L_18v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L562

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L562-L564

";

%feature("docstring")  casadi::MatrixCommon::casadi_chol "

Obtain a Cholesky factorisation of a matrix.

Performs and LDL transformation [L,D] = ldl(A) and returns 
diag(sqrt(D))*L'

Extra doc: https://github.com/casadi/casadi/wiki/L_18v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L562

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L562-L564

";

%feature("docstring")  casadi::MatrixCommon::norm_inf_mul(const MatrixCommon
 &x, const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L485

";

%feature("docstring")  casadi::MatrixCommon::norm_inf_mul(const MatrixCommon
 &x, const MatrixCommon &y) "

[INTERNAL] 
Inf-norm of a Matrix-Matrix product.

Extra doc: https://github.com/casadi/casadi/wiki/L_190

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L605

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L605-L607

";

%feature("docstring") casadi::casadi_norm_inf_mul "

Inf-norm of a Matrix-Matrix product.

Extra doc: https://github.com/casadi/casadi/wiki/L_190

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L605

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L605-L607

";

%feature("docstring")  casadi::MatrixCommon::casadi_norm_inf_mul "

Inf-norm of a Matrix-Matrix product.

Extra doc: https://github.com/casadi/casadi/wiki/L_190

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L605

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L605-L607

";

%feature("docstring")  casadi::MatrixCommon::diagcat(const std::vector< 
MatrixCommon > &A) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L486

";

%feature("docstring")  casadi::MatrixCommon::triplet(const std::vector< 
casadi_int > &row, const std::vector< casadi_int > &col, const MatrixCommon 
&d) "

[INTERNAL] 
Construct a sparse matrix from triplet form.

Default matrix size is max(col) x max(row)

Extra doc: https://github.com/casadi/casadi/wiki/L_23t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L987

";

%feature("docstring")  casadi::MatrixCommon::triplet(const std::vector< 
casadi_int > &row, const std::vector< casadi_int > &col, const MatrixCommon 
&d, casadi_int nrow, casadi_int ncol) "

[INTERNAL] 
Construct a sparse matrix from triplet form.

Default matrix size is max(col) x max(row)

Extra doc: https://github.com/casadi/casadi/wiki/L_23t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L990

";

%feature("docstring")  casadi::MatrixCommon::triplet(const std::vector< 
casadi_int > &row, const std::vector< casadi_int > &col, const MatrixCommon 
&d, const std::pair< casadi_int, casadi_int > &rc) "

[INTERNAL] 
Construct a sparse matrix from triplet form.

Default matrix size is max(col) x max(row)

Extra doc: https://github.com/casadi/casadi/wiki/L_23t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L993

";

%feature("docstring")  casadi::MatrixCommon::inf(const Sparsity &sp) "

[INTERNAL] 
create a matrix with all inf

Extra doc: https://github.com/casadi/casadi/wiki/L_19k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1003

";

%feature("docstring")  casadi::MatrixCommon::inf(casadi_int nrow=1, 
casadi_int ncol=1) "

[INTERNAL] 
create a matrix with all inf

Extra doc: https://github.com/casadi/casadi/wiki/L_19k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1004

";

%feature("docstring")  casadi::MatrixCommon::inf(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
create a matrix with all inf

Extra doc: https://github.com/casadi/casadi/wiki/L_19k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1005

";

%feature("docstring")  casadi::MatrixCommon::nan(const Sparsity &sp) "

[INTERNAL] 
create a matrix with all nan

Extra doc: https://github.com/casadi/casadi/wiki/L_19l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1012

";

%feature("docstring")  casadi::MatrixCommon::nan(casadi_int nrow=1, 
casadi_int ncol=1) "

[INTERNAL] 
create a matrix with all nan

Extra doc: https://github.com/casadi/casadi/wiki/L_19l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1013

";

%feature("docstring")  casadi::MatrixCommon::nan(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
create a matrix with all nan

Extra doc: https://github.com/casadi/casadi/wiki/L_19l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1014

";

%feature("docstring")  casadi::MatrixCommon::rand(casadi_int nrow=1, 
casadi_int ncol=1) "

[INTERNAL] 
Create a matrix with uniformly distributed random numbers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ab

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1197

";

%feature("docstring")  casadi::DM::rand(const Sparsity &sp) "

[INTERNAL] 
Create a matrix with uniformly distributed random numbers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ab

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dm_instantiator.cpp#L59-L67

";

%feature("docstring")  casadi::MatrixCommon::rand(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
Create a matrix with uniformly distributed random numbers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ab

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1201

";

%feature("docstring")  casadi::GenericMatrixCommon::interp1d(const 
std::vector< double > &x, const MatrixCommon &v, const std::vector< double >
 &xq, const std::string &mode, bool equidistant) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L213

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1252-L1308

";

%feature("docstring")  casadi::GenericMatrixCommon::sprank(const 
MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L215

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L215-L215

";

%feature("docstring")  casadi::GenericMatrixCommon::norm_0_mul(const 
MatrixCommon &x, const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L216

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L216-L218

";

%feature("docstring")  casadi::GenericMatrixCommon::tril(const MatrixCommon 
&x, bool includeDiagonal=true) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L219

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L219-L221

";

%feature("docstring")  casadi::GenericMatrixCommon::triu(const MatrixCommon 
&x, bool includeDiagonal=true) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L222-L224

";

%feature("docstring")  casadi::GenericMatrixCommon::sumsqr(const 
MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L225-L225

";

%feature("docstring")  casadi::GenericMatrixCommon::linspace(const 
MatrixCommon &a, const MatrixCommon &b, casadi_int nsteps) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L226

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1202-L1212

";

%feature("docstring")  casadi::GenericMatrixCommon::cross(const MatrixCommon
 &a, const MatrixCommon &b, casadi_int dim=-1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L227

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1215-L1246

";

%feature("docstring")  casadi::GenericMatrixCommon::skew(const MatrixCommon 
&a) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L228

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1311-L1319

";

%feature("docstring")  casadi::GenericMatrixCommon::inv_skew(const 
MatrixCommon &a) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L229

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1322-L1327

";

%feature("docstring")  casadi::GenericMatrixCommon::tril2symm(const 
MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L230

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1331-L1337

";

%feature("docstring")  casadi::GenericMatrixCommon::triu2symm(const 
MatrixCommon &x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L231

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1355-L1361

";

%feature("docstring")  casadi::GenericMatrixCommon::repsum(const 
MatrixCommon &x, casadi_int n, casadi_int m=1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L232

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1340-L1352

";

%feature("docstring")  casadi::GenericMatrixCommon::diff(const MatrixCommon 
&x, casadi_int n=1, casadi_int axis=-1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1565-L1590

";

%feature("docstring")  casadi::GenericMatrixCommon::is_linear(const 
MatrixCommon &expr, const MatrixCommon &var) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L235

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1534-L1536

";

%feature("docstring")  casadi::GenericMatrixCommon::is_quadratic(const 
MatrixCommon &expr, const MatrixCommon &var) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L236

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1539-L1541

";

%feature("docstring")  casadi::GenericMatrixCommon::quadratic_coeff(const 
MatrixCommon &expr, const MatrixCommon &var, MatrixCommon &A, MatrixCommon 
&b, MatrixCommon &c, bool check) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L237

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1544-L1552

";

%feature("docstring")  casadi::GenericMatrixCommon::linear_coeff(const 
MatrixCommon &expr, const MatrixCommon &var, MatrixCommon &A, MatrixCommon 
&b, bool check) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L239

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1555-L1562

";

%feature("docstring")  casadi::GenericMatrixCommon::mpower(const 
MatrixCommon &x, const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1010

";

%feature("docstring")  casadi::GenericMatrixCommon::soc(const MatrixCommon 
&x, const MatrixCommon &y) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1011

";

%feature("docstring")  casadi::GenericMatrixCommon::linearize(const 
MatrixCommon &f, const MatrixCommon &x, const MatrixCommon &x0, const Dict 
&opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1008

";

%feature("docstring")  casadi::GenericMatrixCommon::gradient(const 
MatrixCommon &ex, const MatrixCommon &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1006

";

%feature("docstring")  casadi::GenericMatrixCommon::tangent(const 
MatrixCommon &ex, const MatrixCommon &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1007

";

%feature("docstring")  casadi::GenericMatrixCommon::jtimes(const 
MatrixCommon &ex, const MatrixCommon &arg, const MatrixCommon &v, bool 
tr=false, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1004

";

%feature("docstring")  casadi::GenericMatrixCommon::bilin(const MatrixCommon
 &A, const MatrixCommon &x, const MatrixCommon &y) "

[INTERNAL] 
Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring") casadi::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring")  casadi::GenericMatrixCommon::rank1(const MatrixCommon
 &A, const MatrixCommon &alpha, const MatrixCommon &x, const MatrixCommon 
&y) "

[INTERNAL] 
Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring") casadi::casadi_rank1 "

Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_rank1 "

Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow=1, casadi_int ncol=1) "

[INTERNAL] 
Create an nrow-by-ncol symbolic primitive.

Extra doc: https://github.com/casadi/casadi/wiki/L_1da

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1027

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1027-L1029

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const std::pair< casadi_int, casadi_int > &rc) "

[INTERNAL] 
Construct a symbolic primitive with given dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1db

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1034

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1034-L1036

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp) "

[INTERNAL] 
Create symbolic primitive with a given sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1041

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1041-L1043

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp, casadi_int p) "

[INTERNAL] 
Create a vector of length p with with matrices.

with symbolic primitives of given sparsity

Extra doc: https://github.com/casadi/casadi/wiki/L_1dd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1050

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1176-L1186

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow, casadi_int ncol, casadi_int p) "

[INTERNAL] 
Create a vector of length p with nrow-by-ncol symbolic 
primitives.

Extra doc: https://github.com/casadi/casadi/wiki/L_1de

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1055

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1055-L1058

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp, casadi_int p, casadi_int r) "

[INTERNAL] 
Create a vector of length r of vectors of length p with.

symbolic primitives with given sparsity

Extra doc: https://github.com/casadi/casadi/wiki/L_1df

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1066

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1189-L1199

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow, casadi_int ncol, casadi_int p, casadi_int r) "

[INTERNAL] 
Create a vector of length r of vectors of length p.

with nrow-by-ncol symbolic primitives

Extra doc: https://github.com/casadi/casadi/wiki/L_1dg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1074

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1074-L1076

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(casadi_int nrow=1,
 casadi_int ncol=1) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1083

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1083-L1085

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(const Sparsity 
&sp) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1086

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1086-L1086

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1087

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1087-L1089

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(casadi_int nrow=1, 
casadi_int ncol=1) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1096

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1096-L1098

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(const Sparsity &sp)
 "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1099

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1099-L1099

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1100

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1100-L1102

";

%feature("docstring")  casadi::GenericExpressionCommon::printme(const 
MatrixCommon &x, const MatrixCommon &y) "

[INTERNAL] 
Debug printing

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L730

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L730-L732

";

%feature("docstring")  casadi::MatrixCommon::printme(const MatrixCommon &y) 
const "

[INTERNAL] ";

%feature("docstring") casadi::MatrixCommon::MatrixCommon() "

[INTERNAL] 
constructors

Extra doc: https://github.com/casadi/casadi/wiki/L_18f  empty 0-by-0 matrix 
constructor

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L576-L577

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const MatrixCommon 
&m) "

[INTERNAL] 
Copy constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L102

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L580-L581

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(casadi_int nrow, 
casadi_int ncol) "

[INTERNAL] 
Create a sparse matrix with all structural zeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_18g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L112

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
Create a sparse matrix with all structural zeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_18h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L118

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const Sparsity &sp)
 "

[INTERNAL] 
Create a sparse matrix from a sparsity pattern.

Same as Matrix::ones(sparsity)

Extra doc: https://github.com/casadi/casadi/wiki/L_18k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L136

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const Sparsity &sp,
 const MatrixCommon &d) "

[INTERNAL] 
Construct matrix with a given sparsity and nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_18l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L141

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(double val) "

[INTERNAL] 
This constructor enables implicit type conversion from a numeric
 type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L144

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const std::vector< 
std::vector< double > > &m) "

[INTERNAL] 
Dense matrix constructor with data given as vector of vectors.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L148

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const std::vector< 
A > &x) "

[INTERNAL] 
Create an expression from a vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_18m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L154

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L154-L158

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const MatrixCommon 
&x) "

[INTERNAL] 
Create a matrix from another matrix with a different entry type.

Assumes that the scalar conversion is valid.

Extra doc: https://github.com/casadi/casadi/wiki/L_18n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L167

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L167-L170

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const std::vector< 
Scalar > &x) "

[INTERNAL] 
Construct from a vector.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L174

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L584-L586

";

%feature("docstring") 
casadi::MatrixCommon::MatrixCommon(std::initializer_list< Scalar > x) "

[INTERNAL] 
Construct from initializer list.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L177

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L177-L177

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const Sparsity &sp,
 const Scalar &val, bool dummy) "

[INTERNAL] 
Sparse matrix with a given sparsity with all values same.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1280

";

%feature("docstring") casadi::MatrixCommon::MatrixCommon(const Sparsity &sp,
 const std::vector< Scalar > &d, bool dummy) "

[INTERNAL] 
Sparse matrix with a given sparsity and non-zero elements.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1283

";

%feature("docstring")  casadi::MatrixCommon::scalar() const "

[INTERNAL] 
Convert to scalar type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L180

";

%feature("docstring")  casadi::MatrixCommon::has_nz(casadi_int rr, 
casadi_int cc) const "

[INTERNAL] 
Returns true if the matrix has a non-zero at location rr, cc.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L219

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L65-L67

";

%feature("docstring") casadi::MatrixCommon::__nonzero__ "

[INTERNAL] 
Returns the truth value of a  Matrix.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L70-L76

";

%feature("docstring")  casadi::MatrixCommon::T() const "

[INTERNAL] 
Transpose the matrix.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L494

";

%feature("docstring")  casadi::MatrixCommon::print_split(std::vector< 
std::string > &nz, std::vector< std::string > &inter) const "

[INTERNAL] 
Get strings corresponding to the nonzeros and the 
interdependencies.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L873

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L696-L700

";

%feature("docstring")  casadi::MatrixCommon::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a representation of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L877

";

%feature("docstring")  casadi::MatrixCommon::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L880

";

%feature("docstring")  casadi::MatrixCommon::print_scalar(std::ostream 
&stream) const "

[INTERNAL] 
Print scalar.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L883

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L609-L633

";

%feature("docstring")  casadi::MatrixCommon::print_vector(std::ostream 
&stream, bool truncate=true) const "

[INTERNAL] 
Print vector-style.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L886

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L636-L638

";

%feature("docstring")  casadi::MatrixCommon::print_dense(std::ostream 
&stream, bool truncate=true) const "

[INTERNAL] 
Print dense matrix-stype.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L889

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L686-L688

";

%feature("docstring")  casadi::MatrixCommon::print_sparse(std::ostream 
&stream, bool truncate=true) const "

[INTERNAL] 
Print sparse matrix style.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L892

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_impl.hpp#L691-L693

";

%feature("docstring")  casadi::MatrixCommon::clear() "

[INTERNAL] ";

%feature("docstring")  casadi::MatrixCommon::resize(casadi_int nrow, 
casadi_int ncol) "

[INTERNAL] ";

%feature("docstring")  casadi::MatrixCommon::reserve(casadi_int nnz) "

[INTERNAL] ";

%feature("docstring")  casadi::MatrixCommon::reserve(casadi_int nnz, 
casadi_int ncol) "

[INTERNAL] ";

%feature("docstring")  casadi::MatrixCommon::erase(const std::vector< 
casadi_int > &rr, const std::vector< casadi_int > &cc, bool ind1=false) "

[INTERNAL] 
Erase a submatrix (leaving structural zeros in its place)

Erase rows and/or columns of a matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_19f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L929

";

%feature("docstring")  casadi::MatrixCommon::erase(const std::vector< 
casadi_int > &rr, bool ind1=false) "

[INTERNAL] 
Erase a submatrix (leaving structural zeros in its place)

Erase elements of a matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_19g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L937

";

%feature("docstring")  casadi::MatrixCommon::remove(const std::vector< 
casadi_int > &rr, const std::vector< casadi_int > &cc) "

[INTERNAL] 
Remove columns and rows.

Remove/delete rows and/or columns of a matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_19h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L944

";

%feature("docstring")  casadi::MatrixCommon::enlarge(casadi_int nrow, 
casadi_int ncol, const std::vector< casadi_int > &rr, const std::vector< 
casadi_int > &cc, bool ind1=false) "

[INTERNAL] 
Enlarge matrix.

Make the matrix larger by inserting empty rows and columns, keeping 
the 
existing non-zeros

Extra doc: https://github.com/casadi/casadi/wiki/L_19i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L952

";

%feature("docstring")  casadi::MatrixCommon::sparsity() const "

[INTERNAL] 
Const access the sparsity - reference to data member.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L972

";

%feature("docstring") casadi::casadi_sparsity "

Const access the sparsity - reference to data member.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L972

";

%feature("docstring")  casadi::MatrixCommon::casadi_sparsity "

Const access the sparsity - reference to data member.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L972

";

%feature("docstring")  casadi::MatrixCommon::get_sparsity() const "

[INTERNAL] 
Get an owning reference to the sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_19j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L979

";

%feature("docstring")  casadi::SX::element_hash() const "

[INTERNAL] 
Returns a number that is unique for a given symbolic scalar.

Only defined if symbolic scalar.

Extra doc: https://github.com/casadi/casadi/wiki/L_19n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1027

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L125-L127

";

%feature("docstring")  casadi::SX::is_regular() const "

[INTERNAL] 
Checks if expression does not contain NaN or Inf.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1030

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L99-L112

";

%feature("docstring")  casadi::SX::is_smooth() const "

[INTERNAL] 
Check if smooth.

Extra doc: https://github.com/casadi/casadi/wiki/L_19o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1035

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L115-L122

";

%feature("docstring")  casadi::SX::is_leaf() const "

[INTERNAL] 
Check if SX is a leaf of the SX graph.

Only defined if symbolic scalar.

Extra doc: https://github.com/casadi/casadi/wiki/L_19p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1042

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L130-L132

";

%feature("docstring")  casadi::SX::is_commutative() const "

[INTERNAL] 
Check whether a binary SX is commutative.

Only defined if symbolic scalar.

Extra doc: https://github.com/casadi/casadi/wiki/L_19q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1049

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L135-L137

";

%feature("docstring")  casadi::SX::is_symbolic() const "

[INTERNAL] 
Check if symbolic (Dense)

Sparse matrices invariable return false

Extra doc: https://github.com/casadi/casadi/wiki/L_19r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1056

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L149-L155

";

%feature("docstring")  casadi::SX::is_valid_input() const "

[INTERNAL] 
Check if matrix can be used to define function inputs.

Sparse matrices can return true if all non-zero elements are symbolic

Extra doc: https://github.com/casadi/casadi/wiki/L_19s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1063

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L140-L146

";

%feature("docstring")  casadi::MatrixCommon::is_constant() const "

[INTERNAL] 
Check if the matrix is constant (note that false negative 
answers are 
possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_19v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1085

";

%feature("docstring")  casadi::MatrixCommon::is_integer() const "

[INTERNAL] 
Check if the matrix is integer-valued.

(note that false negative answers are possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_19w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1092

";

%feature("docstring")  casadi::MatrixCommon::is_zero() const "

[INTERNAL] 
check if the matrix is 0 (note that false negative answers are 

possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_19x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1097

";

%feature("docstring")  casadi::MatrixCommon::is_one() const "

[INTERNAL] 
check if the matrix is 1 (note that false negative answers are 

possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_19y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1102

";

%feature("docstring")  casadi::MatrixCommon::is_minus_one() const "

[INTERNAL] 
check if the matrix is -1 (note that false negative answers are
 
possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_19z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1107

";

%feature("docstring")  casadi::MatrixCommon::is_eye() const "

[INTERNAL] 
check if the matrix is an identity matrix (note that false 
negative 
answers

are possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_1a0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1114

";

%feature("docstring")  casadi::SX::op() const "

[INTERNAL] 
Get operation type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1117

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L158-L160

";

%feature("docstring")  casadi::SX::is_op(casadi_int op) const "

[INTERNAL] 
Is it a certain operation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1120

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L163-L165

";

%feature("docstring")  casadi::MatrixCommon::has_zeros() const "

[INTERNAL] 
Check if the matrix has any zero entries which are not 
structural 
zeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1a1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1125

";

%feature("docstring")  casadi::MatrixCommon::get_nonzeros() const "

[INTERNAL] 
Get all nonzeros.

Implementation of  Matrix::get_nonzeros (in public API)

Extra doc: https://github.com/casadi/casadi/wiki/L_1a2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1130

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1310-L1315

";

%feature("docstring")  casadi::MatrixCommon::get_nonzeros() const "

[INTERNAL] 
Get all nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1a4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1142

";

%feature("docstring")  casadi::MatrixCommon::get_elements() const "

[INTERNAL] 
Get all elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_1a3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1135

";

%feature("docstring")  casadi::SX::name() const "

[INTERNAL] 
Get name (only if symbolic scalar)

Extra doc: https://github.com/casadi/casadi/wiki/L_1a8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1166

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L187-L189

";

%feature("docstring")  casadi::SX::dep(casadi_int ch=0) const "

[INTERNAL] 
Get expressions of the children of the expression.

Only defined if symbolic scalar. Wraps  SXElem SXElem::dep(casadi_int ch=0) 
const.

Extra doc: https://github.com/casadi/casadi/wiki/L_1a9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1174

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L192-L194

";

%feature("docstring")  casadi::SX::n_dep() const "

[INTERNAL] 
Get the number of dependencies of a binary  SXElem.

Only defined if symbolic scalar.

Extra doc: https://github.com/casadi/casadi/wiki/L_1aa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1181

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_instantiator.cpp#L197-L199

";

%feature("docstring")  casadi::DM::export_code(const std::string &lang, 
std::ostream &stream=casadi::uout(), const Dict &options=Dict()) const "

[INTERNAL] 
Export matrix in specific language.

lang: only 'matlab' supported for now

::

  * options:
  *   inline: Indicates if you want everything on a single line (default: False)
  *   name: Name of exported variable (default: 'm')
  *   indent_level: Level of indentation (default: 0)
  *   spoof_zero: Replace numerical zero by a 1e-200 (default: false)
  *               might be needed for matlab sparse construct,
  *               which doesn't allow numerical zero
  * 



Extra doc: https://github.com/casadi/casadi/wiki/L_1ac

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1219

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dm_instantiator.cpp#L94-L192

";

%feature("docstring")  casadi::SX::info() const "

[INTERNAL] 
Obtain information about sparsity

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1223

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dm_instantiator.cpp#L195-L197

";

%feature("docstring")  casadi::MatrixCommon::serialize(std::ostream &stream)
 const "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ad

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1228

";

%feature("docstring")  casadi::MatrixCommon::serialize() const "

[INTERNAL] 
Serialize.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ae

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1234

";

%feature("docstring")  casadi::MatrixCommon::serialize(SerializingStream &s)
 const "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ah

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1249

";

%feature("docstring")  casadi::MatrixCommon::to_file(const std::string 
&filename, const std::string &format="") const "

[INTERNAL] 
Export numerical matrix to file

Supported formats:



::

  *   - .mtx   Matrix Market (sparse)
  *   - .txt   Ascii full precision representation (sparse)
  *            Whitespace separated, aligned.
  *            Comments with # % or /
  *            Uses C locale
  *            Structural zeros represented by 00
  *            Does not scale well for large sparse matrices
  * 



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L1269

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz() const "

[INTERNAL] 
Get the number of (structural) non-zero elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_1an

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L84

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1119-L1121

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_lower() const "

[INTERNAL] 
Get the number of non-zeros in the lower triangular half.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ao

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L89

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1124-L1126

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_upper() const "

[INTERNAL] 
Get the number of non-zeros in the upper triangular half.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ap

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L94

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1129-L1131

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_diag() const "

[INTERNAL] 
Get get the number of non-zeros on the diagonal.

Extra doc: https://github.com/casadi/casadi/wiki/L_1aq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1134-L1136

";

%feature("docstring")  casadi::GenericMatrixCommon::numel() const "

[INTERNAL] 
Get the number of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ar

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L104

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1139-L1141

";

%feature("docstring")  casadi::GenericMatrixCommon::size1() const "

[INTERNAL] 
Get the first dimension (i.e. number of rows)

Extra doc: https://github.com/casadi/casadi/wiki/L_1as

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L109

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1144-L1146

";

%feature("docstring")  casadi::GenericMatrixCommon::rows() const "

[INTERNAL] 
Get the number of rows, Octave-style syntax.

Extra doc: https://github.com/casadi/casadi/wiki/L_1at

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L114

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L114-L114

";

%feature("docstring")  casadi::GenericMatrixCommon::size2() const "

[INTERNAL] 
Get the second dimension (i.e. number of columns)

Extra doc: https://github.com/casadi/casadi/wiki/L_1au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L119

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1149-L1151

";

%feature("docstring")  casadi::GenericMatrixCommon::columns() const "

[INTERNAL] 
Get the number of columns, Octave-style syntax.

Extra doc: https://github.com/casadi/casadi/wiki/L_1av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L124

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L124-L124

";

%feature("docstring")  casadi::GenericMatrixCommon::dim(bool with_nz=false) 
const "

[INTERNAL] 
Get string representation of dimensions.

The representation is e.g. \"4x5\" or \"4x5,10nz\"

Extra doc: https://github.com/casadi/casadi/wiki/L_1aw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1164-L1166

";

%feature("docstring")  casadi::GenericMatrixCommon::size() const "

[INTERNAL] 
Get the shape.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ax

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L136

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1154-L1156

";

%feature("docstring")  casadi::GenericMatrixCommon::size(casadi_int axis) 
const "

[INTERNAL] 
Get the size along a particular dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ay

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L141

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1159-L1161

";

%feature("docstring")  casadi::GenericMatrixCommon::is_empty(bool 
both=false) const "

[INTERNAL] 
Check if the sparsity is empty, i.e. if one of the dimensions is
 zero.

(or optionally both dimensions)

Extra doc: https://github.com/casadi/casadi/wiki/L_1az

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L148

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L148-L148

";

%feature("docstring")  casadi::GenericMatrixCommon::is_dense() const "

[INTERNAL] 
Check if the matrix expression is dense.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L153

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L153-L153

";

%feature("docstring")  casadi::GenericMatrixCommon::is_scalar(bool 
scalar_and_dense=false) const "

[INTERNAL] 
Check if the matrix expression is scalar.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L158

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1169-L1171

";

%feature("docstring")  casadi::GenericMatrixCommon::is_square() const "

[INTERNAL] 
Check if the matrix expression is square.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L163

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L163-L163

";

%feature("docstring")  casadi::GenericMatrixCommon::is_vector() const "

[INTERNAL] 
Check if the matrix is a row or column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L168

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L168-L168

";

%feature("docstring")  casadi::GenericMatrixCommon::is_row() const "

[INTERNAL] 
Check if the matrix is a row vector (i.e.  size1()==1)

Extra doc: https://github.com/casadi/casadi/wiki/L_1b4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L173

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L173-L173

";

%feature("docstring")  casadi::GenericMatrixCommon::is_column() const "

[INTERNAL] 
Check if the matrix is a column vector (i.e.  size2()==1)

Extra doc: https://github.com/casadi/casadi/wiki/L_1b5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L178-L178

";

%feature("docstring")  casadi::GenericMatrixCommon::is_triu() const "

[INTERNAL] 
Check if the matrix is upper triangular.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L183

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L183-L183

";

%feature("docstring")  casadi::GenericMatrixCommon::is_tril() const "

[INTERNAL] 
Check if the matrix is lower triangular.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L188

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L188-L188

";

%feature("docstring")  casadi::GenericMatrixCommon::nz(const K &k) const "

[INTERNAL] 
Get vector nonzero or slice of nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L248

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L248-L252

";

%feature("docstring")  casadi::GenericMatrixCommon::nz(const K &k) "

[INTERNAL] 
Access vector nonzero or slice of nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L258

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L258-L260

";


// File: classcasadi_1_1MX.xml


/*
 Construct symbolic primitives 
*/

/*
The \"sym\" function is intended to work in a similar way as \"sym\" 

used in the Symbolic Toolbox for Matlab but instead creating a CasADi 

symbolic primitive.

*/
%feature("docstring") casadi::MX "

[INTERNAL] 
 MX -  Matrix expression.

The  MX class is used to build up trees made up from MXNodes. It is a more 

general graph representation than the scalar expression, SX, and much 
less 
efficient for small objects. On the other hand, the class allows 
much more 
general operations than does SX, in particular matrix valued
 operations and
 calls to arbitrary differentiable functions.

The  MX class is designed to have identical syntax with the Matrix<> 
template
 class, and uses DM (i.e. Matrix<double>) as its internal 

representation of the values at a node. By keeping the syntaxes 
identical, 
it is possible to switch from one class to the other, as 
well as inlining  
MX functions to  SXElem functions.

Note that an operation is always \"lazy\", making a matrix 
multiplication 
will create a matrix multiplication node, not perform 
the actual 
multiplication.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_py

C++ includes: mx.hpp
";

%feature("docstring")  casadi::MX::binary(casadi_int op, const MX &x, const 
MX &y) "

[INTERNAL] 
Create nodes by their ID.

Extra doc: https://github.com/casadi/casadi/wiki/L_r1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L507-L532

";

%feature("docstring")  casadi::MX::unary(casadi_int op, const MX &x) "

[INTERNAL] 
Create nodes by their ID.

Extra doc: https://github.com/casadi/casadi/wiki/L_r1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L399

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L534-L536

";

%feature("docstring")  casadi::MX::inf(const Sparsity &sp) "

[INTERNAL] 
create a matrix with all inf

Extra doc: https://github.com/casadi/casadi/wiki/L_r2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L406

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L558-L560

";

%feature("docstring")  casadi::MX::inf(casadi_int nrow=1, casadi_int ncol=1)
 "

[INTERNAL] 
create a matrix with all inf

Extra doc: https://github.com/casadi/casadi/wiki/L_r2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L407

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L550-L552

";

%feature("docstring")  casadi::MX::inf(const std::pair< casadi_int, 
casadi_int > &rc) "

[INTERNAL] 
create a matrix with all inf

Extra doc: https://github.com/casadi/casadi/wiki/L_r2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L408

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L554-L556

";

%feature("docstring")  casadi::MX::nan(const Sparsity &sp) "

[INTERNAL] 
create a matrix with all nan

Extra doc: https://github.com/casadi/casadi/wiki/L_r3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L415

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L570-L572

";

%feature("docstring")  casadi::MX::nan(casadi_int nrow=1, casadi_int ncol=1)
 "

[INTERNAL] 
create a matrix with all nan

Extra doc: https://github.com/casadi/casadi/wiki/L_r3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L416

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L562-L564

";

%feature("docstring")  casadi::MX::nan(const std::pair< casadi_int, 
casadi_int > &rc) "

[INTERNAL] 
create a matrix with all nan

Extra doc: https://github.com/casadi/casadi/wiki/L_r3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L417

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L566-L568

";

%feature("docstring")  casadi::MX::einstein(const MX &A, const MX &B, const 
MX &C, const std::vector< casadi_int > &dim_a, const std::vector< casadi_int
 > &dim_b, const std::vector< casadi_int > &dim_c, const std::vector< 
casadi_int > &a, const std::vector< casadi_int > &b, const std::vector< 
casadi_int > &c) "

[INTERNAL] 
Computes an einstein dense tensor contraction.

Computes the product: C_c = A_a + B_b where a b c are index/einstein 

notation in an encoded form

For example, an matrix-matrix product may be written as: C_ij = A_ik 
B_kj

The encoded form uses strictly negative numbers to indicate labels. 
For the
 above example, we would have: a {-1, -3} b {-3, -2} c {-1 -2}

Extra doc: https://github.com/casadi/casadi/wiki/L_r5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L638-L644

";

%feature("docstring") casadi::casadi_einstein "

Computes an einstein dense tensor contraction.

Computes the product: C_c = A_a + B_b where a b c are index/einstein 

notation in an encoded form

For example, an matrix-matrix product may be written as: C_ij = A_ik 
B_kj

The encoded form uses strictly negative numbers to indicate labels. 
For the
 above example, we would have: a {-1, -3} b {-3, -2} c {-1 -2}

Extra doc: https://github.com/casadi/casadi/wiki/L_r5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L638-L644

";

%feature("docstring")  casadi::MX::casadi_einstein "

Computes an einstein dense tensor contraction.

Computes the product: C_c = A_a + B_b where a b c are index/einstein 

notation in an encoded form

For example, an matrix-matrix product may be written as: C_ij = A_ik 
B_kj

The encoded form uses strictly negative numbers to indicate labels. 
For the
 above example, we would have: a {-1, -3} b {-3, -2} c {-1 -2}

Extra doc: https://github.com/casadi/casadi/wiki/L_r5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L638-L644

";

%feature("docstring")  casadi::MX::einstein(const MX &A, const MX &B, const 
std::vector< casadi_int > &dim_a, const std::vector< casadi_int > &dim_b, 
const std::vector< casadi_int > &dim_c, const std::vector< casadi_int > &a, 
const std::vector< casadi_int > &b, const std::vector< casadi_int > &c) "

[INTERNAL] 
Computes an einstein dense tensor contraction.

Computes the product: C_c = A_a + B_b where a b c are index/einstein 

notation in an encoded form

For example, an matrix-matrix product may be written as: C_ij = A_ik 
B_kj

The encoded form uses strictly negative numbers to indicate labels. 
For the
 above example, we would have: a {-1, -3} b {-3, -2} c {-1 -2}

Extra doc: https://github.com/casadi/casadi/wiki/L_r5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L520

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L646-L652

";

%feature("docstring") casadi::casadi_einstein "

Computes an einstein dense tensor contraction.

Computes the product: C_c = A_a + B_b where a b c are index/einstein 

notation in an encoded form

For example, an matrix-matrix product may be written as: C_ij = A_ik 
B_kj

The encoded form uses strictly negative numbers to indicate labels. 
For the
 above example, we would have: a {-1, -3} b {-3, -2} c {-1 -2}

Extra doc: https://github.com/casadi/casadi/wiki/L_r5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L520

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L646-L652

";

%feature("docstring")  casadi::MX::casadi_einstein "

Computes an einstein dense tensor contraction.

Computes the product: C_c = A_a + B_b where a b c are index/einstein 

notation in an encoded form

For example, an matrix-matrix product may be written as: C_ij = A_ik 
B_kj

The encoded form uses strictly negative numbers to indicate labels. 
For the
 above example, we would have: a {-1, -3} b {-3, -2} c {-1 -2}

Extra doc: https://github.com/casadi/casadi/wiki/L_r5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L520

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L646-L652

";

%feature("docstring")  casadi::MX::is_equal(const MX &x, const MX &y, 
casadi_int depth=0) "

[INTERNAL] 
Functions called by friend functions defined for  
GenericExpression

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L531

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L810-L812

";

%feature("docstring")  casadi::MX::mmin(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  
GenericExpression

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L532

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L814-L816

";

%feature("docstring")  casadi::MX::mmax(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  
GenericExpression

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L533

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L818-L820

";

%feature("docstring")  casadi::MX::horzcat(const std::vector< MX > &x) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L538

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L993-L1027

";

%feature("docstring")  casadi::MX::diagcat(const std::vector< MX > &x) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L539

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1029-L1052

";

%feature("docstring")  casadi::MX::vertcat(const std::vector< MX > &x) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L540

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1054-L1093

";

%feature("docstring")  casadi::MX::horzsplit(const MX &x, const std::vector<
 casadi_int > &offset) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L541

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1095-L1110

";

%feature("docstring")  casadi::MX::diagsplit(const MX &x, const std::vector<
 casadi_int > &offset1, const std::vector< casadi_int > &offset2) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L542

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1112-L1127

";

%feature("docstring")  casadi::MX::vertsplit(const MX &x, const std::vector<
 casadi_int > &offset) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L544

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1129-L1150

";

%feature("docstring")  casadi::MX::blockcat(const std::vector< std::vector< 
MX > > &v) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L545

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1152-L1171

";

%feature("docstring")  casadi::MX::mtimes(const MX &x, const MX &y) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L546

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L628-L636

";

%feature("docstring")  casadi::MX::mac(const MX &x, const MX &y, const MX 
&z) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L547

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L668-L689

";

%feature("docstring")  casadi::MX::reshape(const MX &x, casadi_int nrow, 
casadi_int ncol) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L548

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1197-L1203

";

%feature("docstring")  casadi::MX::reshape(const MX &x, const Sparsity &sp) 
"

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1205-L1213

";

%feature("docstring")  casadi::MX::sparsity_cast(const MX &x, const Sparsity
 &sp) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L550

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1215-L1225

";

%feature("docstring")  casadi::MX::kron(const MX &x, const MX &b) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L551

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1852-L1865

";

%feature("docstring")  casadi::MX::repmat(const MX &x, casadi_int n, 
casadi_int m=1) "

[INTERNAL] 
Functions called by friend functions defined for  
SparsityInterface

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L552

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1867-L1879

";

%feature("docstring")  casadi::MX::jacobian(const MX &f, const MX &x, const 
Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L557

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1700-L1710

";

%feature("docstring")  casadi::MX::hessian(const MX &f, const MX &x, const 
Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L558

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1712-L1715

";

%feature("docstring")  casadi::MX::hessian(const MX &f, const MX &x, MX &g, 
const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L559

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1717-L1726

";

%feature("docstring")  casadi::MX::forward(const std::vector< MX > &ex, 
const std::vector< MX > &arg, const std::vector< std::vector< MX > > &v, 
const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L561

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1729-L1757

";

%feature("docstring")  casadi::MX::reverse(const std::vector< MX > &ex, 
const std::vector< MX > &arg, const std::vector< std::vector< MX > > &v, 
const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L566

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1760-L1790

";

%feature("docstring")  casadi::MX::which_depends(const MX &expr, const MX 
&var, casadi_int order=1, bool tr=false) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L570

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1792-L1794

";

%feature("docstring")  casadi::MX::jacobian_sparsity(const MX &f, const MX 
&x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L572

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1796-L1798

";

%feature("docstring")  casadi::MX::substitute(const MX &ex, const MX &v, 
const MX &vdef) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L573

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1379-L1381

";

%feature("docstring")  casadi::MX::substitute(const std::vector< MX > &ex, 
const std::vector< MX > &v, const std::vector< MX > &vdef) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L574

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1383-L1403

";

%feature("docstring")  casadi::MX::substitute_inplace(const std::vector< MX 
> &v, std::vector< MX > &vdef, std::vector< MX > &ex, bool reverse) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L577

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1357-L1377

";

%feature("docstring")  casadi::MX::solve(const MX &a, const MX &b) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L580

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1885-L1901

";

%feature("docstring")  casadi::MX::solve(const MX &a, const MX &b, const 
std::string &lsolver, const Dict &dict=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L581

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1903-L1907

";

%feature("docstring")  casadi::MX::inv_minor(const MX &A) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L583

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1808-L1810

";

%feature("docstring")  casadi::MX::inv_node(const MX &A) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L584

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1804-L1806

";

%feature("docstring")  casadi::MX::inv_node(const MX &x) "

[INTERNAL] 
Inverse node.

Extra doc: https://github.com/casadi/casadi/wiki/L_re

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L793

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L793-L795

";

%feature("docstring") casadi::casadi_inv_node "

Inverse node.

Extra doc: https://github.com/casadi/casadi/wiki/L_re

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L793

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L793-L795

";

%feature("docstring")  casadi::MX::casadi_inv_node "

Inverse node.

Extra doc: https://github.com/casadi/casadi/wiki/L_re

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L793

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L793-L795

";

%feature("docstring")  casadi::MX::inv(const MX &A, const std::string 
&lsolver="qr", const Dict &dict=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L585

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1812-L1814

";

%feature("docstring")  casadi::MX::pinv(const MX &A, const std::string 
&lsolver="qr", const Dict &dict=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L586

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1909-L1915

";

%feature("docstring")  casadi::MX::expm_const(const MX &A, const MX &t) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L588

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1917-L1922

";

%feature("docstring")  casadi::MX::expm(const MX &A) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L589

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1924-L1927

";

%feature("docstring")  casadi::MX::n_nodes(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L590

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1329-L1333

";

%feature("docstring")  casadi::MX::print_operator(const MX &x, const 
std::vector< std::string > &args) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L591

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1353-L1355

";

%feature("docstring")  casadi::MX::extract(std::vector< MX > &ex, 
std::vector< MX > &v, std::vector< MX > &vdef, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L592

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1520-L1691

";

%feature("docstring")  casadi::MX::shared(std::vector< MX > &ex, 
std::vector< MX > &v, std::vector< MX > &vdef, const std::string &v_prefix, 
const std::string &v_suffix) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L594

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1693-L1698

";

%feature("docstring")  casadi::MX::if_else(const MX &cond, const MX 
&if_true, const MX &if_false, bool short_circuit=false) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L596

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1227-L1247

";

%feature("docstring")  casadi::MX::conditional(const MX &ind, const 
std::vector< MX > &x, const MX &x_default, bool short_circuit=false) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L598

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1249-L1281

";

%feature("docstring")  casadi::MX::depends_on(const MX &x, const MX &arg) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L600

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1935-L1951

";

%feature("docstring")  casadi::MX::simplify(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L601

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1193-L1195

";

%feature("docstring")  casadi::MX::dot(const MX &x, const MX &y) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L602

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L691-L693

";

%feature("docstring")  casadi::MX::mrdivide(const MX &a, const MX &b) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L603

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L720-L723

";

%feature("docstring")  casadi::MX::mldivide(const MX &a, const MX &b) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L604

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L725-L728

";

%feature("docstring")  casadi::MX::norm_2(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L605

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1173-L1179

";

%feature("docstring")  casadi::MX::norm_fro(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L606

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1181-L1183

";

%feature("docstring")  casadi::MX::norm_1(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L607

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1185-L1187

";

%feature("docstring")  casadi::MX::norm_inf(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L608

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1189-L1191

";

%feature("docstring")  casadi::MX::unite(const MX &A, const MX &B) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L609

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1283-L1307

";

%feature("docstring")  casadi::MX::trace(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L610

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1309-L1316

";

%feature("docstring")  casadi::MX::diag(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L611

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1318-L1327

";

%feature("docstring")  casadi::MX::sum2(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L612

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1335-L1337

";

%feature("docstring")  casadi::MX::sum1(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L613

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1339-L1341

";

%feature("docstring")  casadi::MX::polyval(const MX &p, const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L614

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1343-L1351

";

%feature("docstring")  casadi::MX::det(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L615

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1800-L1802

";

%feature("docstring")  casadi::MX::symvar(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L616

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1816-L1819

";

%feature("docstring")  casadi::MX::nullspace(const MX &A) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L617

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1929-L1933

";

%feature("docstring")  casadi::MX::repsum(const MX &x, casadi_int n, 
casadi_int m=1) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L618

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1881-L1883

";

%feature("docstring")  casadi::GenericMatrixCommon::repsum(const MX &x, 
casadi_int n, casadi_int m=1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L232

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1340-L1352

";

%feature("docstring")  casadi::MX::densify(const MX &x, const MX &val=0) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L619

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L866-L877

";

%feature("docstring") casadi::MX::_bilin "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L620

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2275-L2277

";

%feature("docstring") casadi::MX::_rank1 "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L621

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2279-L2281

";

%feature("docstring")  casadi::MX::project(const MX &x, const Sparsity &sp, 
bool intersect=false) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L622

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L849-L864

";

%feature("docstring")  casadi::MX::cumsum(const MX &x, casadi_int axis=-1) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L623

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L654-L666

";

%feature("docstring") casadi::MX::_logsumexp "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L624

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2283-L2285

";

%feature("docstring")  casadi::MX::cse(const std::vector< MX > &e) "

[INTERNAL] 
Functions called by friend functions defined for  GenericMatrix

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L625

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2024-L2091

";

%feature("docstring")  casadi::MX::find(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L630

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1953-L1955

";

%feature("docstring")  casadi::MX::find(const MX &x) "

[INTERNAL] 
Find first nonzero, returned as row index.

If failed, returns the number of rows

Extra doc: https://github.com/casadi/casadi/wiki/L_r7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L690

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L690-L692

";

%feature("docstring") casadi::casadi_find "

Find first nonzero, returned as row index.

If failed, returns the number of rows

Extra doc: https://github.com/casadi/casadi/wiki/L_r7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L690

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L690-L692

";

%feature("docstring")  casadi::MX::casadi_find "

Find first nonzero, returned as row index.

If failed, returns the number of rows

Extra doc: https://github.com/casadi/casadi/wiki/L_r7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L690

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L690-L692

";

%feature("docstring")  casadi::MX::low(const MX &v, const MX &p, const Dict 
&options=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L631

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1957-L1959

";

%feature("docstring")  casadi::MX::low(const MX &v, const MX &p, const Dict 
&options=Dict()) "

[INTERNAL] 
Find first nonzero.

If failed, returns the number of rows

Extra doc: https://github.com/casadi/casadi/wiki/L_r8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L699

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L699-L701

";

%feature("docstring") casadi::casadi_low "

Find first nonzero.

If failed, returns the number of rows

Extra doc: https://github.com/casadi/casadi/wiki/L_r8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L699

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L699-L701

";

%feature("docstring")  casadi::MX::casadi_low "

Find first nonzero.

If failed, returns the number of rows

Extra doc: https://github.com/casadi/casadi/wiki/L_r8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L699

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L699-L701

";

%feature("docstring")  casadi::MX::graph_substitute(const MX &x, const 
std::vector< MX > &v, const std::vector< MX > &vdef) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L632

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1405-L1408

";

%feature("docstring")  casadi::MX::graph_substitute(const std::vector< MX > 
&ex, const std::vector< MX > &expr, const std::vector< MX > &exprs) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L634

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1410-L1518

";

%feature("docstring")  casadi::MX::graph_substitute(const MX &ex, const 
std::vector< MX > &v, const std::vector< MX > &vdef) "

[INTERNAL] 
Substitute single expression in graph.

Substitute variable v with expression vdef in an expression ex, 
preserving 
nodes

Extra doc: https://github.com/casadi/casadi/wiki/L_r9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L708

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L708-L711

";

%feature("docstring") casadi::casadi_graph_substitute "

Substitute single expression in graph.

Substitute variable v with expression vdef in an expression ex, 
preserving 
nodes

Extra doc: https://github.com/casadi/casadi/wiki/L_r9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L708

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L708-L711

";

%feature("docstring")  casadi::MX::casadi_graph_substitute "

Substitute single expression in graph.

Substitute variable v with expression vdef in an expression ex, 
preserving 
nodes

Extra doc: https://github.com/casadi/casadi/wiki/L_r9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L708

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L708-L711

";

%feature("docstring")  casadi::MX::graph_substitute(const std::vector< MX > 
&ex, const std::vector< MX > &v, const std::vector< MX > &vdef) "

[INTERNAL] 
Substitute multiple expressions in graph.

Substitute variable var with expression expr in multiple expressions, 

preserving nodes

Extra doc: https://github.com/casadi/casadi/wiki/L_ra

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L720-L724

";

%feature("docstring") casadi::casadi_graph_substitute "

Substitute multiple expressions in graph.

Substitute variable var with expression expr in multiple expressions, 

preserving nodes

Extra doc: https://github.com/casadi/casadi/wiki/L_ra

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L720-L724

";

%feature("docstring")  casadi::MX::casadi_graph_substitute "

Substitute multiple expressions in graph.

Substitute variable var with expression expr in multiple expressions, 

preserving nodes

Extra doc: https://github.com/casadi/casadi/wiki/L_ra

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L720-L724

";

%feature("docstring")  casadi::MX::matrix_expand(const MX &e, const 
std::vector< MX > &boundary, const Dict &options) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L637

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1821-L1823

";

%feature("docstring")  casadi::MX::matrix_expand(const std::vector< MX > &e,
 const std::vector< MX > &boundary, const Dict &options) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L639

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1825-L1850

";

%feature("docstring")  casadi::MX::matrix_expand(const MX &e, const 
std::vector< MX > &boundary=std::vector< MX >(), const Dict &options=Dict())
 "

[INTERNAL] 
Expand  MX graph to SXFunction call.

Expand the given expression e, optionally supplying expressions 
contained 
in it at which expansion should stop.

Extra doc: https://github.com/casadi/casadi/wiki/L_rb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L733

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L733-L736

";

%feature("docstring") casadi::casadi_matrix_expand "

Expand  MX graph to SXFunction call.

Expand the given expression e, optionally supplying expressions 
contained 
in it at which expansion should stop.

Extra doc: https://github.com/casadi/casadi/wiki/L_rb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L733

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L733-L736

";

%feature("docstring")  casadi::MX::casadi_matrix_expand "

Expand  MX graph to SXFunction call.

Expand the given expression e, optionally supplying expressions 
contained 
in it at which expansion should stop.

Extra doc: https://github.com/casadi/casadi/wiki/L_rb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L733

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L733-L736

";

%feature("docstring")  casadi::MX::matrix_expand(const std::vector< MX > &e,
 const std::vector< MX > &boundary=std::vector< MX >(), const Dict 
&options=Dict()) "

[INTERNAL] 
Expand  MX graph to SXFunction call.

Expand the given expression e, optionally supplying expressions 
contained 
in it at which expansion should stop.

Extra doc: https://github.com/casadi/casadi/wiki/L_rc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L745-L749

";

%feature("docstring") casadi::casadi_matrix_expand "

Expand  MX graph to SXFunction call.

Expand the given expression e, optionally supplying expressions 
contained 
in it at which expansion should stop.

Extra doc: https://github.com/casadi/casadi/wiki/L_rc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L745-L749

";

%feature("docstring")  casadi::MX::casadi_matrix_expand "

Expand  MX graph to SXFunction call.

Expand the given expression e, optionally supplying expressions 
contained 
in it at which expansion should stop.

Extra doc: https://github.com/casadi/casadi/wiki/L_rc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L745

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L745-L749

";

%feature("docstring")  casadi::MX::lift(const MX &x, const MX &x_guess) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L642

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L710-L713

";

%feature("docstring")  casadi::MX::lift(const MX &x, const MX &x_guess) "

[INTERNAL] 
Lift the expression.

Experimental feature

Extra doc: https://github.com/casadi/casadi/wiki/L_rd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L786

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L786-L788

";

%feature("docstring")  casadi::MX::evalf(const MX &m) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L643

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L715-L718

";

%feature("docstring")  casadi::MX::evalf(const MX &expr) "

[INTERNAL] 
Evaluates the expression numerically.

An error is raised when the expression contains symbols

Extra doc: https://github.com/casadi/casadi/wiki/L_rf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L802

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L802-L804

";

%feature("docstring") casadi::casadi_evalf "

Evaluates the expression numerically.

An error is raised when the expression contains symbols

Extra doc: https://github.com/casadi/casadi/wiki/L_rf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L802

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L802-L804

";

%feature("docstring")  casadi::MX::casadi_evalf "

Evaluates the expression numerically.

An error is raised when the expression contains symbols

Extra doc: https://github.com/casadi/casadi/wiki/L_rf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L802

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L802-L804

";

%feature("docstring")  casadi::MX::bspline(const MX &x, const DM &coeffs, 
const std::vector< std::vector< double > > &knots, const std::vector< 
casadi_int > &degree, casadi_int m, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L644

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1961-L1968

";

%feature("docstring")  casadi::MX::bspline(const MX &x, const MX &coeffs, 
const std::vector< std::vector< double > > &knots, const std::vector< 
casadi_int > &degree, casadi_int m, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L650

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1970-L1976

";

%feature("docstring")  casadi::MX::bspline(const MX &x, const DM &coeffs, 
const std::vector< std::vector< double > > &knots, const std::vector< 
casadi_int > &degree, casadi_int m, const Dict &opts=Dict()) "

[INTERNAL] ";

%feature("docstring")  casadi::MX::bspline(const MX &x, const MX &coeffs, 
const std::vector< std::vector< double > > &knots, const std::vector< 
casadi_int > &degree, casadi_int m, const Dict &opts=Dict()) "

[INTERNAL] ";

%feature("docstring")  casadi::MX::convexify(const MX &H, const Dict 
&opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L655

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L1985-L1988

";

%feature("docstring")  casadi::MX::convexify(const MX &H, const Dict 
&opts=Dict()) "

[INTERNAL] ";

%feature("docstring")  casadi::MX::stop_diff(const MX &expr, casadi_int 
order) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L656

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2093-L2123

";

%feature("docstring")  casadi::MX::stop_diff(const MX &expr, const MX &var, 
casadi_int order) "

[INTERNAL] 
Functions called by friend functions defined for this class

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L657

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2125-L2163

";

%feature("docstring")  casadi::MX::stop_diff(const MX &expr, casadi_int 
order) "

[INTERNAL] 
Stop derivatives of an expression wrt to all its symbolic 
variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_25l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L809

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L809-L811

";

%feature("docstring") casadi::casadi_stop_diff "

Stop derivatives of an expression wrt to all its symbolic variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_25l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L809

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L809-L811

";

%feature("docstring")  casadi::MX::casadi_stop_diff "

Stop derivatives of an expression wrt to all its symbolic variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_25l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L809

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L809-L811

";

%feature("docstring")  casadi::MX::stop_diff(const MX &expr, const MX &var, 
casadi_int order) "

[INTERNAL] 
Stop derivatives of an expression wrt to a select set of 
symbolic 
variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_25o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L835

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L835-L837

";

%feature("docstring") casadi::casadi_stop_diff "

Stop derivatives of an expression wrt to a select set of symbolic 

variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_25o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L835

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L835-L837

";

%feature("docstring")  casadi::MX::casadi_stop_diff "

Stop derivatives of an expression wrt to a select set of symbolic 

variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_25o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L835

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L835-L837

";

%feature("docstring")  casadi::GenericMatrixCommon::interp1d(const 
std::vector< double > &x, const MX &v, const std::vector< double > &xq, 
const std::string &mode, bool equidistant) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L213

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1252-L1308

";

%feature("docstring")  casadi::GenericMatrixCommon::sprank(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L215

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L215-L215

";

%feature("docstring")  casadi::GenericMatrixCommon::norm_0_mul(const MX &x, 
const MX &y) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L216

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L216-L218

";

%feature("docstring")  casadi::GenericMatrixCommon::tril(const MX &x, bool 
includeDiagonal=true) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L219

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L219-L221

";

%feature("docstring")  casadi::GenericMatrixCommon::triu(const MX &x, bool 
includeDiagonal=true) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L222-L224

";

%feature("docstring")  casadi::GenericMatrixCommon::sumsqr(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L225-L225

";

%feature("docstring")  casadi::GenericMatrixCommon::linspace(const MX &a, 
const MX &b, casadi_int nsteps) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L226

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1202-L1212

";

%feature("docstring")  casadi::GenericMatrixCommon::cross(const MX &a, const
 MX &b, casadi_int dim=-1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L227

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1215-L1246

";

%feature("docstring")  casadi::GenericMatrixCommon::skew(const MX &a) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L228

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1311-L1319

";

%feature("docstring")  casadi::GenericMatrixCommon::inv_skew(const MX &a) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L229

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1322-L1327

";

%feature("docstring")  casadi::GenericMatrixCommon::tril2symm(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L230

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1331-L1337

";

%feature("docstring")  casadi::GenericMatrixCommon::triu2symm(const MX &x) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L231

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1355-L1361

";

%feature("docstring")  casadi::GenericMatrixCommon::diff(const MX &x, 
casadi_int n=1, casadi_int axis=-1) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1565-L1590

";

%feature("docstring")  casadi::GenericMatrixCommon::is_linear(const MX 
&expr, const MX &var) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L235

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1534-L1536

";

%feature("docstring")  casadi::GenericMatrixCommon::is_quadratic(const MX 
&expr, const MX &var) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L236

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1539-L1541

";

%feature("docstring")  casadi::GenericMatrixCommon::quadratic_coeff(const MX
 &expr, const MX &var, MX &A, MX &b, MX &c, bool check) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L237

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1544-L1552

";

%feature("docstring")  casadi::GenericMatrixCommon::linear_coeff(const MX 
&expr, const MX &var, MX &A, MX &b, bool check) "

[INTERNAL] 
Functions called by friend functions defined here.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L239

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1555-L1562

";

%feature("docstring")  casadi::GenericMatrixCommon::mpower(const MX &x, 
const MX &y) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1010

";

%feature("docstring")  casadi::GenericMatrixCommon::soc(const MX &x, const 
MX &y) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1011

";

%feature("docstring")  casadi::GenericMatrixCommon::linearize(const MX &f, 
const MX &x, const MX &x0, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1008

";

%feature("docstring")  casadi::GenericMatrixCommon::gradient(const MX &ex, 
const MX &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1006

";

%feature("docstring")  casadi::GenericMatrixCommon::tangent(const MX &ex, 
const MX &arg, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1007

";

%feature("docstring")  casadi::GenericMatrixCommon::jtimes(const MX &ex, 
const MX &arg, const MX &v, bool tr=false, const Dict &opts=Dict()) "

[INTERNAL] 
Functions called by friend functions defined here

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1004

";

%feature("docstring")  casadi::GenericMatrixCommon::bilin(const MX &A, const
 MX &x, const MX &y) "

[INTERNAL] 
Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring") casadi::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_bilin "

Calculate bilinear/quadratic form x^T A y.

Parameters:
-----------

y: 
can be omitted, in which case x^T A x is calculated

Extra doc: https://github.com/casadi/casadi/wiki/L_1bo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L409

";

%feature("docstring")  casadi::GenericMatrixCommon::rank1(const MX &A, const
 MX &alpha, const MX &x, const MX &y) "

[INTERNAL] 
Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring") casadi::casadi_rank1 "

Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring")  casadi::GenericMatrixCommon::casadi_rank1 "

Make a rank-1 update to a matrix A.

Calculates A + 1/2 * alpha * x*y'

Extra doc: https://github.com/casadi/casadi/wiki/L_1bp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L422

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow=1, casadi_int ncol=1) "

[INTERNAL] 
Create an nrow-by-ncol symbolic primitive.

Extra doc: https://github.com/casadi/casadi/wiki/L_1da

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1027

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1027-L1029

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const std::pair< casadi_int, casadi_int > &rc) "

[INTERNAL] 
Construct a symbolic primitive with given dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1db

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1034

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1034-L1036

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp) "

[INTERNAL] 
Create symbolic primitive with a given sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1041

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1041-L1043

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp, casadi_int p) "

[INTERNAL] 
Create a vector of length p with with matrices.

with symbolic primitives of given sparsity

Extra doc: https://github.com/casadi/casadi/wiki/L_1dd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1050

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1176-L1186

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow, casadi_int ncol, casadi_int p) "

[INTERNAL] 
Create a vector of length p with nrow-by-ncol symbolic 
primitives.

Extra doc: https://github.com/casadi/casadi/wiki/L_1de

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1055

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1055-L1058

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, const Sparsity &sp, casadi_int p, casadi_int r) "

[INTERNAL] 
Create a vector of length r of vectors of length p with.

symbolic primitives with given sparsity

Extra doc: https://github.com/casadi/casadi/wiki/L_1df

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1066

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1189-L1199

";

%feature("docstring")  casadi::GenericMatrixCommon::sym(const std::string 
&name, casadi_int nrow, casadi_int ncol, casadi_int p, casadi_int r) "

[INTERNAL] 
Create a vector of length r of vectors of length p.

with nrow-by-ncol symbolic primitives

Extra doc: https://github.com/casadi/casadi/wiki/L_1dg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1074

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1074-L1076

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(casadi_int nrow=1,
 casadi_int ncol=1) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1083

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1083-L1085

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(const Sparsity 
&sp) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1086

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1086-L1086

";

%feature("docstring")  casadi::GenericMatrixCommon::zeros(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries zero.

Extra doc: https://github.com/casadi/casadi/wiki/L_1dh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1087

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1087-L1089

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(casadi_int nrow=1, 
casadi_int ncol=1) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1096

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1096-L1098

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(const Sparsity &sp)
 "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1099

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1099-L1099

";

%feature("docstring")  casadi::GenericMatrixCommon::ones(const std::pair< 
casadi_int, casadi_int > &rc) "

[INTERNAL] 
Create a dense matrix or a matrix with specified sparsity with 
all 
entries one.

Extra doc: https://github.com/casadi/casadi/wiki/L_1di

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1100

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1100-L1102

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const Slice &rr) 
const "

[INTERNAL] 
Get a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L432

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L171-L174

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const MatrixCommon 
&rr) const "

[INTERNAL] 
Get a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L433

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L176-L192

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const Sparsity &sp)
 const "

[INTERNAL] 
Get a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L434

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L194-L200

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const MX &rr) const
 "

[INTERNAL] 
Get a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L435

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L202-L206

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const casadi_int 
rr) const "

[INTERNAL] 
Get a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L436

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L436-L438

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const Slice &rr, 
const Slice &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L443

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L141-L144

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const Slice &rr, 
const MatrixCommon &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L444

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L146-L149

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const Slice &rr, 
casadi_int cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L445

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L445-L447

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const MatrixCommon 
&rr, const Slice &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L448

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L151-L154

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, casadi_int rr, 
const Slice &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L449

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L449-L451

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const MatrixCommon 
&rr, const MatrixCommon &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L452

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L156-L169

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, casadi_int rr, 
casadi_int cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L454

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L454-L457

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const MX &rr, const
 Slice &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L458

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L213-L216

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const Slice &rr, 
const MX &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L459

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L208-L211

";

%feature("docstring")  casadi::MX::get(MX &m, bool ind1, const MX &rr, const
 MX &cc) const "

[INTERNAL] 
Get a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L460

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L218-L221

";

%feature("docstring")  casadi::MX::get() const "

[INTERNAL] 
Get a const pointer to the node.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L427

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L538-L540

";

%feature("docstring")  casadi::MX::set(const MX &m, bool ind1, const Slice 
&rr) "

[INTERNAL] 
Set a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L465

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L298-L301

";

%feature("docstring")  casadi::MX::set(const MX &m, bool ind1, const 
MatrixCommon &rr) "

[INTERNAL] 
Set a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L466

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L303-L369

";

%feature("docstring")  casadi::MX::set(const MX &m, bool ind1, const 
Sparsity &sp) "

[INTERNAL] 
Set a submatrix, single argument

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L467

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L371-L382

";

%feature("docstring")  casadi::MX::set(const MX &m, bool ind1, const Slice 
&rr, const Slice &cc) "

[INTERNAL] 
Set a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L472

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L223-L226

";

%feature("docstring")  casadi::MX::set(const MX &m, bool ind1, const Slice 
&rr, const MatrixCommon &cc) "

[INTERNAL] 
Set a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L473

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L228-L231

";

%feature("docstring")  casadi::MX::set(const MX &m, bool ind1, const 
MatrixCommon &rr, const Slice &cc) "

[INTERNAL] 
Set a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L474

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L233-L236

";

%feature("docstring")  casadi::MX::set(const MX &m, bool ind1, const 
MatrixCommon &rr, const MatrixCommon &cc) "

[INTERNAL] 
Set a submatrix, two arguments

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L475

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L238-L296

";

%feature("docstring")  casadi::MX::get_nz(MX &m, bool ind1, const Slice &kk)
 const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L480

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L384-L387

";

%feature("docstring")  casadi::MX::get_nz(MX &m, bool ind1, const 
MatrixCommon &kk) const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L481

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L389-L420

";

%feature("docstring")  casadi::MX::get_nz(MX &m, bool ind1, const MX &kk) 
const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L482

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L422-L425

";

%feature("docstring")  casadi::MX::get_nz(MX &m, bool ind1, casadi_int kk) 
const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L483

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L483-L485

";

%feature("docstring")  casadi::MX::get_nz(MX &m, bool ind1, const MX &inner,
 const Slice &outer) const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L486

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L437-L440

";

%feature("docstring")  casadi::MX::get_nz(MX &m, bool ind1, const Slice 
&inner, const MX &outer) const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L487

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L432-L435

";

%feature("docstring")  casadi::MX::get_nz(MX &m, bool ind1, const MX &inner,
 const MX &outer) const "

[INTERNAL] 
Get a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L488

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L427-L430

";

%feature("docstring")  casadi::MX::set_nz(const MX &m, bool ind1, const 
Slice &kk) "

[INTERNAL] 
Set a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L493

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L442-L445

";

%feature("docstring")  casadi::MX::set_nz(const MX &m, bool ind1, const 
MatrixCommon &kk) "

[INTERNAL] 
Set a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L494

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L447-L501

";

%feature("docstring")  casadi::MX::set_nz(const MX &m, bool ind1, const MX 
&kk) "

[INTERNAL] 
Set a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L495

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L503-L505

";

%feature("docstring")  casadi::MX::set_nz(const MX &m, bool ind1, casadi_int
 kk) "

[INTERNAL] 
Set a set of nonzeros

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L496

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L496-L496

";

%feature("docstring")  casadi::MX::ad_forward(const std::vector< 
std::vector< MX > > &fseed, std::vector< std::vector< MX > > &fsens) const "

[INTERNAL] 
Called from MXFunction.

Extra doc: https://github.com/casadi/casadi/wiki/L_ro

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L904

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2296-L2303

";

%feature("docstring")  casadi::MX::ad_reverse(const std::vector< 
std::vector< MX > > &aseed, std::vector< std::vector< MX > > &asens) const "

[INTERNAL] 
Called from MXFunction.

Extra doc: https://github.com/casadi/casadi/wiki/L_ro

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L906

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2305-L2312

";

%feature("docstring")  casadi::GenericMatrixCommon::get_row() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L194

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L194-L194

";

%feature("docstring")  casadi::GenericMatrixCommon::get_colind() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L195

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L195-L195

";

%feature("docstring")  casadi::GenericMatrixCommon::row() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L197

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L197-L197

";

%feature("docstring")  casadi::GenericMatrixCommon::row(casadi_int el) const
 "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L200-L200

";

%feature("docstring")  casadi::GenericMatrixCommon::colind() const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L198

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L198-L198

";

%feature("docstring")  casadi::GenericMatrixCommon::colind(casadi_int col) 
const "

[INTERNAL] 
Get the sparsity pattern. See the Sparsity class for details.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L201

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L201-L201

";

%feature("docstring")  casadi::GenericExpressionCommon::printme(const MX &x,
 const MX &y) "

[INTERNAL] 
Debug printing

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L730

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L730-L732

";

%feature("docstring")  casadi::MX::printme(const MX &b) const "

[INTERNAL] ";

%feature("docstring") casadi::MX::MX() "

[INTERNAL] 
Default constructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_q0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L94

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L57-L59
";

%feature("docstring") casadi::MX::MX(casadi_int nrow, casadi_int ncol) "

[INTERNAL] 
Create a sparse matrix with all structural zeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_q1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L106-L108

";

%feature("docstring") casadi::MX::MX(const std::pair< casadi_int, casadi_int
 > &rc) "

[INTERNAL] 
Create a sparse matrix with all structural zeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_q2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L105

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L110-L112

";

%feature("docstring") casadi::MX::MX(const Sparsity &sp) "

[INTERNAL] 
Create a sparse matrix from a sparsity pattern.

Same as MX::ones(sparsity)

Extra doc: https://github.com/casadi/casadi/wiki/L_q3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L113

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L102-L104

";

%feature("docstring") casadi::MX::MX(const Sparsity &sp, const MX &val) "

[INTERNAL] 
Construct matrix with a given sparsity and nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_q4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L118

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L81-L100
";

%feature("docstring") casadi::MX::MX(const Sparsity &sp, const std::string 
&fname) "

[INTERNAL] 
Construct matrix with a given sparsity and a file with nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_q5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L123

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L118-L120

";

%feature("docstring") casadi::MX::MX(double x) "

[INTERNAL] 
Create scalar constant (also implicit type conversion)

Extra doc: https://github.com/casadi/casadi/wiki/L_q6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L128

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L69-L71
";

%feature("docstring") casadi::MX::MX(const std::vector< double > &x) "

[INTERNAL] 
Create vector constant (also implicit type conversion)

Extra doc: https://github.com/casadi/casadi/wiki/L_q7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L134

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L77-L79
";

%feature("docstring") casadi::MX::MX(const MatrixCommon &x) "

[INTERNAL] 
Create sparse matrix constant (also implicit type conversion)

Extra doc: https://github.com/casadi/casadi/wiki/L_q8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L140

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L73-L75
";

%feature("docstring") casadi::MX::MX(const Sparsity &sp, double val, bool 
dummy) "

[INTERNAL] 
Construct constant matrix with a given sparsity and values.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L911

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L114-L116

";

%feature("docstring")  casadi::MX::sparsity() const "

[INTERNAL] 
Get the sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_qc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L165

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L586-L588

";

%feature("docstring") casadi::casadi_sparsity "

Get the sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_qc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L165

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L586-L588

";

%feature("docstring")  casadi::MX::casadi_sparsity "

Get the sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_qc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L165

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L586-L588

";

%feature("docstring") casadi::MX::__nonzero__ "

[INTERNAL] 
Returns the truth value of an  MX expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L184

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L137-L139

";

%feature("docstring")  casadi::MX::get_sparsity() const "

[INTERNAL] 
Get an owning reference to the sparsity pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_qd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L189-L189

";

%feature("docstring")  casadi::MX::erase(const std::vector< casadi_int > 
&rr, const std::vector< casadi_int > &cc, bool ind1=false) "

[INTERNAL] 
Erase a submatrix (leaving structural zeros in its place)

Erase rows and/or columns of a matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_qe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L196

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L590-L602

";

%feature("docstring")  casadi::MX::erase(const std::vector< casadi_int > 
&rr, bool ind1=false) "

[INTERNAL] 
Erase a submatrix (leaving structural zeros in its place)

Erase elements of a matrix

Extra doc: https://github.com/casadi/casadi/wiki/L_qf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L204

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L604-L616

";

%feature("docstring")  casadi::MX::enlarge(casadi_int nrow, casadi_int ncol,
 const std::vector< casadi_int > &rr, const std::vector< casadi_int > &cc, 
bool ind1=false) "

[INTERNAL] 
Enlarge matrix.

Make the matrix larger by inserting empty rows and columns, keeping 
the 
existing non-zeros

Extra doc: https://github.com/casadi/casadi/wiki/L_qg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L211

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L618-L626

";

%feature("docstring")  casadi::MX::dep(casadi_int ch=0) const "

[INTERNAL] 
Get the nth dependency as  MX.

Extra doc: https://github.com/casadi/casadi/wiki/L_qj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L236

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L730-L732

";

%feature("docstring")  casadi::MX::n_out() const "

[INTERNAL] 
Number of outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_qk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L241

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L841-L843

";

%feature("docstring")  casadi::MX::get_output(casadi_int oind) const "

[INTERNAL] 
Get an output.

Extra doc: https://github.com/casadi/casadi/wiki/L_ql

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L246

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L845-L847

";

%feature("docstring")  casadi::MX::n_dep() const "

[INTERNAL] 
Get the number of dependencies of a binary  SXElem.

Extra doc: https://github.com/casadi/casadi/wiki/L_qm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L251

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L734-L736

";

%feature("docstring")  casadi::MX::name() const "

[INTERNAL] 
Get the name.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L254

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L738-L740

";

%feature("docstring")  casadi::MX::is_symbolic() const "

[INTERNAL] 
Check if symbolic.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L263

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L742-L744

";

%feature("docstring")  casadi::MX::is_constant() const "

[INTERNAL] 
Check if constant.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L266

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L746-L748

";

%feature("docstring")  casadi::MX::is_call() const "

[INTERNAL] 
Check if evaluation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L269

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L750-L752

";

%feature("docstring")  casadi::MX::which_function() const "

[INTERNAL] 
Get function - only valid when  is_call() is true.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L272

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L754-L756

";

%feature("docstring")  casadi::MX::is_output() const "

[INTERNAL] 
Check if evaluation output.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L275

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L758-L760

";

%feature("docstring")  casadi::MX::which_output() const "

[INTERNAL] 
Get the index of evaluation output - only valid when  
is_output() is true.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L278

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L762-L764

";

%feature("docstring")  casadi::MX::is_op(casadi_int op) const "

[INTERNAL] 
Is it a certain operation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L281

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L766-L768

";

%feature("docstring")  casadi::MX::is_multiplication() const "

[INTERNAL] 
Check if multiplication.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L284

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L770-L772

";

%feature("docstring")  casadi::MX::is_commutative() const "

[INTERNAL] 
Check if commutative operation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L287

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L822-L827

";

%feature("docstring")  casadi::MX::is_norm() const "

[INTERNAL] 
Check if norm.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L290

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L774-L776

";

%feature("docstring")  casadi::MX::is_valid_input() const "

[INTERNAL] 
Check if matrix can be used to define function inputs.

Valid inputs for MXFunctions are combinations of Reshape, 
concatenations 
and SymbolicMX

Extra doc: https://github.com/casadi/casadi/wiki/L_qn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L297

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L897-L899

";

%feature("docstring")  casadi::MX::n_primitives() const "

[INTERNAL] 
Get the number of primitives for MXFunction inputs/outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_qo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L302

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L901-L903

";

%feature("docstring")  casadi::MX::primitives() const "

[INTERNAL] 
Get primitives.

Extra doc: https://github.com/casadi/casadi/wiki/L_qp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L307

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L905-L911

";

%feature("docstring")  casadi::MX::split_primitives(const MX &x) const "

[INTERNAL] 
Split up an expression along symbolic primitives.

Extra doc: https://github.com/casadi/casadi/wiki/L_qq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L312

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L913-L919

";

%feature("docstring")  casadi::MX::join_primitives(const std::vector< MX > 
&v) const "

[INTERNAL] 
Join an expression along symbolic primitives.

Extra doc: https://github.com/casadi/casadi/wiki/L_qr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L317

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L921-L927

";

%feature("docstring")  casadi::MX::is_eye() const "

[INTERNAL] 
check if identity

Extra doc: https://github.com/casadi/casadi/wiki/L_qu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L339

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L937-L939

";

%feature("docstring")  casadi::MX::is_zero() const "

[INTERNAL] 
check if zero (note that false negative answers are possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_qv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L344

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L941-L947

";

%feature("docstring")  casadi::MX::is_one() const "

[INTERNAL] 
check if zero (note that false negative answers are possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_qw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L349

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L949-L951

";

%feature("docstring")  casadi::MX::is_minus_one() const "

[INTERNAL] 
check if zero (note that false negative answers are possible)

Extra doc: https://github.com/casadi/casadi/wiki/L_qx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L354

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L953-L955

";

%feature("docstring")  casadi::MX::is_transpose() const "

[INTERNAL] 
Is the expression a transpose?

Extra doc: https://github.com/casadi/casadi/wiki/L_qy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L359

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L957-L959

";

%feature("docstring")  casadi::MX::is_regular() const "

[INTERNAL] 
Checks if expression does not contain NaN or Inf.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L961-L967

";

%feature("docstring")  casadi::MX::is_binary() const "

[INTERNAL] 
Is binary operation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L365

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L786-L788

";

%feature("docstring")  casadi::MX::is_unary() const "

[INTERNAL] 
Is unary operation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L368

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L790-L792

";

%feature("docstring")  casadi::MX::op() const "

[INTERNAL] 
Get operation type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L371

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L794-L796

";

%feature("docstring")  casadi::MX::info() const "

[INTERNAL] 
Obtain information about node

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L374

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L798-L800

";

%feature("docstring")  casadi::MX::serialize(SerializingStream &s) const "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_qz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L379

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L802-L804

";

%feature("docstring")  casadi::MX::attachAssert(const MX &y, const 
std::string &fail_message="") const "

[INTERNAL] 
returns itself, but with an assertion attached

If y does not evaluate to 1, a runtime error is raised

Extra doc: https://github.com/casadi/casadi/wiki/L_rg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L851

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L699-L704

";

%feature("docstring")  casadi::MX::monitor(const std::string &comment) const
 "

[INTERNAL] 
Monitor an expression.

Returns itself, but with the side effect of printing the nonzeros 
along 
with a comment

Extra doc: https://github.com/casadi/casadi/wiki/L_rh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L858

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L706-L708

";

%feature("docstring")  casadi::MX::T() const "

[INTERNAL] 
Transpose the matrix.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L861

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L969-L971

";

%feature("docstring")  casadi::MX::mapping() const "

[INTERNAL] 
Get an IM representation of a GetNonzeros or SetNonzeros node.

Extra doc: https://github.com/casadi/casadi/wiki/L_ri

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L866

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L829-L831

";

%feature("docstring")  casadi::MX::eval_mx(const std::vector< MX > &arg, 
std::vector< MX > &res) const "

[INTERNAL] 
Evaluate the  MX node with new symbolic dependencies.

Extra doc: https://github.com/casadi/casadi/wiki/L_rn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L897

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2288-L2294

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz() const "

[INTERNAL] 
Get the number of (structural) non-zero elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_1an

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L84

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1119-L1121

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_lower() const "

[INTERNAL] 
Get the number of non-zeros in the lower triangular half.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ao

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L89

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1124-L1126

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_upper() const "

[INTERNAL] 
Get the number of non-zeros in the upper triangular half.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ap

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L94

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1129-L1131

";

%feature("docstring")  casadi::GenericMatrixCommon::nnz_diag() const "

[INTERNAL] 
Get get the number of non-zeros on the diagonal.

Extra doc: https://github.com/casadi/casadi/wiki/L_1aq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1134-L1136

";

%feature("docstring")  casadi::GenericMatrixCommon::numel() const "

[INTERNAL] 
Get the number of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ar

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L104

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1139-L1141

";

%feature("docstring")  casadi::GenericMatrixCommon::size1() const "

[INTERNAL] 
Get the first dimension (i.e. number of rows)

Extra doc: https://github.com/casadi/casadi/wiki/L_1as

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L109

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1144-L1146

";

%feature("docstring")  casadi::GenericMatrixCommon::rows() const "

[INTERNAL] 
Get the number of rows, Octave-style syntax.

Extra doc: https://github.com/casadi/casadi/wiki/L_1at

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L114

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L114-L114

";

%feature("docstring")  casadi::GenericMatrixCommon::size2() const "

[INTERNAL] 
Get the second dimension (i.e. number of columns)

Extra doc: https://github.com/casadi/casadi/wiki/L_1au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L119

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1149-L1151

";

%feature("docstring")  casadi::GenericMatrixCommon::columns() const "

[INTERNAL] 
Get the number of columns, Octave-style syntax.

Extra doc: https://github.com/casadi/casadi/wiki/L_1av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L124

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L124-L124

";

%feature("docstring")  casadi::GenericMatrixCommon::dim(bool with_nz=false) 
const "

[INTERNAL] 
Get string representation of dimensions.

The representation is e.g. \"4x5\" or \"4x5,10nz\"

Extra doc: https://github.com/casadi/casadi/wiki/L_1aw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1164-L1166

";

%feature("docstring")  casadi::GenericMatrixCommon::size() const "

[INTERNAL] 
Get the shape.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ax

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L136

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1154-L1156

";

%feature("docstring")  casadi::GenericMatrixCommon::size(casadi_int axis) 
const "

[INTERNAL] 
Get the size along a particular dimensions.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ay

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L141

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1159-L1161

";

%feature("docstring")  casadi::GenericMatrixCommon::is_empty(bool 
both=false) const "

[INTERNAL] 
Check if the sparsity is empty, i.e. if one of the dimensions is
 zero.

(or optionally both dimensions)

Extra doc: https://github.com/casadi/casadi/wiki/L_1az

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L148

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L148-L148

";

%feature("docstring")  casadi::GenericMatrixCommon::is_dense() const "

[INTERNAL] 
Check if the matrix expression is dense.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L153

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L153-L153

";

%feature("docstring")  casadi::GenericMatrixCommon::is_scalar(bool 
scalar_and_dense=false) const "

[INTERNAL] 
Check if the matrix expression is scalar.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L158

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L1169-L1171

";

%feature("docstring")  casadi::GenericMatrixCommon::is_square() const "

[INTERNAL] 
Check if the matrix expression is square.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L163

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L163-L163

";

%feature("docstring")  casadi::GenericMatrixCommon::is_vector() const "

[INTERNAL] 
Check if the matrix is a row or column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L168

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L168-L168

";

%feature("docstring")  casadi::GenericMatrixCommon::is_row() const "

[INTERNAL] 
Check if the matrix is a row vector (i.e.  size1()==1)

Extra doc: https://github.com/casadi/casadi/wiki/L_1b4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L173

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L173-L173

";

%feature("docstring")  casadi::GenericMatrixCommon::is_column() const "

[INTERNAL] 
Check if the matrix is a column vector (i.e.  size2()==1)

Extra doc: https://github.com/casadi/casadi/wiki/L_1b5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L178-L178

";

%feature("docstring")  casadi::GenericMatrixCommon::is_triu() const "

[INTERNAL] 
Check if the matrix is upper triangular.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L183

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L183-L183

";

%feature("docstring")  casadi::GenericMatrixCommon::is_tril() const "

[INTERNAL] 
Check if the matrix is lower triangular.

Extra doc: https://github.com/casadi/casadi/wiki/L_1b7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L188

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L188-L188

";

%feature("docstring")  casadi::GenericMatrixCommon::nz(const K &k) const "

[INTERNAL] 
Get vector nonzero or slice of nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L248

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L248-L252

";

%feature("docstring")  casadi::GenericMatrixCommon::nz(const K &k) "

[INTERNAL] 
Access vector nonzero or slice of nonzeros.

Extra doc: https://github.com/casadi/casadi/wiki/L_1bc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L258

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_matrix.hpp#L258-L260

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::MX::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";

%feature("docstring")  casadi::MX::bspline_dual(const std::vector< double > 
&x, const std::vector< std::vector< double > > &knots, const std::vector< 
casadi_int > &degree, const Dict &opts=Dict()) "

[INTERNAL] ";

%feature("docstring")  casadi::MX::no_grad(const MX &expr) "

[INTERNAL] 
Stop first derivatives of an expression wrt to all its symbolic
 
variables.

\\\\seealso stop_diff

Extra doc: https://github.com/casadi/casadi/wiki/L_25m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L818

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L818-L820

";

%feature("docstring") casadi::casadi_no_grad "

Stop first derivatives of an expression wrt to all its symbolic 
variables.

\\\\seealso stop_diff

Extra doc: https://github.com/casadi/casadi/wiki/L_25m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L818

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L818-L820

";

%feature("docstring")  casadi::MX::casadi_no_grad "

Stop first derivatives of an expression wrt to all its symbolic 
variables.

\\\\seealso stop_diff

Extra doc: https://github.com/casadi/casadi/wiki/L_25m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L818

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L818-L820

";

%feature("docstring")  casadi::MX::no_hess(const MX &expr) "

[INTERNAL] 
Stop second derivatives of an expression wrt to all its symbolic
 
variables.

\\\\seealso stop_diff

Extra doc: https://github.com/casadi/casadi/wiki/L_25n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L827

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L827-L829

";

%feature("docstring") casadi::casadi_no_hess "

Stop second derivatives of an expression wrt to all its symbolic 
variables.

\\\\seealso stop_diff

Extra doc: https://github.com/casadi/casadi/wiki/L_25n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L827

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L827-L829

";

%feature("docstring")  casadi::MX::casadi_no_hess "

Stop second derivatives of an expression wrt to all its symbolic 
variables.

\\\\seealso stop_diff

Extra doc: https://github.com/casadi/casadi/wiki/L_25n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L827

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L827-L829

";

%feature("docstring")  casadi::MX::difference(const std::vector< MX > &a, 
const std::vector< MX > &b) "

[INTERNAL] 
\\\\bried Return all elements of a that do not occur in b, 
preserving 
order

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.hpp#L844

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/mx.cpp#L2165-L2179

";


// File: classcasadi_1_1Newton.xml
%feature("docstring") casadi::Newton "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1NlImporter.xml
%feature("docstring") casadi::NlImporter "

[INTERNAL] 
\\\\Helper class for .nl import The .nl format is described in 

\"Writing .nl Files\" paper by David M. Gay (2005) 
Joel Andersson

C++ includes: nlp_builder.hpp
";

%feature("docstring") casadi::NlImporter::NlImporter(NlpBuilder &nlp, const 
std::string &filename, const Dict &opts) "

[INTERNAL] ";

%feature("docstring") casadi::NlImporter::~NlImporter "

[INTERNAL] ";


// File: classcasadi_1_1NlpBuilder.xml


/*
 Symbolic representation of the NLP 
*/

/*
Data members

*/
%feature("docstring") casadi::NlpBuilder "

[INTERNAL] 
A symbolic NLP representation.

Joel Andersson

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_1e2 
  



C++ includes: nlp_builder.hpp
";

%feature("docstring")  casadi::NlpBuilder::import_nl(const std::string 
&filename, const Dict &opts=Dict()) "

[INTERNAL] 
Import an .nl file.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_builder.hpp#L74

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_builder.cpp#L32-L35

";

%feature("docstring")  casadi::NlpBuilder::type_name() const "

[INTERNAL] 
Readable name of the class.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_builder.hpp#L77

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_builder.hpp#L77-L77

";

%feature("docstring")  casadi::NlpBuilder::disp(std::ostream &stream, bool 
more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_builder.hpp#L80

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_builder.cpp#L37-L45

";

%feature("docstring")  casadi::NlpBuilder::get_str(bool more=false) const "

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_builder.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_builder.hpp#L83-L87

";


// File: classcasadi_1_1Nlpsol.xml
%feature("docstring") casadi::Nlpsol "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1NonZeros.xml
%feature("docstring") casadi::NonZeros "

[INTERNAL] 
Access to a set of nonzeros.

NonZeros class for  Matrix NonZeros is the return type for operator[] of the
  Matrix class, it allows access to the value as well as changing the parent
 
object 
Joel Andersson

C++ includes: nonzeros.hpp
";

%feature("docstring") casadi::NonZeros< M, K >::NonZeros(M &mat, const K &k)
 "

[INTERNAL] 
Constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nonzeros.hpp#L43

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nonzeros.hpp#L43-L43

";

%feature("docstring") casadi::NonZeros< M, K >::NonZeros(const NonZeros< M, 
K > &y) "

[INTERNAL] 
Default copy constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nonzeros.hpp#L46

";


// File: classcasadi_1_1null__ptr__on__copy.xml
%feature("docstring") casadi::null_ptr_on_copy "

[INTERNAL] 
Pointer that gets set to null when copied.

C++ includes: optistack_internal.hpp
";

%feature("docstring") casadi::null_ptr_on_copy< T >::null_ptr_on_copy() "

[INTERNAL] ";

%feature("docstring") casadi::null_ptr_on_copy< T >::null_ptr_on_copy(const 
null_ptr_on_copy< T > &rhs) "

[INTERNAL] ";


// File: classstd_1_1numeric__limits_3_01casadi_1_1SXElem_01_4.xml
%feature("docstring") std::numeric_limits< casadi::SXElem > "

[INTERNAL] C++ includes: sx_elem.hpp
";


// File: classcasadi_1_1Opti.xml
%feature("docstring") casadi::Opti "

[INTERNAL] 
A simplified interface for NLP modeling/solving.

This class offers a view with model description facilities The API is 

guaranteed to be stable.

Example NLP:

::

    opti = casadi.Opti();
  
    x = opti.variable();
    y = opti.variable();
  
    opti.minimize(  (y-x^2)^2   );
    opti.subject_to( x^2+y^2==1 );
    opti.subject_to(     x+y>=1 );
  
    opti.solver('ipopt');
    sol = opti.solve();
  
    sol.value(x)
    sol.value(y)



Example parametric NLP:

::

    opti = casadi.Opti();
  
    x = opti.variable(2,1);
    p = opti.parameter();
  
    opti.minimize(  (p*x(2)-x(1)^2)^2   );
    opti.subject_to( 1<=sum(x)<=2 );
  
    opti.solver('ipopt');
  
    opti.set_value(p, 3);
    sol = opti.solve();
    sol.value(x)
  
    opti.set_value(p, 5);
    sol = opti.solve();
    sol.value(x)



Joris Gillis, Erik Lambrechts, Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_16

C++ includes: optistack.hpp
";

%feature("docstring")  casadi::Opti::subject_to(const MX &g) "

[INTERNAL] 
Add constraints.

Examples:

::

  * \\\\begin{itemize}
  * opti.subject_to( sqrt(x+y) >= 1);
  * opti.subject_to( sqrt(x+y) > 1)}: same as above
  * opti.subject_to( 1<= sqrt(x+y) )}: same as above
  * opti.subject_to( 5*x+y==1 )}: equality
  *
  * Python
  * opti.subject_to([x*y>=1,x==3])
  * opti.subject_to(opti.bounded(0,x,1))
  *
  * MATLAB
  * opti.subject_to({x*y>=1,x==3})
  * opti.subject_to( 0<=x<=1 )
  * 



Related functionalities:
opti.lbg,opti.g,opti.ubg represent the vector of 
flattened constraints

opti.debug.show_infeasibilities() may be used to inspect which 
constraints 
are violated

Extra doc: https://github.com/casadi/casadi/wiki/L_1b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L90-L96

";

%feature("docstring")  casadi::Opti::subject_to(const std::vector< MX > &g) 
"

[INTERNAL] 
Add constraints.

Examples:

::

  * \\\\begin{itemize}
  * opti.subject_to( sqrt(x+y) >= 1);
  * opti.subject_to( sqrt(x+y) > 1)}: same as above
  * opti.subject_to( 1<= sqrt(x+y) )}: same as above
  * opti.subject_to( 5*x+y==1 )}: equality
  *
  * Python
  * opti.subject_to([x*y>=1,x==3])
  * opti.subject_to(opti.bounded(0,x,1))
  *
  * MATLAB
  * opti.subject_to({x*y>=1,x==3})
  * opti.subject_to( 0<=x<=1 )
  * 



Related functionalities:
opti.lbg,opti.g,opti.ubg represent the vector of 
flattened constraints

opti.debug.show_infeasibilities() may be used to inspect which 
constraints 
are violated

Extra doc: https://github.com/casadi/casadi/wiki/L_1b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L162

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L98-L100

";

%feature("docstring")  casadi::Opti::subject_to() "

[INTERNAL] 
Clear constraints.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L166

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L102-L108

";

%feature("docstring")  casadi::Opti::set_initial(const MX &x, const DM &v) "

[INTERNAL] 
Set initial guess for decision variables

::

  * opti.set_initial(x, 2)
  * opti.set_initial(10*x(1), 2)
  * 



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L121-L127

";

%feature("docstring")  casadi::Opti::set_initial(const std::vector< MX > 
&assignments) "

[INTERNAL] 
Set initial guess for decision variables

::

  * opti.set_initial(x, 2)
  * opti.set_initial(10*x(1), 2)
  * 



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L190

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L128-L134

";

%feature("docstring")  casadi::Opti::set_value(const MX &x, const DM &v) "

[INTERNAL] 
Set value of parameter.

Each parameter must be given a value before 'solve' can be called

Extra doc: https://github.com/casadi/casadi/wiki/L_1d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L199

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L137-L143

";

%feature("docstring")  casadi::Opti::set_value(const std::vector< MX > 
&assignments) "

[INTERNAL] 
Set value of parameter.

Each parameter must be given a value before 'solve' can be called

Extra doc: https://github.com/casadi/casadi/wiki/L_1d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L145-L151

";

%feature("docstring")  casadi::Opti::value(const MX &x, const std::vector< 
MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L223

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L169-L175

";

%feature("docstring")  casadi::Opti::value(const DM &x, const std::vector< 
MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L224

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L178-L184

";

%feature("docstring")  casadi::Opti::value(const SX &x, const std::vector< 
MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L186-L192

";

%feature("docstring")  casadi::Opti::to_function(const std::string &name, 
const std::vector< MX > &args, const std::vector< MX > &res, const Dict 
&opts=Dict()) "

[INTERNAL] 
Create a CasADi  Function from the  Opti solver.

Parameters:
-----------

name: 
Name of the resulting CasADi  Function

args: 
List of parameters and decision/dual variables (which can be given an
 
initial guess) with the resulting  Function

res: 
List of expressions that will get evaluated at the optimal solution

opts: 
Standard CasADi Funcion options

Extra doc: https://github.com/casadi/casadi/wiki/L_1j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L335-L339

";

%feature("docstring")  casadi::Opti::to_function(const std::string &name, 
const std::vector< MX > &args, const std::vector< MX > &res, const 
std::vector< std::string > &name_in, const std::vector< std::string > 
&name_out, const Dict &opts=Dict()) "

[INTERNAL] 
Create a CasADi  Function from the  Opti solver.

Parameters:
-----------

name: 
Name of the resulting CasADi  Function

args: 
List of parameters and decision/dual variables (which can be given an
 
initial guess) with the resulting  Function

res: 
List of expressions that will get evaluated at the optimal solution

opts: 
Standard CasADi Funcion options

Extra doc: https://github.com/casadi/casadi/wiki/L_1j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L330

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L323-L333

";

%feature("docstring")  casadi::Opti::to_function(const std::string &name, 
const std::map< std::string, MX > &dict, const std::vector< std::string > 
&name_in, const std::vector< std::string > &name_out, const Dict 
&opts=Dict()) "

[INTERNAL] 
Create a CasADi  Function from the  Opti solver.

Parameters:
-----------

name: 
Name of the resulting CasADi  Function

args: 
List of parameters and decision/dual variables (which can be given an
 
initial guess) with the resulting  Function

res: 
List of expressions that will get evaluated at the optimal solution

opts: 
Standard CasADi Funcion options

Extra doc: https://github.com/casadi/casadi/wiki/L_1j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L336

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L341-L361

";

%feature("docstring")  casadi::Opti::callback_class(OptiCallback *callback) 
"

[INTERNAL] 
Helper methods for callback()

Do not use directly.

Extra doc: https://github.com/casadi/casadi/wiki/L_1p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L408

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L363-L369

";

%feature("docstring")  casadi::Opti::callback_class() "

[INTERNAL] 
Helper methods for callback()

Do not use directly.

Extra doc: https://github.com/casadi/casadi/wiki/L_1p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L409

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L371-L377

";

%feature("docstring") casadi::Opti::Opti(const std::string 
&problem_type="nlp") "

[INTERNAL] 
Create  Opti Context.

Parameters:
-----------

problem_type: 
of optimization 'nlp' or 'conic' (default nlp)

Extra doc: https://github.com/casadi/casadi/wiki/L_17

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L47-L49

";

%feature("docstring") casadi::Opti::Opti(const Opti &x) "

[INTERNAL] ";

%feature("docstring") casadi::Opti::Opti(OptiNode *node) "

[INTERNAL] ";

%feature("docstring")  casadi::Opti::variable(casadi_int n=1, casadi_int 
m=1, const std::string &attribute="full") "

[INTERNAL] 
Create a decision variable (symbol)

The order of creation matters. The order will be reflected in the 

optimization problem. It is not required for decision variables to 
actualy 
appear in the optimization problem.

Parameters:
-----------

n: 
number of rows (default 1)

m: 
number of columnss (default 1)

attribute: 
'full' (default) or 'symmetric'

Extra doc: https://github.com/casadi/casadi/wiki/L_18

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L112

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L51-L57

";

%feature("docstring")  casadi::Opti::parameter(casadi_int n=1, casadi_int 
m=1, const std::string &attribute="full") "

[INTERNAL] 
Create a parameter (symbol); fixed during optimization.

The order of creation does not matter. It is not required for 
parameter to 
actualy appear in the optimization problem. Parameters 
that do appear, must
 be given a value before the problem can be 
solved.

Parameters:
-----------

n: 
number of rows (default 1)

m: 
number of columnss (default 1)

attribute: 
'full' (default) or 'symmetric'

Extra doc: https://github.com/casadi/casadi/wiki/L_19

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L125

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L74-L80

";

%feature("docstring")  casadi::Opti::minimize(const MX &f) "

[INTERNAL] 
Set objective.

Objective must be a scalar. Default objective: 0 When method is called
 
multiple times, the last call takes effect

Extra doc: https://github.com/casadi/casadi/wiki/L_1a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L133

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L82-L88

";

%feature("docstring")  casadi::Opti::solver(const std::string &solver, const
 Dict &plugin_options=Dict(), const Dict &solver_options=Dict()) "

[INTERNAL] 
Set a solver.

Parameters:
-----------

solver: 
any of the nlpsol plugins can be used here In practice, not all 
nlpsol
 plugins may be supported yet

options: 
passed on to nlpsol plugin No stability can be guaranteed about 
this 
part of the API

options: 
to be passed to nlpsol solver No stability can be guaranteed about
 
this part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L111-L119

";

%feature("docstring") casadi::casadi_solver "

Set a solver.

Parameters:
-----------

solver: 
any of the nlpsol plugins can be used here In practice, not all 
nlpsol
 plugins may be supported yet

options: 
passed on to nlpsol plugin No stability can be guaranteed about 
this 
part of the API

options: 
to be passed to nlpsol solver No stability can be guaranteed about
 
this part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L111-L119

";

%feature("docstring")  casadi::Opti::casadi_solver "

Set a solver.

Parameters:
-----------

solver: 
any of the nlpsol plugins can be used here In practice, not all 
nlpsol
 plugins may be supported yet

options: 
passed on to nlpsol plugin No stability can be guaranteed about 
this 
part of the API

options: 
to be passed to nlpsol solver No stability can be guaranteed about
 
this part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L111-L119

";

%feature("docstring")  casadi::Opti::solve() "

[INTERNAL] 
Crunch the numbers; solve the problem.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L204

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L153-L159

";

%feature("docstring") casadi::casadi_solve "

Crunch the numbers; solve the problem.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L204

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L153-L159

";

%feature("docstring")  casadi::Opti::casadi_solve "

Crunch the numbers; solve the problem.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L204

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L153-L159

";

%feature("docstring")  casadi::Opti::solve_limited() "

[INTERNAL] 
Crunch the numbers; solve the problem.

Allows the solver to return without error when an iteration or time 
limit 
is reached

Extra doc: https://github.com/casadi/casadi/wiki/L_1e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L212

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L161-L167

";

%feature("docstring")  casadi::Opti::stats() const "

[INTERNAL] 
Get statistics.

nlpsol stats are passed as-is. No stability can be guaranteed about 
this 
part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L234

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L194-L200

";

%feature("docstring")  casadi::Opti::return_status() const "

[INTERNAL] 
Get return status of solver.



::

     passed as-is from nlpsol
  

No stability can be guaranteed about this part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L242

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L202-L208

";

%feature("docstring")  casadi::Opti::initial() const "

[INTERNAL] 
get assignment expressions for initial values

Extra doc: https://github.com/casadi/casadi/wiki/L_266

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L247

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L210-L216

";

%feature("docstring")  casadi::Opti::value_variables() const "

[INTERNAL] 
get assignment expressions for latest values

Extra doc: https://github.com/casadi/casadi/wiki/L_267

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L252

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L218-L224

";

%feature("docstring")  casadi::Opti::value_parameters() const "

[INTERNAL] ";

%feature("docstring")  casadi::Opti::dual(const MX &m) const "

[INTERNAL] 
get the dual variable

m must be a constraint expression. The returned value is still a 
symbolic 
expression. Use  value on it to obtain the numerical value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L262

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L234-L240

";

%feature("docstring")  casadi::Opti::nx() const "

[INTERNAL] 
Number of (scalarised) decision variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_268

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L267

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L242-L248

";

%feature("docstring")  casadi::Opti::np() const "

[INTERNAL] 
Number of (scalarised) parameters.

Extra doc: https://github.com/casadi/casadi/wiki/L_269

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L272

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L250-L256

";

%feature("docstring")  casadi::Opti::ng() const "

[INTERNAL] 
Number of (scalarised) constraints.

Extra doc: https://github.com/casadi/casadi/wiki/L_26a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L277

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L258-L264

";

%feature("docstring")  casadi::Opti::x() const "

[INTERNAL] 
Get all (scalarised) decision variables as a symbolic column 
vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_26b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L282

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L266-L272

";

%feature("docstring")  casadi::Opti::p() const "

[INTERNAL] 
Get all (scalarised) parameters as a symbolic column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_26c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L287

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L274-L280

";

%feature("docstring")  casadi::Opti::g() const "

[INTERNAL] 
Get all (scalarised) constraint expressions as a column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_26d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L292

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L282-L288

";

%feature("docstring")  casadi::Opti::f() const "

[INTERNAL] 
Get objective expression.

Extra doc: https://github.com/casadi/casadi/wiki/L_26e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L297

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L290-L296

";

%feature("docstring")  casadi::Opti::lbg() const "

[INTERNAL] 
Get all (scalarised) bounds on constraints as a column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_26f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L302

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L298-L304

";

%feature("docstring")  casadi::Opti::ubg() const "

[INTERNAL] ";

%feature("docstring")  casadi::Opti::lam_g() const "

[INTERNAL] 
Get all (scalarised) dual variables as a symbolic column vector.

Useful for obtaining the Lagrange Hessian:

::

  * sol.value(hessian(opti.f+opti.lam_g'*opti.g,opti.x)) % MATLAB
  * sol.value(hessian(opti.f+dot(opti.lam_g,opti.g),opti.x)[0]) # Python
  * 



Extra doc: https://github.com/casadi/casadi/wiki/L_1i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L315-L321

";

%feature("docstring")  casadi::Opti::debug() const "

[INTERNAL] 
Get a copy with advanced functionality.

You get access to more methods, but you have no guarantees about API 

stability

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L733-L735

";

%feature("docstring")  casadi::Opti::advanced() const "

[INTERNAL] 
Get a copy with advanced functionality.

You get access to more methods, but you have no guarantees about API 

stability

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L372

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L736-L738

";

%feature("docstring")  casadi::Opti::copy() const "

[INTERNAL] 
Get a copy of the.

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L739-L741

";

%feature("docstring") casadi::casadi_copy "

Get a copy of the.

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L739-L741

";

%feature("docstring")  casadi::Opti::casadi_copy "

Get a copy of the.

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L739-L741

";

%feature("docstring")  casadi::Opti::update_user_dict(const MX &m, const 
Dict &meta) "

[INTERNAL] 
add user data

Add arbitrary data in the form of a dictionary to symbols or 
constraints

Extra doc: https://github.com/casadi/casadi/wiki/L_1o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L388

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L379-L385

";

%feature("docstring")  casadi::Opti::update_user_dict(const std::vector< MX 
> &m, const Dict &meta) "

[INTERNAL] ";

%feature("docstring")  casadi::Opti::user_dict(const MX &m) const "

[INTERNAL] 
Get user data.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L391

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L392-L398

";

%feature("docstring")  casadi::Opti::type_name() const "

[INTERNAL] 
Readable name of the class.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L394

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L394-L394

";

%feature("docstring")  casadi::Opti::disp(std::ostream &stream, bool 
more=false) const "

[INTERNAL] 
Print representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L397

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L636-L656

";

%feature("docstring")  casadi::Opti::get_str(bool more=false) const "

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L400

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L658-L662

";

%feature("docstring") casadi::Opti::~Opti "

[INTERNAL] 
Destructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_1q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L418

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L418-L418

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::Opti::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1OptiAdvanced.xml
%feature("docstring") casadi::OptiAdvanced "

[INTERNAL] C++ includes: optistack.hpp
";

%feature("docstring")  casadi::OptiAdvanced::symvar() const "

[INTERNAL] 
Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L523

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L416-L422

";

%feature("docstring") casadi::casadi_symvar "

Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L523

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L416-L422

";

%feature("docstring")  casadi::OptiAdvanced::casadi_symvar "

Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L523

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L416-L422

";

%feature("docstring")  casadi::OptiAdvanced::symvar(const MX &expr) const "

[INTERNAL] 
Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L524

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L424-L430

";

%feature("docstring") casadi::casadi_symvar "

Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L524

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L424-L430

";

%feature("docstring")  casadi::OptiAdvanced::casadi_symvar "

Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L524

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L424-L430

";

%feature("docstring")  casadi::OptiAdvanced::symvar(const MX &expr, 
VariableType type) const "

[INTERNAL] 
Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L525

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L432-L438

";

%feature("docstring") casadi::casadi_symvar "

Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L525

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L432-L438

";

%feature("docstring")  casadi::OptiAdvanced::casadi_symvar "

Get symbols present in expression.

Returned vector is ordered according to the order of  variable()/parameter()
 calls used to create the variables

Extra doc: https://github.com/casadi/casadi/wiki/L_1u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L525

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L432-L438

";

%feature("docstring")  casadi::Opti::subject_to(const MX &g) "

[INTERNAL] 
Add constraints.

Examples:

::

  * \\\\begin{itemize}
  * opti.subject_to( sqrt(x+y) >= 1);
  * opti.subject_to( sqrt(x+y) > 1)}: same as above
  * opti.subject_to( 1<= sqrt(x+y) )}: same as above
  * opti.subject_to( 5*x+y==1 )}: equality
  *
  * Python
  * opti.subject_to([x*y>=1,x==3])
  * opti.subject_to(opti.bounded(0,x,1))
  *
  * MATLAB
  * opti.subject_to({x*y>=1,x==3})
  * opti.subject_to( 0<=x<=1 )
  * 



Related functionalities:
opti.lbg,opti.g,opti.ubg represent the vector of 
flattened constraints

opti.debug.show_infeasibilities() may be used to inspect which 
constraints 
are violated

Extra doc: https://github.com/casadi/casadi/wiki/L_1b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L90-L96

";

%feature("docstring")  casadi::Opti::subject_to(const std::vector< MX > &g) 
"

[INTERNAL] 
Add constraints.

Examples:

::

  * \\\\begin{itemize}
  * opti.subject_to( sqrt(x+y) >= 1);
  * opti.subject_to( sqrt(x+y) > 1)}: same as above
  * opti.subject_to( 1<= sqrt(x+y) )}: same as above
  * opti.subject_to( 5*x+y==1 )}: equality
  *
  * Python
  * opti.subject_to([x*y>=1,x==3])
  * opti.subject_to(opti.bounded(0,x,1))
  *
  * MATLAB
  * opti.subject_to({x*y>=1,x==3})
  * opti.subject_to( 0<=x<=1 )
  * 



Related functionalities:
opti.lbg,opti.g,opti.ubg represent the vector of 
flattened constraints

opti.debug.show_infeasibilities() may be used to inspect which 
constraints 
are violated

Extra doc: https://github.com/casadi/casadi/wiki/L_1b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L162

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L98-L100

";

%feature("docstring")  casadi::Opti::subject_to() "

[INTERNAL] 
Clear constraints.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L166

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L102-L108

";

%feature("docstring")  casadi::Opti::set_initial(const MX &x, const DM &v) "

[INTERNAL] 
Set initial guess for decision variables

::

  * opti.set_initial(x, 2)
  * opti.set_initial(10*x(1), 2)
  * 



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L121-L127

";

%feature("docstring")  casadi::Opti::set_initial(const std::vector< MX > 
&assignments) "

[INTERNAL] 
Set initial guess for decision variables

::

  * opti.set_initial(x, 2)
  * opti.set_initial(10*x(1), 2)
  * 



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L190

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L128-L134

";

%feature("docstring")  casadi::Opti::set_value(const MX &x, const DM &v) "

[INTERNAL] 
Set value of parameter.

Each parameter must be given a value before 'solve' can be called

Extra doc: https://github.com/casadi/casadi/wiki/L_1d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L199

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L137-L143

";

%feature("docstring")  casadi::Opti::set_value(const std::vector< MX > 
&assignments) "

[INTERNAL] 
Set value of parameter.

Each parameter must be given a value before 'solve' can be called

Extra doc: https://github.com/casadi/casadi/wiki/L_1d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L145-L151

";

%feature("docstring")  casadi::Opti::value(const MX &x, const std::vector< 
MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L223

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L169-L175

";

%feature("docstring")  casadi::Opti::value(const DM &x, const std::vector< 
MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L224

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L178-L184

";

%feature("docstring")  casadi::Opti::value(const SX &x, const std::vector< 
MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L186-L192

";

%feature("docstring")  casadi::Opti::to_function(const std::string &name, 
const std::vector< MX > &args, const std::vector< MX > &res, const Dict 
&opts=Dict()) "

[INTERNAL] 
Create a CasADi  Function from the  Opti solver.

Parameters:
-----------

name: 
Name of the resulting CasADi  Function

args: 
List of parameters and decision/dual variables (which can be given an
 
initial guess) with the resulting  Function

res: 
List of expressions that will get evaluated at the optimal solution

opts: 
Standard CasADi Funcion options

Extra doc: https://github.com/casadi/casadi/wiki/L_1j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L335-L339

";

%feature("docstring")  casadi::Opti::to_function(const std::string &name, 
const std::vector< MX > &args, const std::vector< MX > &res, const 
std::vector< std::string > &name_in, const std::vector< std::string > 
&name_out, const Dict &opts=Dict()) "

[INTERNAL] 
Create a CasADi  Function from the  Opti solver.

Parameters:
-----------

name: 
Name of the resulting CasADi  Function

args: 
List of parameters and decision/dual variables (which can be given an
 
initial guess) with the resulting  Function

res: 
List of expressions that will get evaluated at the optimal solution

opts: 
Standard CasADi Funcion options

Extra doc: https://github.com/casadi/casadi/wiki/L_1j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L330

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L323-L333

";

%feature("docstring")  casadi::Opti::to_function(const std::string &name, 
const std::map< std::string, MX > &dict, const std::vector< std::string > 
&name_in, const std::vector< std::string > &name_out, const Dict 
&opts=Dict()) "

[INTERNAL] 
Create a CasADi  Function from the  Opti solver.

Parameters:
-----------

name: 
Name of the resulting CasADi  Function

args: 
List of parameters and decision/dual variables (which can be given an
 
initial guess) with the resulting  Function

res: 
List of expressions that will get evaluated at the optimal solution

opts: 
Standard CasADi Funcion options

Extra doc: https://github.com/casadi/casadi/wiki/L_1j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L336

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L341-L361

";

%feature("docstring")  casadi::Opti::callback_class(OptiCallback *callback) 
"

[INTERNAL] 
Helper methods for callback()

Do not use directly.

Extra doc: https://github.com/casadi/casadi/wiki/L_1p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L408

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L363-L369

";

%feature("docstring")  casadi::Opti::callback_class() "

[INTERNAL] 
Helper methods for callback()

Do not use directly.

Extra doc: https://github.com/casadi/casadi/wiki/L_1p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L409

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L371-L377

";

%feature("docstring") casadi::OptiAdvanced::OptiAdvanced(const Opti &x) "

[INTERNAL] ";

%feature("docstring") casadi::OptiAdvanced::~OptiAdvanced "

[INTERNAL] 
Destructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_1t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L507

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L507-L507

";

%feature("docstring")  casadi::OptiAdvanced::casadi_solver() const "

[INTERNAL] 
Get the underlying CasADi solver of the  Opti stack.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L511

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L400-L406

";

%feature("docstring")  casadi::OptiAdvanced::is_parametric(const MX &expr) 
const "

[INTERNAL] 
return true if expression is only dependant on  Opti parameters,
 not variables

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L514

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L408-L414

";

%feature("docstring")  casadi::OptiAdvanced::canon_expr(const MX &expr) 
const "

[INTERNAL] 
Interpret an expression (for internal use only)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L529

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L440-L446

";

%feature("docstring")  casadi::OptiAdvanced::get_meta(const MX &m) const "

[INTERNAL] 
Get meta-data of symbol (for internal use only)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L532

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L448-L454

";

%feature("docstring")  casadi::OptiAdvanced::get_meta_con(const MX &m) const
 "

[INTERNAL] 
Get meta-data of symbol (for internal use only)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L535

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L456-L462

";

%feature("docstring")  casadi::OptiAdvanced::set_meta(const MX &m, const 
MetaVar &meta) "

[INTERNAL] 
Set meta-data of an expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L538

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L464-L470

";

%feature("docstring")  casadi::OptiAdvanced::set_meta_con(const MX &m, const
 MetaCon &meta) "

[INTERNAL] 
Set meta-data of an expression.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L541

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L472-L478

";

%feature("docstring")  casadi::OptiAdvanced::assert_active_symbol(const MX 
&m) const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::active_symvar(VariableType 
type) const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::active_values(VariableType 
type) const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::x_lookup(casadi_index i) const 
"

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::g_lookup(casadi_index i) const 
"

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::x_describe(casadi_index i) 
const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::g_describe(casadi_index i) 
const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::describe(const MX &x, 
casadi_index indent=0) const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::show_infeasibilities(double 
tol=0) const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::solve_prepare() "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::solve_actual(const DMDict 
&args) "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::arg() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::res(const DMDict &res) "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::res() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::constraints() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::objective() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::baked_copy() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::assert_empty() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::bake() "

[INTERNAL] 
Fix the structure of the optimization problem.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L572

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L664-L670

";

%feature("docstring")  casadi::OptiAdvanced::mark_problem_dirty(bool 
flag=true) "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::problem_dirty() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::mark_solver_dirty(bool 
flag=true) "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::solver_dirty() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::mark_solved(bool flag=true) "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::solved() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::assert_solved() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::assert_baked() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiAdvanced::instance_number() const "

[INTERNAL] ";

%feature("docstring")  casadi::Opti::variable(casadi_int n=1, casadi_int 
m=1, const std::string &attribute="full") "

[INTERNAL] 
Create a decision variable (symbol)

The order of creation matters. The order will be reflected in the 

optimization problem. It is not required for decision variables to 
actualy 
appear in the optimization problem.

Parameters:
-----------

n: 
number of rows (default 1)

m: 
number of columnss (default 1)

attribute: 
'full' (default) or 'symmetric'

Extra doc: https://github.com/casadi/casadi/wiki/L_18

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L112

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L51-L57

";

%feature("docstring")  casadi::Opti::parameter(casadi_int n=1, casadi_int 
m=1, const std::string &attribute="full") "

[INTERNAL] 
Create a parameter (symbol); fixed during optimization.

The order of creation does not matter. It is not required for 
parameter to 
actualy appear in the optimization problem. Parameters 
that do appear, must
 be given a value before the problem can be 
solved.

Parameters:
-----------

n: 
number of rows (default 1)

m: 
number of columnss (default 1)

attribute: 
'full' (default) or 'symmetric'

Extra doc: https://github.com/casadi/casadi/wiki/L_19

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L125

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L74-L80

";

%feature("docstring")  casadi::Opti::minimize(const MX &f) "

[INTERNAL] 
Set objective.

Objective must be a scalar. Default objective: 0 When method is called
 
multiple times, the last call takes effect

Extra doc: https://github.com/casadi/casadi/wiki/L_1a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L133

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L82-L88

";

%feature("docstring")  casadi::Opti::solver(const std::string &solver, const
 Dict &plugin_options=Dict(), const Dict &solver_options=Dict()) "

[INTERNAL] 
Set a solver.

Parameters:
-----------

solver: 
any of the nlpsol plugins can be used here In practice, not all 
nlpsol
 plugins may be supported yet

options: 
passed on to nlpsol plugin No stability can be guaranteed about 
this 
part of the API

options: 
to be passed to nlpsol solver No stability can be guaranteed about
 
this part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L111-L119

";

%feature("docstring") casadi::casadi_solver "

Set a solver.

Parameters:
-----------

solver: 
any of the nlpsol plugins can be used here In practice, not all 
nlpsol
 plugins may be supported yet

options: 
passed on to nlpsol plugin No stability can be guaranteed about 
this 
part of the API

options: 
to be passed to nlpsol solver No stability can be guaranteed about
 
this part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L111-L119

";

%feature("docstring")  casadi::Opti::casadi_solver "

Set a solver.

Parameters:
-----------

solver: 
any of the nlpsol plugins can be used here In practice, not all 
nlpsol
 plugins may be supported yet

options: 
passed on to nlpsol plugin No stability can be guaranteed about 
this 
part of the API

options: 
to be passed to nlpsol solver No stability can be guaranteed about
 
this part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L178

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L111-L119

";

%feature("docstring")  casadi::Opti::solve() "

[INTERNAL] 
Crunch the numbers; solve the problem.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L204

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L153-L159

";

%feature("docstring") casadi::casadi_solve "

Crunch the numbers; solve the problem.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L204

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L153-L159

";

%feature("docstring")  casadi::Opti::casadi_solve "

Crunch the numbers; solve the problem.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L204

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L153-L159

";

%feature("docstring")  casadi::Opti::solve_limited() "

[INTERNAL] 
Crunch the numbers; solve the problem.

Allows the solver to return without error when an iteration or time 
limit 
is reached

Extra doc: https://github.com/casadi/casadi/wiki/L_1e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L212

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L161-L167

";

%feature("docstring")  casadi::Opti::stats() const "

[INTERNAL] 
Get statistics.

nlpsol stats are passed as-is. No stability can be guaranteed about 
this 
part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L234

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L194-L200

";

%feature("docstring")  casadi::Opti::return_status() const "

[INTERNAL] 
Get return status of solver.



::

     passed as-is from nlpsol
  

No stability can be guaranteed about this part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L242

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L202-L208

";

%feature("docstring")  casadi::Opti::initial() const "

[INTERNAL] 
get assignment expressions for initial values

Extra doc: https://github.com/casadi/casadi/wiki/L_266

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L247

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L210-L216

";

%feature("docstring")  casadi::Opti::value_variables() const "

[INTERNAL] 
get assignment expressions for latest values

Extra doc: https://github.com/casadi/casadi/wiki/L_267

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L252

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L218-L224

";

%feature("docstring")  casadi::Opti::value_parameters() const "

[INTERNAL] ";

%feature("docstring")  casadi::Opti::dual(const MX &m) const "

[INTERNAL] 
get the dual variable

m must be a constraint expression. The returned value is still a 
symbolic 
expression. Use  value on it to obtain the numerical value.

Extra doc: https://github.com/casadi/casadi/wiki/L_1h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L262

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L234-L240

";

%feature("docstring")  casadi::Opti::nx() const "

[INTERNAL] 
Number of (scalarised) decision variables.

Extra doc: https://github.com/casadi/casadi/wiki/L_268

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L267

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L242-L248

";

%feature("docstring")  casadi::Opti::np() const "

[INTERNAL] 
Number of (scalarised) parameters.

Extra doc: https://github.com/casadi/casadi/wiki/L_269

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L272

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L250-L256

";

%feature("docstring")  casadi::Opti::ng() const "

[INTERNAL] 
Number of (scalarised) constraints.

Extra doc: https://github.com/casadi/casadi/wiki/L_26a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L277

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L258-L264

";

%feature("docstring")  casadi::Opti::x() const "

[INTERNAL] 
Get all (scalarised) decision variables as a symbolic column 
vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_26b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L282

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L266-L272

";

%feature("docstring")  casadi::Opti::p() const "

[INTERNAL] 
Get all (scalarised) parameters as a symbolic column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_26c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L287

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L274-L280

";

%feature("docstring")  casadi::Opti::g() const "

[INTERNAL] 
Get all (scalarised) constraint expressions as a column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_26d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L292

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L282-L288

";

%feature("docstring")  casadi::Opti::f() const "

[INTERNAL] 
Get objective expression.

Extra doc: https://github.com/casadi/casadi/wiki/L_26e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L297

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L290-L296

";

%feature("docstring")  casadi::Opti::lbg() const "

[INTERNAL] 
Get all (scalarised) bounds on constraints as a column vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_26f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L302

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L298-L304

";

%feature("docstring")  casadi::Opti::ubg() const "

[INTERNAL] ";

%feature("docstring")  casadi::Opti::lam_g() const "

[INTERNAL] 
Get all (scalarised) dual variables as a symbolic column vector.

Useful for obtaining the Lagrange Hessian:

::

  * sol.value(hessian(opti.f+opti.lam_g'*opti.g,opti.x)) % MATLAB
  * sol.value(hessian(opti.f+dot(opti.lam_g,opti.g),opti.x)[0]) # Python
  * 



Extra doc: https://github.com/casadi/casadi/wiki/L_1i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L315-L321

";

%feature("docstring")  casadi::Opti::debug() const "

[INTERNAL] 
Get a copy with advanced functionality.

You get access to more methods, but you have no guarantees about API 

stability

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L733-L735

";

%feature("docstring")  casadi::Opti::advanced() const "

[INTERNAL] 
Get a copy with advanced functionality.

You get access to more methods, but you have no guarantees about API 

stability

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L372

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L736-L738

";

%feature("docstring")  casadi::Opti::copy() const "

[INTERNAL] 
Get a copy of the.

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L739-L741

";

%feature("docstring") casadi::casadi_copy "

Get a copy of the.

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L739-L741

";

%feature("docstring")  casadi::Opti::casadi_copy "

Get a copy of the.

The copy is effectively a deep copy: Updating the state of the copy 
does 
not update the original.

Extra doc: https://github.com/casadi/casadi/wiki/L_1n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L380

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L739-L741

";

%feature("docstring")  casadi::Opti::update_user_dict(const MX &m, const 
Dict &meta) "

[INTERNAL] 
add user data

Add arbitrary data in the form of a dictionary to symbols or 
constraints

Extra doc: https://github.com/casadi/casadi/wiki/L_1o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L388

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L379-L385

";

%feature("docstring")  casadi::Opti::update_user_dict(const std::vector< MX 
> &m, const Dict &meta) "

[INTERNAL] ";

%feature("docstring")  casadi::Opti::user_dict(const MX &m) const "

[INTERNAL] 
Get user data.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L391

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L392-L398

";

%feature("docstring")  casadi::Opti::type_name() const "

[INTERNAL] 
Readable name of the class.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L394

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L394-L394

";

%feature("docstring")  casadi::Opti::disp(std::ostream &stream, bool 
more=false) const "

[INTERNAL] 
Print representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L397

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L636-L656

";

%feature("docstring")  casadi::Opti::get_str(bool more=false) const "

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L400

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L658-L662

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::OptiAdvanced::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1OptiCallback.xml
%feature("docstring") casadi::OptiCallback "

[INTERNAL] C++ includes: optistack.hpp
";

%feature("docstring") casadi::OptiCallback::OptiCallback() "

[INTERNAL] ";

%feature("docstring") casadi::OptiCallback::OptiCallback(const OptiCallback 
&obj) "

[INTERNAL] ";

%feature("docstring")  casadi::OptiCallback::call(casadi_int i) "

[INTERNAL] ";

%feature("docstring") casadi::OptiCallback::~OptiCallback "

[INTERNAL] ";


// File: classcasadi_1_1OptiSol.xml
%feature("docstring") casadi::OptiSol "

[INTERNAL] 
A simplified interface for NLP modeling/solving.

This class offers a view with solution retrieval facilities The API is
 
guaranteed to be stable.

Joris Gillis, Erik Lambrechts

Extra doc: https://github.com/casadi/casadi/wiki/L_1v

C++ includes: optistack.hpp
";

%feature("docstring")  casadi::OptiSol::value(const MX &x, const 
std::vector< MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L620

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L754-L756

";

%feature("docstring")  casadi::OptiSol::value(const DM &x, const 
std::vector< MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L621

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L757-L759

";

%feature("docstring")  casadi::OptiSol::value(const SX &x, const 
std::vector< MX > &values=std::vector< MX >()) const "

[INTERNAL] 
Obtain value of expression at the current value

In regular mode, teh current value is the converged solution In debug 
mode,
 the value can be non-converged

Parameters:
-----------

values: 
Optional assignment expressions (e.g. x==3) to overrule the current
 
value

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L622

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L760-L762

";

%feature("docstring")  casadi::OptiSol::type_name() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiSol::disp(std::ostream &stream, bool 
more=false) const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiSol::get_str(bool more=false) const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiSol::value_variables() const "

[INTERNAL] 
get assignment expressions for the optimal solution

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L626

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L764-L766

";

%feature("docstring")  casadi::OptiSol::value_parameters() const "

[INTERNAL] ";

%feature("docstring")  casadi::OptiSol::stats() const "

[INTERNAL] 
Get statistics.

nlpsol stats are passed as-is. No stability can be guaranteed about 
this 
part of the API

Extra doc: https://github.com/casadi/casadi/wiki/L_1w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.hpp#L635

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/optistack.cpp#L772-L774

";

%feature("docstring")  casadi::OptiSol::opti() const "

[INTERNAL] ";


// File: classcasadi_1_1Output.xml


// File: classcasadi_1_1Polynomial.xml
%feature("docstring") casadi::Polynomial "

[INTERNAL] 
Helper class for differentiating and integrating polynomials.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_8y

C++ includes: polynomial.hpp
";

%feature("docstring") casadi::Polynomial::Polynomial(double scalar=1) "

[INTERNAL] 
Construct a constant polynomial.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L43

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L32-L33

";

%feature("docstring") casadi::Polynomial::Polynomial(double p0, double p1) "

[INTERNAL] 
Construct a linear polynomial.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L46

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L35-L39

";

%feature("docstring") casadi::Polynomial::Polynomial(double p0, double p1, 
double p2) "

[INTERNAL] 
Construct a quadratic polynomial.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L49

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L41-L46

";

%feature("docstring") casadi::Polynomial::Polynomial(double p0, double p1, 
double p2, double p3) "

[INTERNAL] 
Construct a cubic polynomial.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L52

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L48-L54

";

%feature("docstring") casadi::Polynomial::Polynomial(const std::vector< T > 
&coeff) "

[INTERNAL] 
Construct from a vector of polynomial coefficients.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L56

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L56-L56

";

%feature("docstring")  casadi::Polynomial::coeff() const "

[INTERNAL] 
Coefficients of the polynomial.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L71

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L71-L71

";

%feature("docstring")  casadi::Polynomial::degree() const "

[INTERNAL] 
Degree of the polynomial.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L74

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L72-L74

";

%feature("docstring")  casadi::Polynomial::scalar() const "

[INTERNAL] 
Get scalar value (error if  degree()!=0)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L77

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L76-L79

";

%feature("docstring")  casadi::Polynomial::derivative() const "

[INTERNAL] 
Create a new polynomial for the derivative.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L80

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L141-L147

";

%feature("docstring")  casadi::Polynomial::anti_derivative() const "

[INTERNAL] 
Create a new polynomial for the anti-derivative (primitive 
function)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L149-L156

";

%feature("docstring")  casadi::Polynomial::trim() "

[INTERNAL] 
Remove excess zeros.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L86

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L133-L139

";

%feature("docstring")  casadi::Polynomial::type_name() const "

[INTERNAL] 
Readable name of the class.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L89

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L89-L89

";

%feature("docstring")  casadi::Polynomial::disp(std::ostream &stream, bool 
more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.hpp#L92

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/polynomial.cpp#L56-L70

";


// File: classcasadi_1_1Printable.xml
%feature("docstring") casadi::Printable "

[INTERNAL] 
Base class for objects that have a natural string 
representation.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_7i

C++ includes: printable.hpp
";

%feature("docstring")  casadi::Printable::repr(const Derived &obj) "

[INTERNAL] 
Get string representation with type information.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/printable.hpp#L64

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/printable.hpp#L64-L66

";


// File: classcasadi_1_1QpToNlp.xml
%feature("docstring") casadi::QpToNlp "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Qrqp.xml
%feature("docstring") casadi::Qrqp "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Qrsqp.xml
%feature("docstring") casadi::Qrsqp "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Rootfinder.xml
%feature("docstring") casadi::Rootfinder "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1scoped__checkout.xml
%feature("docstring") casadi::scoped_checkout "

[INTERNAL] C++ includes: casadi_misc.hpp
";

%feature("docstring") casadi::scoped_checkout< T >::scoped_checkout(const T 
&proto) "

[INTERNAL] ";

%feature("docstring") casadi::scoped_checkout< T 
>::scoped_checkout(scoped_checkout &&that) "

[INTERNAL] ";

%feature("docstring") casadi::scoped_checkout< T >::scoped_checkout(const 
scoped_checkout &that) "

[INTERNAL] ";

%feature("docstring") casadi::scoped_checkout::~scoped_checkout "

[INTERNAL] ";


// File: classcasadi_1_1Scpgen.xml
%feature("docstring") casadi::Scpgen "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1SerializerBase.xml
%feature("docstring") casadi::SerializerBase "

[INTERNAL] C++ includes: serializer.hpp
";

%feature("docstring") 
casadi::SerializerBase::SerializerBase(std::unique_ptr< std::ostream > 
stream, const Dict &opts=Dict()) "

[INTERNAL] ";

%feature("docstring") casadi::SerializerBase::~SerializerBase "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const Sparsity &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MX &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MatrixCommon &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MatrixCommon &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const Linsol &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const Function &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const GenericType &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const casadi_int &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const double &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::string &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Sparsity > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< MX > 
&e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
MatrixCommon > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
MatrixCommon > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Linsol > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Function > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
GenericType > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
casadi_int > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
double > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
std::string > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::connect(DeserializerBase &s) 
"

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::reset() "

[INTERNAL] ";


// File: classcasadi_1_1SerializingStream.xml
%feature("docstring") casadi::SerializingStream "

[INTERNAL] 
Helper class for Serialization.

Joris Gillis

Extra doc: https://github.com/casadi/casadi/wiki/L_ao

C++ includes: serializing_stream.hpp
";

%feature("docstring") 
casadi::SerializingStream::SerializingStream(std::ostream &out) "

[INTERNAL] 
Constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializing_stream.hpp#L209

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializing_stream.cpp#L70-L72

";

%feature("docstring") 
casadi::SerializingStream::SerializingStream(std::ostream &out, const Dict 
&opts) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const Sparsity &e) "

[INTERNAL] 
Serializes an object to the output stream.

Extra doc: https://github.com/casadi/casadi/wiki/L_ap

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializing_stream.hpp#L216

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializing_stream.cpp#L213-L216

";

%feature("docstring")  casadi::SerializingStream::pack(const MX &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const SXElem &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const Linsol &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const MatrixCommon 
&e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const Function &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const Importer &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const Slice &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const GenericType &e)
 "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(std::istream &s) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(int e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(bool e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(casadi_int e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(size_t e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(double e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const std::string &e)
 "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(char e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const std::vector< T 
> &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const std::map< K, V 
> &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const std::pair< A, B
 > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const std::string 
&descr, const T &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::pack(const std::string 
&descr, T &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::version(const std::string 
&name, int v) "

[INTERNAL] ";

%feature("docstring")  
casadi::SerializingStream::connect(DeserializingStream &s) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializingStream::reset() "

[INTERNAL] ";


// File: classcasadi_1_1SharedObject.xml
%feature("docstring") casadi::SharedObject "

[INTERNAL] 
 SharedObject implements a reference counting framework similar 
for efficient and.

easily-maintained memory management.

To use the class, both the  SharedObject class (the public class), and the 
SharedObjectInternal class (the 
internal class) must be inherited from. It 
can be done in two 
different files and together with memory management, 
this approach 
provides a clear distinction of which methods of the class 
are to be 
considered \"public\", i.e. methods for public use that can be 

considered to remain over time with small changes, and the internal 
memory.

When interfacing a software, which typically includes including some 
header
 file, this is best done only in the file where the internal 
class is 
defined, to avoid polluting the global namespace and other 
side effects.

The default constructor always means creating a null pointer to an 
internal
 class only. To allocate an internal class (this works only 
when the 
internal class isn't abstract), use the constructor with 
arguments.

The copy constructor and the assignment operator perform shallow 
copies 
only, to make a deep copy you must use the clone method 
explicitly. This 
will give a shared pointer instance.

In an inheritance hierarchy, you can cast down automatically, e.g. 

(SXFunction is a child class of  Function): SXFunction derived(...);  
Function base = derived;

To cast up, use the shared_cast template function, which works 
analogously 
to dynamic_cast, static_cast, const_cast etc, e.g.: 
SXFunction 
derived(...);  Function base = derived; SXFunction derived_from_base = 

shared_cast<SXFunction>(base);

A failed shared_cast will result in a null pointer (cf. dynamic_cast)

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_as

C++ includes: shared_object.hpp
";

%feature("docstring") casadi::SharedObject::SharedObject() "

[INTERNAL] 
Default constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L93

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L33-L35

";

%feature("docstring") casadi::SharedObject::SharedObject(const SharedObject 
&ref) "

[INTERNAL] 
Copy constructor (shallow copy)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L96

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L37-L40

";

%feature("docstring") casadi::SharedObject::~SharedObject "

[INTERNAL] 
Destructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L42-L44

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::SharedObject::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1ShellCompiler.xml
%feature("docstring") casadi::ShellCompiler "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Slice.xml
%feature("docstring") casadi::Slice "

[INTERNAL] 
Class representing a  Slice.

Note that Python or Octave do not need to use this class. They can 
just use
 slicing utility from the host language ( M[0:6] in Python, 
M(1:7) )

Extra doc: https://github.com/casadi/casadi/wiki/L_13

C++ includes: slice.hpp
";

%feature("docstring") casadi::Slice::Slice() "

[INTERNAL] 
Default constructor - all elements.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L57

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L32-L33

";

%feature("docstring") casadi::Slice::Slice(casadi_int i, bool ind1=false) "

[INTERNAL] 
A single element (explicit to avoid ambiguity with IM overload.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L60

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L35-L42

";

%feature("docstring") casadi::Slice::Slice(casadi_int start, casadi_int 
stop, casadi_int step=1) "

[INTERNAL] 
A slice.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L63

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L44-L45

";

%feature("docstring") casadi::Slice::Slice(int start, int stop, int step=1) 
"

[INTERNAL] ";

%feature("docstring") casadi::Slice::Slice(int start, casadi_int stop, int 
step=1) "

[INTERNAL] ";

%feature("docstring") casadi::Slice::Slice(casadi_int start, int stop, int 
step=1) "

[INTERNAL] ";

%feature("docstring")  casadi::Slice::all() const "

[INTERNAL] 
Get a vector of indices.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L69

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L90-L98

";

%feature("docstring") casadi::casadi_all "

Get a vector of indices.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L69

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L90-L98

";

%feature("docstring")  casadi::Slice::casadi_all "

Get a vector of indices.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L69

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L90-L98

";

%feature("docstring")  casadi::Slice::all(casadi_int len, bool ind1=false) 
const "

[INTERNAL] 
Get a vector of indices.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L72

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L100-L102

";

%feature("docstring") casadi::casadi_all "

Get a vector of indices.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L72

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L100-L102

";

%feature("docstring")  casadi::Slice::casadi_all "

Get a vector of indices.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L72

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L100-L102

";

%feature("docstring")  casadi::Slice::all(const Slice &outer, casadi_int 
len) const "

[INTERNAL] 
Get a vector of indices (nested slice)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L75

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L129-L137

";

%feature("docstring") casadi::casadi_all "

Get a vector of indices (nested slice)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L75

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L129-L137

";

%feature("docstring")  casadi::Slice::casadi_all "

Get a vector of indices (nested slice)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L75

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L129-L137

";

%feature("docstring")  casadi::Slice::size() const "

[INTERNAL] 
Get number of elements.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L78

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L104-L109

";

%feature("docstring")  casadi::Slice::is_empty() const "

[INTERNAL] 
Check if slice is empty.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L81

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L111-L113

";

%feature("docstring")  casadi::Slice::is_scalar(casadi_int len) const "

[INTERNAL] 
Is the slice a scalar.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L84

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L139-L144

";

%feature("docstring")  casadi::Slice::scalar(casadi_int len) const "

[INTERNAL] 
Get scalar (if is_scalar)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L87

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L146-L150

";

%feature("docstring")  casadi::Slice::apply(casadi_int len, bool ind1=false)
 const "

[INTERNAL] 
Apply concrete length.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L98

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L66-L88

";

%feature("docstring")  casadi::Slice::type_name() const "

[INTERNAL] 
Get name of the class.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L107

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L107-L107

";

%feature("docstring")  casadi::Slice::disp(std::ostream &stream, bool 
more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L110

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L115-L127

";

%feature("docstring")  casadi::Slice::get_str(bool more=false) const "

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L113

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L113-L117

";

%feature("docstring")  casadi::Slice::info() const "

[INTERNAL] 
Obtain information

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L120

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L120-L122

";

%feature("docstring")  casadi::Slice::serialize(SerializingStream &s) const 
"

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_14

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L127

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L292-L296

";


// File: classcasadi_1_1SlicotDple.xml
%feature("docstring") casadi::SlicotDple "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Solve.xml


// File: classcasadi_1_1SolveUnity.xml


// File: classcasadi_1_1SparsityInterface.xml
%feature("docstring") casadi::SparsityInterfaceCommon "

[INTERNAL] 
Sparsity interface class.

This is a common base class for  GenericMatrix (i.e.  MX and Matrix<>) and 
Sparsity, introducing a uniform syntax and 
implementing common 
functionality using the curiously recurring 
template pattern (CRTP) idiom.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_3d

C++ includes: sparsity_interface.hpp
";

%feature("docstring")  casadi::SparsityInterfaceCommon::horzcat(const 
std::vector< MatType > &v) "

[INTERNAL] 
Concatenate a list of matrices horizontally.

Alternative terminology: horizontal stack, hstack, horizontal append, 
[a b]

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L95

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L95-L97

";

%feature("docstring") casadi::casadi_horzcat "

Concatenate a list of matrices horizontally.

Alternative terminology: horizontal stack, hstack, horizontal append, 
[a b]

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L95

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L95-L97

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_horzcat "

Concatenate a list of matrices horizontally.

Alternative terminology: horizontal stack, hstack, horizontal append, 
[a b]

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L95

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L95-L97

";

%feature("docstring")  casadi::SparsityInterfaceCommon::horzcat(const 
MatType &x, const MatType &y) "

[INTERNAL] 
Concatenate horizontally, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L435

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L435-L437

";

%feature("docstring") casadi::casadi_horzcat "

Concatenate horizontally, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L435

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L435-L437

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_horzcat "

Concatenate horizontally, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4a

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L435

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L435-L437

";

%feature("docstring")  casadi::SparsityInterfaceCommon::horzcat(const 
MatType &x, const MatType &y, const MatType &z) "

[INTERNAL] 
Concatenate horizontally, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L442

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L442-L444

";

%feature("docstring") casadi::casadi_horzcat "

Concatenate horizontally, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L442

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L442-L444

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_horzcat "

Concatenate horizontally, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L442

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L442-L444

";

%feature("docstring")  casadi::SparsityInterfaceCommon::horzcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w) "

[INTERNAL] 
Concatenate horizontally, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L449

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L449-L452

";

%feature("docstring") casadi::casadi_horzcat "

Concatenate horizontally, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L449

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L449-L452

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_horzcat "

Concatenate horizontally, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L449

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L449-L452

";

%feature("docstring")  casadi::SparsityInterfaceCommon::horzcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w, const 
MatType &v) "

[INTERNAL] 
Concatenate horizontally, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L457

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L457-L460

";

%feature("docstring") casadi::casadi_horzcat "

Concatenate horizontally, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L457

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L457-L460

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_horzcat "

Concatenate horizontally, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L457

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L457-L460

";

%feature("docstring")  casadi::SparsityInterfaceCommon::horzcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w, const 
MatType &v, const MatType &u) "

[INTERNAL] 
Concatenate horizontally, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L465

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L465-L468

";

%feature("docstring") casadi::casadi_horzcat "

Concatenate horizontally, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L465

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L465-L468

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_horzcat "

Concatenate horizontally, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L465

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L465-L468

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vertcat(const 
std::vector< MatType > &v) "

[INTERNAL] 
Concatenate a list of matrices vertically.

Alternative terminology: vertical stack, vstack, vertical append, 
[a;b]

vertcat(vertsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L106

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L106-L108

";

%feature("docstring") casadi::casadi_vertcat "

Concatenate a list of matrices vertically.

Alternative terminology: vertical stack, vstack, vertical append, 
[a;b]

vertcat(vertsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L106

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L106-L108

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vertcat "

Concatenate a list of matrices vertically.

Alternative terminology: vertical stack, vstack, vertical append, 
[a;b]

vertcat(vertsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L106

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L106-L108

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vertcat(const 
MatType &x, const MatType &y) "

[INTERNAL] 
Concatenate vertically, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L473

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L473-L475

";

%feature("docstring") casadi::casadi_vertcat "

Concatenate vertically, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L473

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L473-L475

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vertcat "

Concatenate vertically, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L473

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L473-L475

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vertcat(const 
MatType &x, const MatType &y, const MatType &z) "

[INTERNAL] 
Concatenate vertically, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L480

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L480-L482

";

%feature("docstring") casadi::casadi_vertcat "

Concatenate vertically, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L480

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L480-L482

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vertcat "

Concatenate vertically, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L480

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L480-L482

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vertcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w) "

[INTERNAL] 
Concatenate vertically, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L487

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L487-L490

";

%feature("docstring") casadi::casadi_vertcat "

Concatenate vertically, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L487

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L487-L490

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vertcat "

Concatenate vertically, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L487

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L487-L490

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vertcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w, const 
MatType &v) "

[INTERNAL] 
Concatenate vertically, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L495

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L495-L498

";

%feature("docstring") casadi::casadi_vertcat "

Concatenate vertically, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L495

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L495-L498

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vertcat "

Concatenate vertically, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L495

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L495-L498

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vertcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w, const 
MatType &v, const MatType &u) "

[INTERNAL] 
Concatenate vertically, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L503

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L503-L506

";

%feature("docstring") casadi::casadi_vertcat "

Concatenate vertically, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L503

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L503-L506

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vertcat "

Concatenate vertically, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L503

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L503-L506

";

%feature("docstring")  casadi::SparsityInterfaceCommon::horzsplit(const 
MatType &x, const std::vector< casadi_int > &offset) "

[INTERNAL] 
split horizontally, retaining groups of columns

Parameters:
-----------

offset: 
List of all start columns for each group the last column group will
 
run to the end.

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L119

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L119-L121

";

%feature("docstring") casadi::casadi_horzsplit "

split horizontally, retaining groups of columns

Parameters:
-----------

offset: 
List of all start columns for each group the last column group will
 
run to the end.

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L119

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L119-L121

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_horzsplit "

split horizontally, retaining groups of columns

Parameters:
-----------

offset: 
List of all start columns for each group the last column group will
 
run to the end.

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L119

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L119-L121

";

%feature("docstring")  casadi::SparsityInterfaceCommon::horzsplit(const 
MatType &x, casadi_int incr=1) "

[INTERNAL] 
split horizontally, retaining fixed-sized groups of columns

Parameters:
-----------

incr: 
Size of each group of columns

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L130

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L130-L132

";

%feature("docstring") casadi::casadi_horzsplit "

split horizontally, retaining fixed-sized groups of columns

Parameters:
-----------

incr: 
Size of each group of columns

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L130

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L130-L132

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_horzsplit "

split horizontally, retaining fixed-sized groups of columns

Parameters:
-----------

incr: 
Size of each group of columns

horzcat(horzsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L130

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L130-L132

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vertsplit(const 
MatType &x, const std::vector< casadi_int > &offset) "

[INTERNAL] 
split vertically, retaining groups of rows

Parameters:
-----------

output_offset: 
List of all start rows for each group the last row group 
will run to 
the end.

vertcat(vertsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L143

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L143-L145

";

%feature("docstring") casadi::casadi_vertsplit "

split vertically, retaining groups of rows

Parameters:
-----------

output_offset: 
List of all start rows for each group the last row group 
will run to 
the end.

vertcat(vertsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L143

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L143-L145

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vertsplit "

split vertically, retaining groups of rows

Parameters:
-----------

output_offset: 
List of all start rows for each group the last row group 
will run to 
the end.

vertcat(vertsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3i

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L143

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L143-L145

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vertsplit(const 
MatType &x, casadi_int incr=1) "

[INTERNAL] 
split vertically, retaining fixed-sized groups of rows

Parameters:
-----------

incr: 
Size of each group of rows

vertcat(vertsplit(x, ...)) = x



::

  >>> print vertsplit(SX.sym(\"a\",4))
  [SX(a_0), SX(a_1), SX(a_2), SX(a_3)]
  





::

  >>> print vertsplit(SX.sym(\"a\",4),2)
  [SX([a_0, a_1]), SX([a_2, a_3])]
  



If the number of rows is not a multiple of  incr, the last entry returned 
will have a size smaller than  incr.



::

  >>> print vertsplit(DM([0,1,2,3,4]),2)
  [DM([0, 1]), DM([2, 3]), DM(4)]
  



Extra doc: https://github.com/casadi/casadi/wiki/L_3k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L182

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L182-L184

";

%feature("docstring") casadi::casadi_vertsplit "

split vertically, retaining fixed-sized groups of rows

Parameters:
-----------

incr: 
Size of each group of rows

vertcat(vertsplit(x, ...)) = x



::

  >>> print vertsplit(SX.sym(\"a\",4))
  [SX(a_0), SX(a_1), SX(a_2), SX(a_3)]
  





::

  >>> print vertsplit(SX.sym(\"a\",4),2)
  [SX([a_0, a_1]), SX([a_2, a_3])]
  



If the number of rows is not a multiple of  incr, the last entry returned 
will have a size smaller than  incr.



::

  >>> print vertsplit(DM([0,1,2,3,4]),2)
  [DM([0, 1]), DM([2, 3]), DM(4)]
  



Extra doc: https://github.com/casadi/casadi/wiki/L_3k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L182

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L182-L184

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vertsplit "

split vertically, retaining fixed-sized groups of rows

Parameters:
-----------

incr: 
Size of each group of rows

vertcat(vertsplit(x, ...)) = x



::

  >>> print vertsplit(SX.sym(\"a\",4))
  [SX(a_0), SX(a_1), SX(a_2), SX(a_3)]
  





::

  >>> print vertsplit(SX.sym(\"a\",4),2)
  [SX([a_0, a_1]), SX([a_2, a_3])]
  



If the number of rows is not a multiple of  incr, the last entry returned 
will have a size smaller than  incr.



::

  >>> print vertsplit(DM([0,1,2,3,4]),2)
  [DM([0, 1]), DM([2, 3]), DM(4)]
  



Extra doc: https://github.com/casadi/casadi/wiki/L_3k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L182

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L182-L184

";

%feature("docstring")  casadi::SparsityInterfaceCommon::offset(const 
std::vector< MatType > &v, bool vert=true) "

[INTERNAL] 
Helper function, get offsets corresponding to a vector of 
matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L150-L152

";

%feature("docstring") casadi::casadi_offset "

Helper function, get offsets corresponding to a vector of matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L150-L152

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_offset "

Helper function, get offsets corresponding to a vector of matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L150-L152

";

%feature("docstring")  casadi::SparsityInterfaceCommon::blockcat(const 
std::vector< std::vector< MatType > > &v) "

[INTERNAL] 
Construct a matrix from a list of list of blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_3l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L189-L191

";

%feature("docstring") casadi::casadi_blockcat "

Construct a matrix from a list of list of blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_3l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L189-L191

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_blockcat "

Construct a matrix from a list of list of blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_3l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L189-L191

";

%feature("docstring")  casadi::SparsityInterfaceCommon::blockcat(const 
MatType &A, const MatType &B, const MatType &C, const MatType &D) "

[INTERNAL] 
Construct a matrix from 4 blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_3m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L197

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L197-L199

";

%feature("docstring") casadi::casadi_blockcat "

Construct a matrix from 4 blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_3m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L197

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L197-L199

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_blockcat "

Construct a matrix from 4 blocks.

Extra doc: https://github.com/casadi/casadi/wiki/L_3m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L197

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L197-L199

";

%feature("docstring")  casadi::SparsityInterfaceCommon::blocksplit(const 
MatType &x, const std::vector< casadi_int > &vert_offset, const std::vector<
 casadi_int > &horz_offset) "

[INTERNAL] 
chop up into blocks

Parameters:
-----------

vert_offset: 
Defines the boundaries of the block rows

horz_offset: 
Defines the boundaries of the block columns

blockcat(blocksplit(x,..., ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L210

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L210-L214

";

%feature("docstring") casadi::casadi_blocksplit "

chop up into blocks

Parameters:
-----------

vert_offset: 
Defines the boundaries of the block rows

horz_offset: 
Defines the boundaries of the block columns

blockcat(blocksplit(x,..., ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L210

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L210-L214

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_blocksplit "

chop up into blocks

Parameters:
-----------

vert_offset: 
Defines the boundaries of the block rows

horz_offset: 
Defines the boundaries of the block columns

blockcat(blocksplit(x,..., ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L210

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L210-L214

";

%feature("docstring")  casadi::SparsityInterfaceCommon::blocksplit(const 
MatType &x, casadi_int vert_incr=1, casadi_int horz_incr=1) "

[INTERNAL] 
chop up into blocks

Parameters:
-----------

vert_incr: 
Defines the increment for block boundaries in row dimension

horz_incr: 
Defines the increment for block boundaries in column dimension

blockcat(blocksplit(x,..., ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L225-L227

";

%feature("docstring") casadi::casadi_blocksplit "

chop up into blocks

Parameters:
-----------

vert_incr: 
Defines the increment for block boundaries in row dimension

horz_incr: 
Defines the increment for block boundaries in column dimension

blockcat(blocksplit(x,..., ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L225-L227

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_blocksplit "

chop up into blocks

Parameters:
-----------

vert_incr: 
Defines the increment for block boundaries in row dimension

horz_incr: 
Defines the increment for block boundaries in column dimension

blockcat(blocksplit(x,..., ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L225-L227

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagcat(const 
std::vector< MatType > &A) "

[INTERNAL] 
Construct a matrix with given block on the diagonal.

Extra doc: https://github.com/casadi/casadi/wiki/L_3p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L232

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L232-L234

";

%feature("docstring") casadi::casadi_diagcat "

Construct a matrix with given block on the diagonal.

Extra doc: https://github.com/casadi/casadi/wiki/L_3p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L232

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L232-L234

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagcat "

Construct a matrix with given block on the diagonal.

Extra doc: https://github.com/casadi/casadi/wiki/L_3p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L232

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L232-L234

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagcat(const 
MatType &x, const MatType &y) "

[INTERNAL] 
Concatenate along diagonal, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L511

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L511-L513

";

%feature("docstring") casadi::casadi_diagcat "

Concatenate along diagonal, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L511

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L511-L513

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagcat "

Concatenate along diagonal, two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L511

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L511-L513

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagcat(const 
MatType &x, const MatType &y, const MatType &z) "

[INTERNAL] 
Concatenate along diagonal, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L518-L520

";

%feature("docstring") casadi::casadi_diagcat "

Concatenate along diagonal, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L518-L520

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagcat "

Concatenate along diagonal, three matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L518-L520

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w) "

[INTERNAL] 
Concatenate along diagonal, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L525

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L525-L528

";

%feature("docstring") casadi::casadi_diagcat "

Concatenate along diagonal, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L525

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L525-L528

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagcat "

Concatenate along diagonal, four matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L525

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L525-L528

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w, const 
MatType &v) "

[INTERNAL] 
Concatenate along diagonal, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L533

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L533-L536

";

%feature("docstring") casadi::casadi_diagcat "

Concatenate along diagonal, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L533

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L533-L536

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagcat "

Concatenate along diagonal, five matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L533

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L533-L536

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagcat(const 
MatType &x, const MatType &y, const MatType &z, const MatType &w, const 
MatType &v, const MatType &u) "

[INTERNAL] 
Concatenate along diagonal, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L541

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L541-L544

";

%feature("docstring") casadi::casadi_diagcat "

Concatenate along diagonal, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L541

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L541-L544

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagcat "

Concatenate along diagonal, six matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_4o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L541

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L541-L544

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagsplit(const 
MatType &x, const std::vector< casadi_int > &output_offset1, const 
std::vector< casadi_int > &output_offset2) "

[INTERNAL] 
split diagonally, retaining square matrices

Parameters:
-----------

output_offset1: 
List of all start locations (row) for each group the last 
matrix will 
run to the end.

output_offset2: 
List of all start locations (row) for each group the last 
matrix will 
run to the end.

diagcat(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L247

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L247-L251

";

%feature("docstring") casadi::casadi_diagsplit "

split diagonally, retaining square matrices

Parameters:
-----------

output_offset1: 
List of all start locations (row) for each group the last 
matrix will 
run to the end.

output_offset2: 
List of all start locations (row) for each group the last 
matrix will 
run to the end.

diagcat(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L247

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L247-L251

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagsplit "

split diagonally, retaining square matrices

Parameters:
-----------

output_offset1: 
List of all start locations (row) for each group the last 
matrix will 
run to the end.

output_offset2: 
List of all start locations (row) for each group the last 
matrix will 
run to the end.

diagcat(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L247

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L247-L251

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagsplit(const 
MatType &x, const std::vector< casadi_int > &output_offset) "

[INTERNAL] 
split diagonally, retaining square matrices

Parameters:
-----------

output_offset: 
List of all start locations for each group the last matrix 
will run to
 the end.

diagcat(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L262

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L262-L264

";

%feature("docstring") casadi::casadi_diagsplit "

split diagonally, retaining square matrices

Parameters:
-----------

output_offset: 
List of all start locations for each group the last matrix 
will run to
 the end.

diagcat(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L262

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L262-L264

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagsplit "

split diagonally, retaining square matrices

Parameters:
-----------

output_offset: 
List of all start locations for each group the last matrix 
will run to
 the end.

diagcat(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L262

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L262-L264

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagsplit(const 
MatType &x, casadi_int incr=1) "

[INTERNAL] 
split diagonally, retaining groups of square matrices

Parameters:
-----------

incr: 
Size of each matrix

diagsplit(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L274

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L274-L276

";

%feature("docstring") casadi::casadi_diagsplit "

split diagonally, retaining groups of square matrices

Parameters:
-----------

incr: 
Size of each matrix

diagsplit(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L274

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L274-L276

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagsplit "

split diagonally, retaining groups of square matrices

Parameters:
-----------

incr: 
Size of each matrix

diagsplit(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L274

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L274-L276

";

%feature("docstring")  casadi::SparsityInterfaceCommon::diagsplit(const 
MatType &x, casadi_int incr1, casadi_int incr2) "

[INTERNAL] 
split diagonally, retaining fixed-sized matrices

Parameters:
-----------

incr1: 
Row dimension of each matrix

incr2: 
Column dimension of each matrix

diagsplit(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L287

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L287-L289

";

%feature("docstring") casadi::casadi_diagsplit "

split diagonally, retaining fixed-sized matrices

Parameters:
-----------

incr1: 
Row dimension of each matrix

incr2: 
Column dimension of each matrix

diagsplit(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L287

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L287-L289

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_diagsplit "

split diagonally, retaining fixed-sized matrices

Parameters:
-----------

incr1: 
Row dimension of each matrix

incr2: 
Column dimension of each matrix

diagsplit(diagsplit(x, ...)) = x

Extra doc: https://github.com/casadi/casadi/wiki/L_3t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L287

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L287-L289

";

%feature("docstring")  casadi::SparsityInterfaceCommon::veccat(const 
std::vector< MatType > &x) "

[INTERNAL] 
concatenate vertically while vectorizing all arguments with vec

Extra doc: https://github.com/casadi/casadi/wiki/L_3u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L294

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L294-L296

";

%feature("docstring") casadi::casadi_veccat "

concatenate vertically while vectorizing all arguments with vec

Extra doc: https://github.com/casadi/casadi/wiki/L_3u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L294

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L294-L296

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_veccat "

concatenate vertically while vectorizing all arguments with vec

Extra doc: https://github.com/casadi/casadi/wiki/L_3u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L294

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L294-L296

";

%feature("docstring")  casadi::SparsityInterfaceCommon::mtimes(const MatType
 &x, const MatType &y) "

[INTERNAL] 
 Matrix product of two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L301

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L301-L303

";

%feature("docstring") casadi::casadi_mtimes "

Matrix product of two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L301

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L301-L303

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_mtimes "

Matrix product of two matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L301

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L301-L303

";

%feature("docstring")  casadi::SparsityInterfaceCommon::mtimes(const 
std::vector< MatType > &args) "

[INTERNAL] 
 Matrix product of n matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L308

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L308-L310

";

%feature("docstring") casadi::casadi_mtimes "

Matrix product of n matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L308

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L308-L310

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_mtimes "

Matrix product of n matrices.

Extra doc: https://github.com/casadi/casadi/wiki/L_3w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L308

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L308-L310

";

%feature("docstring")  casadi::SparsityInterfaceCommon::mac(const MatType 
&x, const MatType &y, const MatType &z) "

[INTERNAL] 
Multiply-accumulate operation.

Matrix product of two matrices (x and y), adding the result to a third 

matrix z. The result has the same sparsity pattern as C meaning that 
other 
entries of (x*y) are ignored. The operation is equivalent to: 

z+mtimes(x,y).project(z.sparsity()).

Extra doc: https://github.com/casadi/casadi/wiki/L_3x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L321

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L321-L323

";

%feature("docstring") casadi::casadi_mac "

Multiply-accumulate operation.

Matrix product of two matrices (x and y), adding the result to a third 

matrix z. The result has the same sparsity pattern as C meaning that 
other 
entries of (x*y) are ignored. The operation is equivalent to: 

z+mtimes(x,y).project(z.sparsity()).

Extra doc: https://github.com/casadi/casadi/wiki/L_3x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L321

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L321-L323

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_mac "

Multiply-accumulate operation.

Matrix product of two matrices (x and y), adding the result to a third 

matrix z. The result has the same sparsity pattern as C meaning that 
other 
entries of (x*y) are ignored. The operation is equivalent to: 

z+mtimes(x,y).project(z.sparsity()).

Extra doc: https://github.com/casadi/casadi/wiki/L_3x

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L321

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L321-L323

";

%feature("docstring")  casadi::SparsityInterfaceCommon::transpose(const 
MatType &X) "

[INTERNAL] 
Transpose.

Extra doc: https://github.com/casadi/casadi/wiki/L_3y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L328

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L328-L330

";

%feature("docstring") casadi::casadi_transpose "

Transpose.

Extra doc: https://github.com/casadi/casadi/wiki/L_3y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L328

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L328-L330

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_transpose "

Transpose.

Extra doc: https://github.com/casadi/casadi/wiki/L_3y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L328

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L328-L330

";

%feature("docstring")  casadi::SparsityInterfaceCommon::vec(const MatType 
&x) "

[INTERNAL] 
make a vector

Reshapes/vectorizes the matrix such that the shape becomes 
(expr.numel(), 
1). Columns are stacked on top of each other. Same as 
reshape(expr, 
expr.numel(), 1)

a c 
b d 
 turns into

a 
b 
c 
d 
 Extra doc: https://github.com/casadi/casadi/wiki/L_3z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L349

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L349-L351

";

%feature("docstring") casadi::casadi_vec "

make a vector

Reshapes/vectorizes the matrix such that the shape becomes 
(expr.numel(), 
1). Columns are stacked on top of each other. Same as 
reshape(expr, 
expr.numel(), 1)

a c 
b d 
 turns into

a 
b 
c 
d 
 Extra doc: https://github.com/casadi/casadi/wiki/L_3z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L349

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L349-L351

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_vec "

make a vector

Reshapes/vectorizes the matrix such that the shape becomes 
(expr.numel(), 
1). Columns are stacked on top of each other. Same as 
reshape(expr, 
expr.numel(), 1)

a c 
b d 
 turns into

a 
b 
c 
d 
 Extra doc: https://github.com/casadi/casadi/wiki/L_3z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L349

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L349-L351

";

%feature("docstring")  casadi::SparsityInterfaceCommon::reshape(const 
MatType &x, casadi_int nrow, casadi_int ncol) "

[INTERNAL] 
Returns a reshaped version of the matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_40

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L356

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L356-L358

";

%feature("docstring") casadi::casadi_reshape "

Returns a reshaped version of the matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_40

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L356

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L356-L358

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_reshape "

Returns a reshaped version of the matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_40

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L356

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L356-L358

";

%feature("docstring")  casadi::SparsityInterfaceCommon::reshape(const 
MatType &x, std::pair< casadi_int, casadi_int > rc) "

[INTERNAL] 
Returns a reshaped version of the matrix, dimensions as a 
vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_41

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L363

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L363-L365

";

%feature("docstring") casadi::casadi_reshape "

Returns a reshaped version of the matrix, dimensions as a vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_41

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L363

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L363-L365

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_reshape "

Returns a reshaped version of the matrix, dimensions as a vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_41

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L363

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L363-L365

";

%feature("docstring")  casadi::SparsityInterfaceCommon::reshape(const 
MatType &x, const Sparsity &sp) "

[INTERNAL] 
Reshape the matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_42

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L370

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L370-L372

";

%feature("docstring") casadi::casadi_reshape "

Reshape the matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_42

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L370

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L370-L372

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_reshape "

Reshape the matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_42

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L370

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L370-L372

";

%feature("docstring")  casadi::SparsityInterfaceCommon::sparsity_cast(const 
MatType &x, const Sparsity &sp) "

[INTERNAL] 
Cast matrix nonzeros to different Sparsity.

Extra doc: https://github.com/casadi/casadi/wiki/L_24z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L377

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L377-L379

";

%feature("docstring") casadi::casadi_sparsity_cast "

Cast matrix nonzeros to different Sparsity.

Extra doc: https://github.com/casadi/casadi/wiki/L_24z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L377

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L377-L379

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_sparsity_cast
 "

Cast matrix nonzeros to different Sparsity.

Extra doc: https://github.com/casadi/casadi/wiki/L_24z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L377

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L377-L379

";

%feature("docstring")  casadi::SparsityInterfaceCommon::sprank(const MatType
 &x) "

[INTERNAL] 
Obtain the structural rank of a sparsity-pattern.

Extra doc: https://github.com/casadi/casadi/wiki/L_43

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L384

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L384-L386

";

%feature("docstring")  casadi::SparsityInterfaceCommon::norm_0_mul(const 
MatType &x, const MatType &y) "

[INTERNAL] 
0-norm (nonzero count) of a Matrix-matrix product

Extra doc: https://github.com/casadi/casadi/wiki/L_44

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L391

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L391-L393

";

%feature("docstring")  casadi::SparsityInterfaceCommon::triu(const MatType 
&x, bool includeDiagonal=true) "

[INTERNAL] 
Get the upper triangular part of a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_45

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L398-L400

";

%feature("docstring") casadi::casadi_triu "

Get the upper triangular part of a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_45

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L398-L400

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_triu "

Get the upper triangular part of a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_45

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L398-L400

";

%feature("docstring")  casadi::SparsityInterfaceCommon::tril(const MatType 
&x, bool includeDiagonal=true) "

[INTERNAL] 
Get the lower triangular part of a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_46

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L405

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L405-L407

";

%feature("docstring") casadi::casadi_tril "

Get the lower triangular part of a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_46

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L405

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L405-L407

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_tril "

Get the lower triangular part of a matrix.

Extra doc: https://github.com/casadi/casadi/wiki/L_46

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L405

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L405-L407

";

%feature("docstring")  casadi::SparsityInterfaceCommon::kron(const MatType 
&a, const MatType &b) "

[INTERNAL] 
Kronecker tensor product.

Creates a block matrix in which each element (i, j) is a_ij*b

Extra doc: https://github.com/casadi/casadi/wiki/L_47

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L414

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L414-L416

";

%feature("docstring") casadi::casadi_kron "

Kronecker tensor product.

Creates a block matrix in which each element (i, j) is a_ij*b

Extra doc: https://github.com/casadi/casadi/wiki/L_47

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L414

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L414-L416

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_kron "

Kronecker tensor product.

Creates a block matrix in which each element (i, j) is a_ij*b

Extra doc: https://github.com/casadi/casadi/wiki/L_47

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L414

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L414-L416

";

%feature("docstring")  casadi::SparsityInterfaceCommon::repmat(const MatType
 &A, casadi_int n, casadi_int m=1) "

[INTERNAL] 
Repeat matrix A n times vertically and m times horizontally.

Extra doc: https://github.com/casadi/casadi/wiki/L_48

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L421

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L421-L423

";

%feature("docstring") casadi::casadi_repmat "

Repeat matrix A n times vertically and m times horizontally.

Extra doc: https://github.com/casadi/casadi/wiki/L_48

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L421

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L421-L423

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_repmat "

Repeat matrix A n times vertically and m times horizontally.

Extra doc: https://github.com/casadi/casadi/wiki/L_48

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L421

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L421-L423

";

%feature("docstring")  casadi::SparsityInterfaceCommon::repmat(const MatType
 &A, const std::pair< casadi_int, casadi_int > &rc) "

[INTERNAL] 
Repeat matrix A n times vertically and m times horizontally.

Extra doc: https://github.com/casadi/casadi/wiki/L_49

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L428

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L428-L430

";

%feature("docstring") casadi::casadi_repmat "

Repeat matrix A n times vertically and m times horizontally.

Extra doc: https://github.com/casadi/casadi/wiki/L_49

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L428

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L428-L430

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_repmat "

Repeat matrix A n times vertically and m times horizontally.

Extra doc: https://github.com/casadi/casadi/wiki/L_49

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L428

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L428-L430

";

%feature("docstring")  casadi::SparsityInterfaceCommon::sum1(const MatType 
&x) "

[INTERNAL] 
Return a row-wise summation of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_4p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L549-L549

";

%feature("docstring") casadi::casadi_sum1 "

Return a row-wise summation of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_4p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L549-L549

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_sum1 "

Return a row-wise summation of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_4p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L549

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L549-L549

";

%feature("docstring")  casadi::SparsityInterfaceCommon::sum2(const MatType 
&x) "

[INTERNAL] 
Return a column-wise summation of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_4q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L554-L554

";

%feature("docstring") casadi::casadi_sum2 "

Return a column-wise summation of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_4q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L554-L554

";

%feature("docstring")  casadi::SparsityInterfaceCommon::casadi_sum2 "

Return a column-wise summation of elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_4q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sparsity_interface.hpp#L554-L554

";


// File: classcasadi_1_1Sqpmethod.xml
%feature("docstring") casadi::Sqpmethod "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1Logger_1_1Stream.xml
%feature("docstring") casadi::Logger::Stream "

[INTERNAL] C++ includes: casadi_logger.hpp
";

%feature("docstring") casadi::Logger::Stream< Err >::Stream() "

[INTERNAL] ";


// File: classcasadi_1_1Logger_1_1Streambuf.xml
%feature("docstring") casadi::Logger::Streambuf "

[INTERNAL] C++ includes: casadi_logger.hpp
";

%feature("docstring") casadi::Logger::Streambuf< Err >::Streambuf() "

[INTERNAL] ";


// File: classcasadi_1_1StringDeserializer.xml
%feature("docstring") casadi::StringDeserializer "

[INTERNAL] C++ includes: serializer.hpp
";

%feature("docstring") casadi::StringDeserializer::StringDeserializer(const 
std::string &string) "

[INTERNAL] 
Advanced deserialization of CasADi objects.

See: 
 StringDeserializer

Extra doc: https://github.com/casadi/casadi/wiki/L_7r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.cpp#L114-L117

";

%feature("docstring") casadi::StringDeserializer::~StringDeserializer "

[INTERNAL] ";

%feature("docstring")  casadi::StringDeserializer::decode(const std::string 
&string) "

[INTERNAL] 
Sets the string to deserialize objects from.

Extra doc: https://github.com/casadi/casadi/wiki/L_7s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.hpp#L240

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.cpp#L91-L96

";

%feature("docstring")  casadi::DeserializerBase::pop_type() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sparsity() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_mx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_dm() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_linsol() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_function() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_generictype() 
"

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_int() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_double() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_string() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_sparsity_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_mx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_dm_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_sx_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_linsol_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_function_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_generictype_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::blind_unpack_int_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_double_vector() "

[INTERNAL] ";

%feature("docstring")  
casadi::DeserializerBase::blind_unpack_string_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sparsity() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_mx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_dm() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sx() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_linsol() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_function() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_generictype() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_int() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_double() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_string() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sparsity_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_mx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_dm_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_sx_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_linsol_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_function_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_generictype_vector()
 "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_int_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_double_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::unpack_string_vector() "

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::connect(SerializerBase &s) 
"

[INTERNAL] ";

%feature("docstring")  casadi::DeserializerBase::reset() "

[INTERNAL] ";


// File: classcasadi_1_1StringSerializer.xml
%feature("docstring") casadi::StringSerializer "

[INTERNAL] C++ includes: serializer.hpp
";

%feature("docstring") casadi::StringSerializer::StringSerializer(const Dict 
&opts=Dict()) "

[INTERNAL] 
Advanced serialization of CasADi objects.

This class is intended for advanced users that want to circumvent the 

restrictions of standard pickling/matlab save load, ie no raw SX/MX 
symbols
 allowed.



::

  x = SX.sym('x');
  s = StringSerializer();
  s.pack(x);
  s.pack(sin(x));
   
  data = s.encode();
  
  s = StringDeserializer(data);
  a = s.unpack();
  b = s.unpack();
  



Note: Saving SX/MX objects individually has a substantial overhead 
(both 
time and length of encoded string). You are encouraged to use 
the 
vector/list variants of 'save' for SX/MX to reduce the overhead.

See: 
 Function::save,  Function::serialize,  StringDeserializer,  
FileSerializer

Extra doc: https://github.com/casadi/casadi/wiki/L_7o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.hpp#L203

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.cpp#L37-L39

";

%feature("docstring") casadi::StringSerializer::~StringSerializer "

[INTERNAL] ";

%feature("docstring")  casadi::StringSerializer::encode() "

[INTERNAL] 
Returns a string that holds the serialized objects.

As a side effect, this method clears the internal buffer

Extra doc: https://github.com/casadi/casadi/wiki/L_7p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.hpp#L211

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/serializer.cpp#L85-L90

";

%feature("docstring")  casadi::SerializerBase::pack(const Sparsity &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MX &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MatrixCommon &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const MatrixCommon &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const Linsol &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const Function &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const GenericType &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const casadi_int &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const double &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::string &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Sparsity > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< MX > 
&e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
MatrixCommon > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
MatrixCommon > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Linsol > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
Function > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
GenericType > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
casadi_int > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
double > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::pack(const std::vector< 
std::string > &e) "

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::connect(DeserializerBase &s) 
"

[INTERNAL] ";

%feature("docstring")  casadi::SerializerBase::reset() "

[INTERNAL] ";


// File: classcasadi_1_1SubIndex.xml
%feature("docstring") casadi::SubIndex "

[INTERNAL] 
 SubIndex class for  Matrix Same as the above class but for 
single argument return for operator()
 
Joel Andersson

C++ includes: submatrix.hpp
";

%feature("docstring") casadi::SubIndex< M, I >::SubIndex(M &mat, const I &i)
 "

[INTERNAL] 
Constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/submatrix.hpp#L108

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/submatrix.hpp#L108-L110

";

%feature("docstring") casadi::SubIndex< M, I >::SubIndex(const SubIndex< M, 
I > &y) "

[INTERNAL] 
Default copy constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/submatrix.hpp#L113

";


// File: classcasadi_1_1SubMatrix.xml
%feature("docstring") casadi::SubMatrix "

[INTERNAL] 
 SubMatrix class for  Matrix SubMatrix is the return type for 
operator() of the  Matrix class, it allows access to the value as well as 
changing the parent 
object 
Joel Andersson

C++ includes: submatrix.hpp
";

%feature("docstring") casadi::SubMatrix< M, I, J >::SubMatrix(M &mat, const 
I &i, const J &j) "

[INTERNAL] 
Constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/submatrix.hpp#L48

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/submatrix.hpp#L48-L50

";

%feature("docstring") casadi::SubMatrix< M, I, J >::SubMatrix(const 
SubMatrix< M, I, J > &y) "

[INTERNAL] 
Default copy constructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/submatrix.hpp#L53

";


// File: classcasadi_1_1SXElem.xml
%feature("docstring") casadi::SXElem "

[INTERNAL] 
The basic scalar symbolic class of CasADi.

SXElem is exposed only as an empty struct to SWIG

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_10i

C++ includes: sx_elem.hpp
";

%feature("docstring")  casadi::GenericExpressionCommon::minus(const SXElem 
&x, const SXElem &y) "

[INTERNAL] 
Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83-L85

";

%feature("docstring") casadi::casadi_minus "

Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83-L85

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_minus "

Subtraction: (x,y) -> x - y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L83-L85

";

%feature("docstring")  casadi::GenericExpressionCommon::times(const SXElem 
&x, const SXElem &y) "

[INTERNAL] 
Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99-L101

";

%feature("docstring") casadi::casadi_times "

Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99-L101

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_times "

Elementwise multiplication: (x,y) -> x .* y.

Extra doc: https://github.com/casadi/casadi/wiki/L_op

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L99-L101

";

%feature("docstring")  casadi::GenericExpressionCommon::rdivide(const SXElem
 &x, const SXElem &y) "

[INTERNAL] 
Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115-L117

";

%feature("docstring") casadi::casadi_rdivide "

Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115-L117

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_rdivide "

Elementwise division: (x,y) -> x ./ y.

Extra doc: https://github.com/casadi/casadi/wiki/L_oq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L115-L117

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_not(const 
SXElem &x) "

[INTERNAL] 
Logical  not x -> !x.

Returns (an expression evaluating to) 1 if expression is zero and 0 

otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_oz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L260

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L260-L262

";

%feature("docstring")  casadi::GenericExpressionCommon::lt(const SXElem &x, 
const SXElem &y) "

[INTERNAL] 
Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131-L133

";

%feature("docstring") casadi::casadi_lt "

Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131-L133

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_lt "

Logical less than: (x,y) -> x < y.

Extra doc: https://github.com/casadi/casadi/wiki/L_or

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L131-L133

";

%feature("docstring")  casadi::GenericExpressionCommon::le(const SXElem &x, 
const SXElem &y) "

[INTERNAL] 
Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146-L148

";

%feature("docstring") casadi::casadi_le "

Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146-L148

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_le "

Logical less or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_os

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L146-L148

";

%feature("docstring")  casadi::GenericExpressionCommon::gt(const SXElem &x, 
const SXElem &y) "

[INTERNAL] 
Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161-L163

";

%feature("docstring") casadi::casadi_gt "

Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161-L163

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_gt "

Logical greater than: (x,y) -> x > y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ot

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L161-L163

";

%feature("docstring")  casadi::GenericExpressionCommon::ge(const SXElem &x, 
const SXElem &y) "

[INTERNAL] 
Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176-L178

";

%feature("docstring") casadi::casadi_ge "

Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176-L178

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ge "

Logical greater or equal to: (x,y) -> x <= y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ou

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L176-L178

";

%feature("docstring")  casadi::GenericExpressionCommon::eq(const SXElem &x, 
const SXElem &y) "

[INTERNAL] 
Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191-L193

";

%feature("docstring") casadi::casadi_eq "

Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191-L193

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_eq "

Logical equal to: (x,y) -> x == y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ov

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L191-L193

";

%feature("docstring")  casadi::GenericExpressionCommon::ne(const SXElem &x, 
const SXElem &y) "

[INTERNAL] 
Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206-L208

";

%feature("docstring") casadi::casadi_ne "

Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206-L208

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ne "

Logical not equal to: (x,y) -> x != y.

Extra doc: https://github.com/casadi/casadi/wiki/L_ow

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L206-L208

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_and(const 
SXElem &x, const SXElem &y) "

[INTERNAL] 
Logical  and

Returns (an expression evaluating to) 1 if both expressions are 
nonzero and
 0 otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_ox

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L224

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L224-L226

";

%feature("docstring")  casadi::GenericExpressionCommon::logic_or(const 
SXElem &x, const SXElem &y) "

[INTERNAL] 
Logical  or

returns (an expression evaluating to) 1 if at least one expression is 

nonzero and 0 otherwise

Extra doc: https://github.com/casadi/casadi/wiki/L_oy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L242

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L242-L244

";

%feature("docstring")  casadi::GenericExpressionCommon::abs(const SXElem &x)
 "

[INTERNAL] 
Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275-L277

";

%feature("docstring") casadi::casadi_abs "

Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275-L277

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_abs "

Absolute value: x -> abs(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L275-L277

";

%feature("docstring")  casadi::GenericExpressionCommon::sqrt(const SXElem 
&x) "

[INTERNAL] 
Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290-L292

";

%feature("docstring") casadi::casadi_sqrt "

Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290-L292

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sqrt "

Square root: x -> sqrt(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L290-L292

";

%feature("docstring")  casadi::GenericExpressionCommon::sq(const SXElem &x) 
"

[INTERNAL] 
Square: x -> x^2.

Extra doc: https://github.com/casadi/casadi/wiki/L_p2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L302

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L302-L304

";

%feature("docstring")  casadi::GenericExpressionCommon::sin(const SXElem &x)
 "

[INTERNAL] 
Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314-L316

";

%feature("docstring") casadi::casadi_sin "

Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314-L316

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sin "

Sine: x -> sin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L314-L316

";

%feature("docstring")  casadi::GenericExpressionCommon::cos(const SXElem &x)
 "

[INTERNAL] 
Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326-L328

";

%feature("docstring") casadi::casadi_cos "

Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326-L328

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_cos "

Cosine: x -> cos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L326-L328

";

%feature("docstring")  casadi::GenericExpressionCommon::tan(const SXElem &x)
 "

[INTERNAL] 
Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338-L340

";

%feature("docstring") casadi::casadi_tan "

Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338-L340

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_tan "

Tangent: x -> tan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L338-L340

";

%feature("docstring")  casadi::GenericExpressionCommon::atan(const SXElem 
&x) "

[INTERNAL] 
Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350-L352

";

%feature("docstring") casadi::casadi_atan "

Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350-L352

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atan "

Arc tangent: x -> atan(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L350-L352

";

%feature("docstring")  casadi::GenericExpressionCommon::asin(const SXElem 
&x) "

[INTERNAL] 
Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362-L364

";

%feature("docstring") casadi::casadi_asin "

Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362-L364

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_asin "

Arc sine: x -> asin(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L362-L364

";

%feature("docstring")  casadi::GenericExpressionCommon::acos(const SXElem 
&x) "

[INTERNAL] 
Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374-L376

";

%feature("docstring") casadi::casadi_acos "

Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374-L376

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_acos "

Arc cosine: x -> acos(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L374-L376

";

%feature("docstring")  casadi::GenericExpressionCommon::tanh(const SXElem 
&x) "

[INTERNAL] 
Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386-L388

";

%feature("docstring") casadi::casadi_tanh "

Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386-L388

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_tanh "

Hyperbolic tangent: x -> tanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_p9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L386-L388

";

%feature("docstring")  casadi::GenericExpressionCommon::sinh(const SXElem 
&x) "

[INTERNAL] 
Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398-L400

";

%feature("docstring") casadi::casadi_sinh "

Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398-L400

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sinh "

Hyperbolic sin: x -> sinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pa

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L398-L400

";

%feature("docstring")  casadi::GenericExpressionCommon::cosh(const SXElem 
&x) "

[INTERNAL] 
Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410-L412

";

%feature("docstring") casadi::casadi_cosh "

Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410-L412

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_cosh "

Hyperbolic cosine: x -> cosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L410-L412

";

%feature("docstring")  casadi::GenericExpressionCommon::atanh(const SXElem 
&x) "

[INTERNAL] 
Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422-L424

";

%feature("docstring") casadi::casadi_atanh "

Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422-L424

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atanh "

Inverse hyperbolic tangent: x -> atanh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L422-L424

";

%feature("docstring")  casadi::GenericExpressionCommon::asinh(const SXElem 
&x) "

[INTERNAL] 
Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434-L436

";

%feature("docstring") casadi::casadi_asinh "

Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434-L436

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_asinh "

Inverse hyperbolic sin: x -> asinh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L434-L436

";

%feature("docstring")  casadi::GenericExpressionCommon::acosh(const SXElem 
&x) "

[INTERNAL] 
Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446-L448

";

%feature("docstring") casadi::casadi_acosh "

Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446-L448

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_acosh "

Inverse hyperbolic cosine: x -> acosh(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pe

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L446-L448

";

%feature("docstring")  casadi::GenericExpressionCommon::exp(const SXElem &x)
 "

[INTERNAL] 
Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458-L460

";

%feature("docstring") casadi::casadi_exp "

Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458-L460

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_exp "

Elementwise exponential: x -> exp(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L458-L460

";

%feature("docstring")  casadi::GenericExpressionCommon::log(const SXElem &x)
 "

[INTERNAL] 
Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470-L472

";

%feature("docstring") casadi::casadi_log "

Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470-L472

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log "

Natural logarithm: x -> log(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L470-L472

";

%feature("docstring")  casadi::GenericExpressionCommon::log10(const SXElem 
&x) "

[INTERNAL] 
Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482-L484

";

%feature("docstring") casadi::casadi_log10 "

Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482-L484

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log10 "

Base-10 logarithm: x -> log10(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_ph

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L482-L484

";

%feature("docstring")  casadi::GenericExpressionCommon::log1p(const SXElem 
&x) "

[INTERNAL] 
Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494-L496

";

%feature("docstring") casadi::casadi_log1p "

Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494-L496

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_log1p "

Precision variant for natural logarithm: x -> log(x+1)

Extra doc: https://github.com/casadi/casadi/wiki/L_pi

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L494-L496

";

%feature("docstring")  casadi::GenericExpressionCommon::expm1(const SXElem 
&x) "

[INTERNAL] 
Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506-L508

";

%feature("docstring") casadi::casadi_expm1 "

Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506-L508

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_expm1 "

Precision variant for elementwise exponential: x -> exp(x)-1.

Extra doc: https://github.com/casadi/casadi/wiki/L_pj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L506-L508

";

%feature("docstring")  casadi::GenericExpressionCommon::floor(const SXElem 
&x) "

[INTERNAL] 
Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518-L520

";

%feature("docstring") casadi::casadi_floor "

Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518-L520

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_floor "

Round down to nearest integer: x -> floor(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L518-L520

";

%feature("docstring")  casadi::GenericExpressionCommon::ceil(const SXElem 
&x) "

[INTERNAL] 
Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530-L532

";

%feature("docstring") casadi::casadi_ceil "

Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530-L532

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_ceil "

Round up to nearest integer: x -> ceil(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pl

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L530-L532

";

%feature("docstring")  casadi::GenericExpressionCommon::erf(const SXElem &x)
 "

[INTERNAL] 
Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542-L544

";

%feature("docstring") casadi::casadi_erf "

Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542-L544

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_erf "

Error function: x -> erf(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L542-L544

";

%feature("docstring")  casadi::GenericExpressionCommon::erfinv(const SXElem 
&x) "

[INTERNAL] 
Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554-L556

";

%feature("docstring") casadi::casadi_erfinv "

Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554-L556

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_erfinv "

Inverse error function: x -> erfinv(x)

Extra doc: https://github.com/casadi/casadi/wiki/L_pn

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L554-L556

";

%feature("docstring")  casadi::GenericExpressionCommon::sign(const SXElem 
&x) "

[INTERNAL] 
Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571-L573

";

%feature("docstring") casadi::casadi_sign "

Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571-L573

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_sign "

Sign function:

sign(x) := -1 for x<0 sign(x) := 1 for x>0, sign(0) := 0 sign(NaN) := 
NaN

Extra doc: https://github.com/casadi/casadi/wiki/L_po

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L571-L573

";

%feature("docstring")  casadi::GenericExpressionCommon::pow(const SXElem &x,
 const SXElem &y) "

[INTERNAL] 
Elementwise power: (x,y) -> x.^y.

Extra doc: https://github.com/casadi/casadi/wiki/L_pp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L583

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L583-L585

";

%feature("docstring")  casadi::GenericExpressionCommon::mod(const SXElem &x,
 const SXElem &y) "

[INTERNAL] 
Remainder after division: (x,y) -> fmod(x,y)

This Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607-L609

";

%feature("docstring") casadi::casadi_mod "

Remainder after division: (x,y) -> fmod(x,y)

This Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607-L609

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_mod "

Remainder after division: (x,y) -> fmod(x,y)

This Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/fmod

Notably:
fmod(5,3) -> 2

fmod(5,-3) -> 2

fmod(-5,3) -> -2

fmod(-5,-3) -> -2

This is equivalent to Python's numpy.fmod and Matlab's rem.

\\\\seealso remainder

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_pq 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L607-L609

";

%feature("docstring")  casadi::GenericExpressionCommon::remainder(const 
SXElem &x, const SXElem &y) "

[INTERNAL] 
Remainder after division: (x,y) -> remainder(x,y)

This Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634-L636

";

%feature("docstring") casadi::casadi_remainder "

Remainder after division: (x,y) -> remainder(x,y)

This Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634-L636

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_remainder "

Remainder after division: (x,y) -> remainder(x,y)

This Function follows the convention of 
https://en.cppreference.com/w/c/numeric/math/remainder

Notably:
remainder(5,3) -> -1

remainder(5,-3) -> -1

remainder(-5,3) -> 1

remainder(-5,-3) -> 1

This is equivalent to Python's math.remainder. There is no equivalence
 in 
Matlab.

\\\\seealso fmod

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_24x 
  



Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L634-L636

";

%feature("docstring")  casadi::GenericExpressionCommon::atan2(const SXElem 
&y, const SXElem &x) "

[INTERNAL] 
Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648-L650

";

%feature("docstring") casadi::casadi_atan2 "

Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648-L650

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_atan2 "

Two argument arc tangent: (y,x) -> atan2(y,x)

theta = atan2(y,x) corresponds to x = r cos(theta), y = r sin(theta)

Extra doc: https://github.com/casadi/casadi/wiki/L_pr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L648-L650

";

%feature("docstring")  casadi::GenericExpressionCommon::if_else_zero(const 
SXElem &x, const SXElem &y) "

[INTERNAL] 
Conditional assignment: (x,y) -> x ? y : 0.

Extra doc: https://github.com/casadi/casadi/wiki/L_ps

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L660

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L660-L662

";

%feature("docstring")  casadi::GenericExpressionCommon::fmin(const SXElem 
&x, const SXElem &y) "

[INTERNAL] 
Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672-L674

";

%feature("docstring") casadi::casadi_fmin "

Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672-L674

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_fmin "

Smallest of two values: (x,y) -> min(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L672-L674

";

%feature("docstring")  casadi::GenericExpressionCommon::fmax(const SXElem 
&x, const SXElem &y) "

[INTERNAL] 
Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684-L686

";

%feature("docstring") casadi::casadi_fmax "

Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684-L686

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_fmax "

Largest of two values: (x,y) -> max(x,y)

Extra doc: https://github.com/casadi/casadi/wiki/L_pu

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L684-L686

";

%feature("docstring")  casadi::GenericExpressionCommon::copysign(const 
SXElem &x, const SXElem &y) "

[INTERNAL] 
Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710-L712

";

%feature("docstring") casadi::casadi_copysign "

Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710-L712

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_copysign "

Copy sign

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L710-L712

";

%feature("docstring")  casadi::GenericExpressionCommon::constpow(const 
SXElem &x, const SXElem &y) "

[INTERNAL] 
Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720-L722

";

%feature("docstring") casadi::casadi_constpow "

Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720-L722

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_constpow "

Elementwise power with const power

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L720-L722

";

%feature("docstring")  casadi::GenericExpressionCommon::printme(const SXElem
 &x, const SXElem &y) "

[INTERNAL] 
Debug printing

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L730

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L730-L732

";

%feature("docstring")  casadi::GenericExpressionCommon::hypot(const SXElem 
&x, const SXElem &y) "

[INTERNAL] 
Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742-L744

";

%feature("docstring") casadi::casadi_hypot "

Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742-L744

";

%feature("docstring")  casadi::GenericExpressionCommon::casadi_hypot "

Precision variant for 2 norm: (x,y) -> sqrt(x^2+y^2)

Extra doc: https://github.com/casadi/casadi/wiki/L_pw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_expression.hpp#L742-L744

";

%feature("docstring")  casadi::SXElem::if_else(const SXElem &x, const SXElem
 &y, const SXElem &z) "

[INTERNAL] 
Ternary if_else: x ? y : z.

Extra doc: https://github.com/casadi/casadi/wiki/L_113

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L265

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L265-L267

";

%feature("docstring") casadi::casadi_if_else "

Ternary if_else: x ? y : z.

Extra doc: https://github.com/casadi/casadi/wiki/L_113

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L265

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L265-L267

";

%feature("docstring")  casadi::SXElem::casadi_if_else "

Ternary if_else: x ? y : z.

Extra doc: https://github.com/casadi/casadi/wiki/L_113

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L265

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L265-L267

";

%feature("docstring") casadi::SXElem::SXElem() "

[INTERNAL] 
Default constructor (not-a-number)

Object is initialized as not-a-number.

Extra doc: https://github.com/casadi/casadi/wiki/L_10j

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L78

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L46-L49

";

%feature("docstring") casadi::SXElem::SXElem(double val) "

[INTERNAL] 
Numerical constant constructor.

Parameters:
-----------

val: 
Numerical value

Extra doc: https://github.com/casadi/casadi/wiki/L_10k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L86

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L64-L81

";

%feature("docstring") casadi::SXElem::SXElem(const SXElem &scalar) "

[INTERNAL] 
Copy constructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_10m

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L107

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L59-L62

";

%feature("docstring") casadi::SXElem::~SXElem "

[INTERNAL] 
Destructor.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L110

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L87-L89

";

%feature("docstring")  casadi::SXElem::disp(std::ostream &stream, bool 
more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L129

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L133-L135

";

%feature("docstring") casadi::SXElem::__nonzero__ "

[INTERNAL] 
Check the truth value of this node.

Introduced to catch bool(x) situations in python

Extra doc: https://github.com/casadi/casadi/wiki/L_10q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L156

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L150-L153

";

%feature("docstring")  casadi::SXElem::is_leaf() const "

[INTERNAL] 
check if this  SXElem is a leaf of the SX graph

An  SXElem qualifies as leaf when it has no dependencies.

Extra doc: https://github.com/casadi/casadi/wiki/L_10r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L163

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L435-L438

";

%feature("docstring")  casadi::SXElem::is_constant() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_integer() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_symbolic() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_commutative() const "

[INTERNAL] 
Check whether a binary  SXElem is commutative.

Extra doc: https://github.com/casadi/casadi/wiki/L_10s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L170

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L440-L443

";

%feature("docstring")  casadi::SXElem::is_zero() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_almost_zero(double tol) const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_one() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_minus_one() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_nan() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_inf() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_minus_inf() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::name() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::op() const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_op(casadi_int op) const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_regular() const "

[INTERNAL] 
Checks if expression does not contain NaN or Inf.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L183

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L611-L617

";

%feature("docstring")  casadi::SXElem::is_nonnegative() const "

[INTERNAL] 
Check if a value is always nonnegative (false negatives are 
allowed)

Extra doc: https://github.com/casadi/casadi/wiki/L_10t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L188

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L508-L516

";

%feature("docstring")  casadi::SXElem::dep(casadi_int ch=0) const "

[INTERNAL] ";

%feature("docstring")  casadi::SXElem::is_doubled() const "

[INTERNAL] 
Check if the node is the sum of two equal expressions.

Extra doc: https://github.com/casadi/casadi/wiki/L_10u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L155-L157

";

%feature("docstring")  casadi::SXElem::n_dep() const "

[INTERNAL] 
Get the number of dependencies of a binary  SXElem.

Extra doc: https://github.com/casadi/casadi/wiki/L_10v

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L205

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L531-L533

";

%feature("docstring") casadi::SXElem::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given SXNode.

If the  SXElem does not point to any node, 0 is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_10w

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L212

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L535-L537

";

%feature("docstring")  casadi::SXElem::inv() const "

[INTERNAL] 
Element-wise inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_10y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L159-L165

";

%feature("docstring") casadi::casadi_inv "

Element-wise inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_10y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L159-L165

";

%feature("docstring")  casadi::SXElem::casadi_inv "

Element-wise inverse.

Extra doc: https://github.com/casadi/casadi/wiki/L_10y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L159-L165

";

%feature("docstring")  casadi::SXElem::is_null() "

[INTERNAL] 
 SXElem nodes are not allowed to be null.

Extra doc: https://github.com/casadi/casadi/wiki/L_112

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L260

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L260-L260

";

%feature("docstring")  casadi::SXElem::serialize(SerializingStream &s) const
 "

[INTERNAL] 
Serialize an object.

Extra doc: https://github.com/casadi/casadi/wiki/L_114

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.hpp#L272

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/sx_elem.cpp#L619-L621

";


// File: classcasadi_1_1SymbolicQr.xml
%feature("docstring") casadi::SymbolicQr "

[INTERNAL] 
Diagrams
--------



C++ includes: e0_diagram.hpp
";


// File: classcasadi_1_1TrilSolve.xml


// File: classcasadi_1_1TrilSolveUnity.xml


// File: classcasadi_1_1TriuSolve.xml


// File: classcasadi_1_1TriuSolveUnity.xml


// File: classcasadi_1_1WeakRef.xml
%feature("docstring") casadi::WeakRef "

[INTERNAL] 
Weak reference type.

A weak reference to a  SharedObject
Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_ax

C++ includes: shared_object.hpp
";

%feature("docstring") casadi::WeakRef::WeakRef(int dummy=0) "

[INTERNAL] 
Default constructor.

Extra doc: https://github.com/casadi/casadi/wiki/L_ay

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L188

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L133-L135

";

%feature("docstring") casadi::WeakRef::WeakRef(SharedObject shared) "

[INTERNAL] 
Construct from a shared object (also implicit type conversion)

Extra doc: https://github.com/casadi/casadi/wiki/L_az

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L193

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L157-L159

";

%feature("docstring")  casadi::WeakRef::shared() "

[INTERNAL] 
Get a shared (owning) reference.

Extra doc: https://github.com/casadi/casadi/wiki/L_b0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L198

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L141-L147

";

%feature("docstring") casadi::casadi_shared "

Get a shared (owning) reference.

Extra doc: https://github.com/casadi/casadi/wiki/L_b0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L198

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L141-L147

";

%feature("docstring")  casadi::WeakRef::casadi_shared "

Get a shared (owning) reference.

Extra doc: https://github.com/casadi/casadi/wiki/L_b0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L198

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L141-L147

";

%feature("docstring")  casadi::WeakRef::alive() const "

[INTERNAL] 
Check if alive.

Extra doc: https://github.com/casadi/casadi/wiki/L_b1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L203

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L137-L139

";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::WeakRef::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: classcasadi_1_1XmlFile.xml
%feature("docstring") casadi::XmlFile "

[INTERNAL] 
XML parser.

Can be used for parsing XML files into CasADi data structures.

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_7k

C++ includes: xml_file.hpp
";

%feature("docstring") casadi::XmlFile::XmlFile() "

[INTERNAL] ";

%feature("docstring") casadi::XmlFile::XmlFile(const std::string &name) "

[INTERNAL] ";

%feature("docstring") casadi::XmlFile::~XmlFile "

[INTERNAL] ";

%feature("docstring")  casadi::XmlFile::parse(const std::string &filename) "

[INTERNAL] ";

%feature("docstring")  casadi::XmlFile::dump(const std::string &filename, 
const XmlNode &node) "

[INTERNAL] ";

%feature("docstring")  casadi::SharedObject::class_name() const "

[INTERNAL] 
Get class name.

Extra doc: https://github.com/casadi/casadi/wiki/L_au

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L99-L101

";

%feature("docstring")  casadi::SharedObject::disp(std::ostream &stream, bool
 more=false) const "

[INTERNAL] 
Print a description of the object.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L103-L109

";

%feature("docstring")  casadi::SharedObject::get_str(bool more=false) const 
"

[INTERNAL] 
Get string representation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L138-L142

";

%feature("docstring")  casadi::SharedObject::is_null() const "

[INTERNAL] 
Is a null pointer?

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L150

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L73-L75

";

%feature("docstring") casadi::XmlFile::__hash__ "

[INTERNAL] 
Returns a number that is unique for a given Node.

If the Object does not point to any node, \"0\" is returned.

Extra doc: https://github.com/casadi/casadi/wiki/L_av

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L157

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.cpp#L129-L131

";


// File: namespace_0d359.xml


// File: namespacecasadi.xml
%feature("docstring")  casadi::collocation_points(casadi_int order, const std::string &scheme="radau") "
[INTERNAL] 
Obtain collocation points of specific order and scheme.

Parameters:
-----------

order: 
Which order (1 to 9 supported)

scheme: 
'radau' or 'legendre'

Extra doc: https://github.com/casadi/casadi/wiki/L_1so

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L120

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L120-L122

";

%feature("docstring")  casadi::collocation_pointsL(casadi_int order, const 
std::string &scheme) "

[INTERNAL] 
Obtain collocation points of specific order and scheme.

Parameters:
-----------

order: 
Which order (1 to 9 supported)

scheme: 
'radau' or 'legendre'

Extra doc: https://github.com/casadi/casadi/wiki/L_1so

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L124

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L124-L126

";

%feature("docstring")  casadi::dae_reduce_index(const MXDict &dae, Dict 
&stats, const Dict &opts={}) "

[INTERNAL] 
Reduce index.

Index reduction leads to a new set of variables and equations.

In the process, a set of constraints (algebraic equations or 
derivatives) 
a.k.a invariants is constructed that are invariant to the
 problem: whenever
 an initial point satisfies these constraints, the 
boundary-value-problem 
outcome will keep satisfying those constraints 
automatically, even though 
they are  not part of the reduced DAE.

For any practical numerical integration method, there will be 
numerical 
drift away from satisfaction of those constraints. In other 
words, you will
 see the value of invariants slowly moving away from 
original zero.

A classic mitigation technique is Baumgarte stabilization: you add 
these 
invariants to the reduced DAE as a correction term that acts in 
a way to 
make small (numerical) perturbations to the invariants decay 
to the origin 
as a dampened linear system.

in which a certain set of constraints (algebraic equations or 
derivatives) 
has been dropped in favour of

Parameters:
-----------

dae: 
Expression dictionary describing the DAE

Each value must be a dense column vector.

keys:
x_impl: symbol for implicit differential states

dx_impl: symbol for implicit differential state derivatives

z: symbol for algebraic variables

alg: expression for algebraic equations

t: symbol for time

p: symbol for parameters

Parameters:
-----------

opts: 
Option dictionary

'baumgarte_pole': double Poles (inverse time constants) of the 
Baumgarte 
invariant correction term. Must be <0 to dampen out 
perturbations 0 
(default) amounts to no correction. Corresponds to 
-gamma of equation (1.5)
 in Ascher, Uri M., Hongsheng Chin, and 
Sebastian Reich. \"Stabilization of
 DAEs and invariant manifolds.\" 
Numerische Mathematik 67.2 (1994): 
131-149.

Parameters:
-----------

stats: 
Statistics

Expression dictionary describing the reduced DAE

In addition the fields allowed in the input DAE, the following keys 
occur:

x: symbol for explicit differential states

ode: expression for right-hand-side of explicit differential states

I: expression for invariants

Extra doc: https://github.com/casadi/casadi/wiki/L_23h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L1056

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L1056-L1058

";

%feature("docstring")  casadi::dae_reduce_index(const SXDict &dae, Dict 
&stats, const Dict &opts) "

[INTERNAL] 
Reduce index.

Index reduction leads to a new set of variables and equations.

In the process, a set of constraints (algebraic equations or 
derivatives) 
a.k.a invariants is constructed that are invariant to the
 problem: whenever
 an initial point satisfies these constraints, the 
boundary-value-problem 
outcome will keep satisfying those constraints 
automatically, even though 
they are  not part of the reduced DAE.

For any practical numerical integration method, there will be 
numerical 
drift away from satisfaction of those constraints. In other 
words, you will
 see the value of invariants slowly moving away from 
original zero.

A classic mitigation technique is Baumgarte stabilization: you add 
these 
invariants to the reduced DAE as a correction term that acts in 
a way to 
make small (numerical) perturbations to the invariants decay 
to the origin 
as a dampened linear system.

in which a certain set of constraints (algebraic equations or 
derivatives) 
has been dropped in favour of

Parameters:
-----------

dae: 
Expression dictionary describing the DAE

Each value must be a dense column vector.

keys:
x_impl: symbol for implicit differential states

dx_impl: symbol for implicit differential state derivatives

z: symbol for algebraic variables

alg: expression for algebraic equations

t: symbol for time

p: symbol for parameters

Parameters:
-----------

opts: 
Option dictionary

'baumgarte_pole': double Poles (inverse time constants) of the 
Baumgarte 
invariant correction term. Must be <0 to dampen out 
perturbations 0 
(default) amounts to no correction. Corresponds to 
-gamma of equation (1.5)
 in Ascher, Uri M., Hongsheng Chin, and 
Sebastian Reich. \"Stabilization of
 DAEs and invariant manifolds.\" 
Numerische Mathematik 67.2 (1994): 
131-149.

Parameters:
-----------

stats: 
Statistics

Expression dictionary describing the reduced DAE

In addition the fields allowed in the input DAE, the following keys 
occur:

x: symbol for explicit differential states

ode: expression for right-hand-side of explicit differential states

I: expression for invariants

Extra doc: https://github.com/casadi/casadi/wiki/L_23h

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L1060

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L1060-L1062

";

%feature("docstring")  casadi::dae_map_semi_expl(const MXDict &dae, const 
MXDict &dae_red, Function &state_to_orig, Function &phi) "

[INTERNAL] 
Turn a reduced DAE into a semi explicit form suitable for CasADi
 
integrator.

Parameters:
-----------

dae: 
Original (unreduced) DAE structure

dae_red: 
Reduced DAE (see dae_reduce_index)

state_to_orig: 
A mapping of integrator (semi explicit) states to states of 
the 
original DAE

phi: 
A function to compute the invariants of the reduced DAE Inputs:
x and 
z: (semi explicit) integrator states; typically integrator 
outputs xf and 
zf

p: parameters

t: time

Semi explicit DAE dictionary, suitable to pass to a CasADi integrator

See: 
 dae_reduce_index

Extra doc: https://github.com/casadi/casadi/wiki/L_1su

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L1200

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L1200-L1203

";

%feature("docstring")  casadi::dae_map_semi_expl(const SXDict &dae, const 
SXDict &dae_red, Function &state_to_orig, Function &phi) "

[INTERNAL] 
Turn a reduced DAE into a semi explicit form suitable for CasADi
 
integrator.

Parameters:
-----------

dae: 
Original (unreduced) DAE structure

dae_red: 
Reduced DAE (see dae_reduce_index)

state_to_orig: 
A mapping of integrator (semi explicit) states to states of 
the 
original DAE

phi: 
A function to compute the invariants of the reduced DAE Inputs:
x and 
z: (semi explicit) integrator states; typically integrator 
outputs xf and 
zf

p: parameters

t: time

Semi explicit DAE dictionary, suitable to pass to a CasADi integrator

See: 
 dae_reduce_index

Extra doc: https://github.com/casadi/casadi/wiki/L_1su

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L1205

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L1205-L1208

";

%feature("docstring")  casadi::dae_init_gen(const MXDict &dae, const MXDict 
&dae_red, const std::string &init_solver, const DMDict 
&init_strength=DMDict(), const Dict &init_solver_options=Dict()) "

[INTERNAL] 
Obtain a generator  Function for producing consistent initial 
guesses of a reduced DAE.

Parameters:
-----------

dae: 
Original (unreduced) DAE structure

dae_red: 
Reduced DAE (see dae_reduce_index)

init_solver: 
NLP solver plugin name for nlpsol used to construct an initial
 guess

init_strength: 
Influence the nature of the NLP Structure with keys x_impl, 
dx_impl, z
 corresponding to inputs of init_gen Each key maps to a DM that 
should
 match the variable size corresponding to that key. For each variable
 
the meaning of the corresponding DM value is as follows: When >=0, 

indicates that the provided initial guess is used in a quadratic 
penalty 
(value used as weight) When -1, indicates that the provided 
initial guess 
must be observed (simple bound on variable)

init_solver_options: 
NLP solver options to be passed to nlpsol

init_gen A function to generate a consistent initial guess that can be
 used
 to pass to an integrator constructed from a semi explict reduced
 DAE 
Inputs:
x_impl, dx_impl, z: initial guesses in the original DAE space

p: parameters

t: time Outputs:

x0, z0: (semi explicit) integrator states and algebraic variables; 

typically used as input for integrators

See: 
 dae_reduce_index

Extra doc: https://github.com/casadi/casadi/wiki/L_1sv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L1210

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L1210-L1213

";

%feature("docstring")  casadi::dae_init_gen(const SXDict &dae, const SXDict 
&dae_red, const std::string &init_solver, const DMDict &init_strength, const
 Dict &init_solver_options) "

[INTERNAL] 
Obtain a generator  Function for producing consistent initial 
guesses of a reduced DAE.

Parameters:
-----------

dae: 
Original (unreduced) DAE structure

dae_red: 
Reduced DAE (see dae_reduce_index)

init_solver: 
NLP solver plugin name for nlpsol used to construct an initial
 guess

init_strength: 
Influence the nature of the NLP Structure with keys x_impl, 
dx_impl, z
 corresponding to inputs of init_gen Each key maps to a DM that 
should
 match the variable size corresponding to that key. For each variable
 
the meaning of the corresponding DM value is as follows: When >=0, 

indicates that the provided initial guess is used in a quadratic 
penalty 
(value used as weight) When -1, indicates that the provided 
initial guess 
must be observed (simple bound on variable)

init_solver_options: 
NLP solver options to be passed to nlpsol

init_gen A function to generate a consistent initial guess that can be
 used
 to pass to an integrator constructed from a semi explict reduced
 DAE 
Inputs:
x_impl, dx_impl, z: initial guesses in the original DAE space

p: parameters

t: time Outputs:

x0, z0: (semi explicit) integrator states and algebraic variables; 

typically used as input for integrators

See: 
 dae_reduce_index

Extra doc: https://github.com/casadi/casadi/wiki/L_1sv

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L1215

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L1215-L1218

";

%feature("docstring")  casadi::to_string(DynIn v) "

[INTERNAL] 
Convert to string

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L31

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L31-L41

";

%feature("docstring")  casadi::to_string(DynOut v) "

[INTERNAL] 
Convert to string

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L43

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L43-L51

";

%feature("docstring")  casadi::matrixName() "

[INTERNAL] 
Get typename.

Extra doc: https://github.com/casadi/casadi/wiki/L_18d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L56

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L56-L57

";

%feature("docstring")  casadi::matrixName< double >() "

[INTERNAL] 
Get typename.

Extra doc: https://github.com/casadi/casadi/wiki/L_18d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L58

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L58-L58

";

%feature("docstring")  casadi::matrixName< casadi_int >() "

[INTERNAL] 
Get typename.

Extra doc: https://github.com/casadi/casadi/wiki/L_18d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L59

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/matrix_decl.hpp#L59-L59

";

%feature("docstring")  casadi::nlpsol_default_in(casadi_int ind) "

[INTERNAL] 
Default input for an NLP solver.

Extra doc: https://github.com/casadi/casadi/wiki/L_1t4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L209

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L209-L220

";

%feature("docstring")  casadi::nlpsol_default_in() "

[INTERNAL] 
Default input for an NLP solver.

Extra doc: https://github.com/casadi/casadi/wiki/L_1t4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L222

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L222-L226

";

%feature("docstring")  casadi::str(const T &v) "

[INTERNAL] 
String representation, any type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L243

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L243-L247

";

%feature("docstring")  casadi::str(const T &v, bool more) "

[INTERNAL] 
String representation, CasADi type.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L250

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L250-L252

";

%feature("docstring")  casadi::str(const std::vector< T > &v, bool 
more=false) "

[INTERNAL] 
String representation of vector.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L255

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L255-L264

";

%feature("docstring")  casadi::str(const std::set< T > &v, bool more=false) 
"

[INTERNAL] 
String representation of set.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L267

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L267-L277

";

%feature("docstring")  casadi::str(const std::pair< T1, T2 > &p, bool 
more=false) "

[INTERNAL] 
String representation of pair.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L280

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L280-L284

";

%feature("docstring")  casadi::str(const std::map< T1, T2 > &p, bool 
more=false) "

[INTERNAL] 
String representation of a map.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L287

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L287-L297

";

%feature("docstring")  casadi::str(const std::map< std::string, T2 > &p, 
bool more=false) "

[INTERNAL] 
String representation of a dictionary.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L300

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L300-L310

";

%feature("docstring")  casadi::strvec() "

[INTERNAL] 
Create a list of strings from  VA_ARGS, no argument.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L187

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L187-L189

";

%feature("docstring")  casadi::strvec(const T1 &t1) "

[INTERNAL] 
Create a list of strings from  VA_ARGS, one argument.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L193

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L193-L195

";

%feature("docstring")  casadi::strvec(const T1 &t1, const T2 &t2) "

[INTERNAL] 
Create a list of strings from  VA_ARGS, two arguments.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L199

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L199-L201

";

%feature("docstring")  casadi::strvec(const T1 &t1, const T2 &t2, const T3 
&t3) "

[INTERNAL] 
Create a list of strings from  VA_ARGS, three arguments.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L205

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L205-L207

";

%feature("docstring")  casadi::strvec(const T1 &t1, const T2 &t2, const T3 
&t3, const T4 &t4) "

[INTERNAL] 
Create a list of strings from  VA_ARGS, four arguments.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L211

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L211-L214

";

%feature("docstring")  casadi::strvec(const T1 &t1, const T2 &t2, const T3 
&t3, const T4 &t4, const T5 &t5) "

[INTERNAL] 
Create a list of strings from  VA_ARGS, five arguments.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L218

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L218-L221

";

%feature("docstring")  casadi::strvec(const T1 &t1, const T2 &t2, const T3 
&t3, const T4 &t4, const T5 &t5, const T6 &t6) "

[INTERNAL] 
Create a list of strings from  VA_ARGS, six arguments.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L225

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L225-L228

";

%feature("docstring")  casadi::fmtstr(const std::string &fmt, const 
std::vector< std::string > &args) "

[INTERNAL] 
Create a string from a formatted string.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L231

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_common.hpp#L231-L239

";

%feature("docstring")  casadi::is_zero(const T &x) "

[INTERNAL] ";

%feature("docstring")  casadi::uout() "

[INTERNAL] ";

%feature("docstring")  casadi::uerr() "

[INTERNAL] ";

%feature("docstring")  casadi::to_int(casadi_int rhs) "

[INTERNAL] ";

%feature("docstring")  casadi::to_int(const std::vector< casadi_int > &rhs) 
"

[INTERNAL] ";

%feature("docstring")  casadi::to_int(const std::vector< std::vector< 
casadi_int > > &rhs) "

[INTERNAL] ";

%feature("docstring")  casadi::all(const std::vector< bool > &v) "

[INTERNAL] 
Check if all arguments are true.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L76

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L76-L81

";

%feature("docstring") casadi::casadi_all "

Check if all arguments are true.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L76

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L76-L81

";

%feature("docstring")  casadi::casadi_all "

Check if all arguments are true.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L76

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L76-L81

";

%feature("docstring")  casadi::any(const std::vector< bool > &v) "

[INTERNAL] 
Check if any arguments are true.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L83-L88

";

%feature("docstring") casadi::casadi_any "

Check if any arguments are true.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L83-L88

";

%feature("docstring")  casadi::casadi_any "

Check if any arguments are true.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L83

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L83-L88

";

%feature("docstring")  casadi::is_range(const std::vector< casadi_int > &v, 
casadi_int start, casadi_int stop, casadi_int step=1) "

[INTERNAL] 
Check if a vector matches a range.

Extra doc: https://github.com/casadi/casadi/wiki/L_1l7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L90

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L90-L100

";

%feature("docstring")  casadi::range(casadi_int start, casadi_int stop, 
casadi_int step=1, casadi_int len=std::numeric_limits< casadi_int >::max()) 
"

[INTERNAL] 
Range function.

Parameters:
-----------

start:

stop:

step:

len: 
Consider a infinitely long list [start, start+step, start+2*step, ...]

 Elements larger than or equal to stop are chopped off.

Extra doc: https://github.com/casadi/casadi/wiki/L_1l6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L103

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L103-L115

";

%feature("docstring")  casadi::range(casadi_int stop) "

[INTERNAL] 
Range function.

Parameters:
-----------

stop:

list [0, 1, 2...stop-1]

Extra doc: https://github.com/casadi/casadi/wiki/L_1l8

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L132

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L132-L134

";

%feature("docstring")  casadi::is_equally_spaced(const std::vector< double >
 &v) "

[INTERNAL] ";

%feature("docstring")  casadi::complement(const std::vector< casadi_int > 
&v, casadi_int size) "

[INTERNAL] 
Returns the list of all i in [0, size[ not found in supplied 
list.

The supplied vector may contain duplicates and may be non-monotonous 
The 
supplied vector will be checked for bounds The result vector is 
guaranteed 
to be monotonously increasing

Extra doc: https://github.com/casadi/casadi/wiki/L_1lf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L136

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L136-L152

";

%feature("docstring")  casadi::lookupvector(const std::vector< casadi_int > 
&v, casadi_int size) "

[INTERNAL] 
Returns a vector for quickly looking up entries of supplied 
list.

lookupvector[i]!=-1 <=> v contains i v[lookupvector[i]] == i <=> v 
contains
 i

Duplicates are treated by looking up last occurrence

Extra doc: https://github.com/casadi/casadi/wiki/L_1lg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L154

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L154-L163

";

%feature("docstring")  casadi::lookupvector(const std::vector< casadi_int > 
&v) "

[INTERNAL] ";

%feature("docstring")  casadi::is_permutation(const std::vector< casadi_int 
> &order) "

[INTERNAL] 
Does the list represent a permutation?

Extra doc: https://github.com/casadi/casadi/wiki/L_250

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L170

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L170-L175

";

%feature("docstring")  casadi::invert_permutation(const std::vector< 
casadi_int > &a) "

[INTERNAL] 
inverse a permutation vector

Extra doc: https://github.com/casadi/casadi/wiki/L_251

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L177

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L177-L184

";

%feature("docstring")  casadi::tensor_permute_mapping(const std::vector< 
casadi_int > &dims, const std::vector< casadi_int > &order) "

[INTERNAL] 
Computes a mapping for a (dense) tensor permutation.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L187

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L187-L252

";

%feature("docstring")  casadi::join(const std::vector< std::string > &l, 
const std::string &delim) "

[INTERNAL] ";

%feature("docstring")  casadi::join(const std::vector< T > &a, const 
std::vector< T > &b) "

[INTERNAL] 
Join two lists.

Extra doc: https://github.com/casadi/casadi/wiki/L_1lb

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L537

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L537-L541

";

%feature("docstring")  casadi::join(const std::vector< T > &a, const 
std::vector< T > &b, const std::vector< T > &c) "

[INTERNAL] 
Join three lists.

Extra doc: https://github.com/casadi/casadi/wiki/L_1lc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L544

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L544-L549

";

%feature("docstring")  casadi::startswith(const std::string &s, const 
std::string &p) "

[INTERNAL] 
Checks if s starts with p.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L280

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L280-L286

";

%feature("docstring")  casadi::replace(const std::string &s, const 
std::string &p, const std::string &r) "

[INTERNAL] 
Replace all occurences of p with r in s.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L288

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L288-L297

";

%feature("docstring")  casadi::temporary_file(const std::string &prefix, 
const std::string &suffix) "

[INTERNAL] ";

%feature("docstring")  casadi::boolvec_not(const std::vector< bool > &v) "

[INTERNAL] 
Invert all entries.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L371

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L371-L376

";

%feature("docstring")  casadi::boolvec_and(const std::vector< bool > &lhs, 
const std::vector< bool > &rhs) "

[INTERNAL] 
And operation on boolean vector.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L378

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L378-L384

";

%feature("docstring")  casadi::boolvec_or(const std::vector< bool > &lhs, 
const std::vector< bool > &rhs) "

[INTERNAL] 
Or operation on boolean vector.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L386

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.cpp#L386-L392

";

%feature("docstring")  casadi::boolvec_to_index(const std::vector< bool > 
&v) "

[INTERNAL] ";

%feature("docstring")  casadi::normalized_setup(std::istream &stream) "

[INTERNAL] ";

%feature("docstring")  casadi::normalized_setup(std::ostream &stream) "

[INTERNAL] ";

%feature("docstring")  casadi::str_bvec(bvec_t v) "

[INTERNAL] ";

%feature("docstring")  casadi::vector_static_cast(const std::vector< S > 
&rhs) "

[INTERNAL] ";

%feature("docstring")  casadi::vector_slice(const std::vector< T > &v, const
 std::vector< casadi_int > &i) "

[INTERNAL] 
Slicing vector.

Parameters:
-----------

v: 
Vector to slice

i: 
List of indices

Extra doc: https://github.com/casadi/casadi/wiki/L_1l9

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L513

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L513-L527

";

%feature("docstring")  casadi::reverse(const std::vector< T > &v) "

[INTERNAL] 
Reverse a list.

Extra doc: https://github.com/casadi/casadi/wiki/L_1la

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L530-L534

";

%feature("docstring") casadi::casadi_reverse "

Reverse a list.

Extra doc: https://github.com/casadi/casadi/wiki/L_1la

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L530-L534

";

%feature("docstring")  casadi::casadi_reverse "

Reverse a list.

Extra doc: https://github.com/casadi/casadi/wiki/L_1la

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L530

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L530-L534

";

%feature("docstring")  casadi::permute(const std::vector< T > &a, const 
std::vector< casadi_int > &order) "

[INTERNAL] 
permute a list

Extra doc: https://github.com/casadi/casadi/wiki/L_1ld

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L552

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L552-L556

";

%feature("docstring")  casadi::find(const std::vector< T > &v) "

[INTERNAL] 
find nonzeros

Extra doc: https://github.com/casadi/casadi/wiki/L_1le

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L559

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L559-L565

";

%feature("docstring") casadi::casadi_find "

find nonzeros

Extra doc: https://github.com/casadi/casadi/wiki/L_1le

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L559

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L559-L565

";

%feature("docstring")  casadi::casadi_find "

find nonzeros

Extra doc: https://github.com/casadi/casadi/wiki/L_1le

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L559

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L559-L565

";

%feature("docstring")  casadi::in_range(const std::vector< T > &v, 
casadi_int upper) "

[INTERNAL] 
Check if for each element of v holds: v_i < upper.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L608

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L608-L610

";

%feature("docstring")  casadi::in_range(const std::vector< T > &v, 
casadi_int lower, casadi_int upper) "

[INTERNAL] 
Check if for each element of v holds: lower <= v_i < upper.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L613

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L613-L619

";

%feature("docstring")  casadi::flatten_nested_vector(const std::vector< 
std::vector< T > > &nested, std::vector< S > &flat) "

[INTERNAL] 
Flatten a nested std::vector tot a single flattened vector.

Contents of nested[i] ends up in 
flat[indices[i]]..flat[indices[i+1]-1]

Extra doc: https://github.com/casadi/casadi/wiki/L_1lh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L622

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L622-L636

";

%feature("docstring")  casadi::flatten_nested_vector(const std::vector< 
std::vector< T > > &nested, std::vector< S > &flat, std::vector< I > 
&indices) "

[INTERNAL] 
Flatten a nested std::vector tot a single flattened vector.

Contents of nested[i] ends up in 
flat[indices[i]]..flat[indices[i+1]-1]

Extra doc: https://github.com/casadi/casadi/wiki/L_1li

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L639

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L639-L654

";

%feature("docstring")  casadi::is_increasing(const std::vector< T > &v) "

[INTERNAL] 
Check if the vector is strictly increasing.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L663

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L663-L671

";

%feature("docstring")  casadi::is_decreasing(const std::vector< T > &v) "

[INTERNAL] 
Check if the vector is strictly decreasing.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L674

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L674-L682

";

%feature("docstring")  casadi::is_nonincreasing(const std::vector< T > &v) "

[INTERNAL] 
Check if the vector is non-increasing.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L685

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L685-L693

";

%feature("docstring")  casadi::is_nondecreasing(const std::vector< T > &v) "

[INTERNAL] 
Check if the vector is non-decreasing.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L696

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L696-L704

";

%feature("docstring")  casadi::is_monotone(const std::vector< T > &v) "

[INTERNAL] 
Check if the vector is monotone.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L707

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L707-L709

";

%feature("docstring")  casadi::is_strictly_monotone(const std::vector< T > 
&v) "

[INTERNAL] 
Check if the vector is strictly monotone.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L712

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L712-L714

";

%feature("docstring")  casadi::has_negative(const std::vector< T > &v) "

[INTERNAL] 
Check if the vector has negative entries.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L717

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L717-L722

";

%feature("docstring")  casadi::write_matlab(std::ostream &stream, const 
std::vector< T > &v) "

[INTERNAL] 
Print vector, matlab style.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L725

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L725-L727

";

%feature("docstring")  casadi::write_matlab(std::ostream &stream, const 
std::vector< std::vector< T > > &v) "

[INTERNAL] 
Print matrix, matlab style.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L730

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L730-L735

";

%feature("docstring")  casadi::read_matlab(std::istream &stream, 
std::vector< T > &v) "

[INTERNAL] 
Read vector, matlab style.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L738

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L738-L755

";

%feature("docstring")  casadi::read_matlab(std::ifstream &file, std::vector<
 std::vector< T > > &v) "

[INTERNAL] 
Read matrix, matlab style.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L758

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L758-L781

";

%feature("docstring")  casadi::linspace(std::vector< T > &v, const F &first,
 const L &last) "

[INTERNAL] 
Matlab's linspace.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L784

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L784-L795

";

%feature("docstring") casadi::casadi_linspace "

Matlab's linspace.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L784

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L784-L795

";

%feature("docstring")  casadi::casadi_linspace "

Matlab's linspace.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L784

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L784-L795

";

%feature("docstring")  casadi::sort(const std::vector< T > &values, 
std::vector< T > &sorted_values, std::vector< casadi_int > &indices, bool 
invert_indices=false) "

[INTERNAL] 
Sort the data in a vector.

Parameters:
-----------

values: 
the vector that needs sorting

sorted_values: 
the sorted vector

indices: 
The indices such that 'sorted_values= values[indices]'

invert_indices: 
 Output indices such that 'sorted_values[indices=values'

Extra doc: https://github.com/casadi/casadi/wiki/L_1lj

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L822

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L822-L847

";

%feature("docstring")  casadi::product(const std::vector< T > &values) "

[INTERNAL] 
product

Extra doc: https://github.com/casadi/casadi/wiki/L_1lk

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L850

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L850-L854

";

%feature("docstring")  casadi::sum(const std::vector< T > &values) "

[INTERNAL] 
sum

Extra doc: https://github.com/casadi/casadi/wiki/L_1ll

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L857

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L857-L861

";

%feature("docstring")  casadi::cumsum(const std::vector< T > &values) "

[INTERNAL] 
cumulative sum

Extra doc: https://github.com/casadi/casadi/wiki/L_1lm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L864

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L864-L872

";

%feature("docstring") casadi::casadi_cumsum "

cumulative sum

Extra doc: https://github.com/casadi/casadi/wiki/L_1lm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L864

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L864-L872

";

%feature("docstring")  casadi::casadi_cumsum "

cumulative sum

Extra doc: https://github.com/casadi/casadi/wiki/L_1lm

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L864

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L864-L872

";

%feature("docstring")  casadi::diff(const std::vector< T > &values) "

[INTERNAL] 
diff

Extra doc: https://github.com/casadi/casadi/wiki/L_1ln

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L886

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L886-L893

";

%feature("docstring") casadi::casadi_diff "

diff

Extra doc: https://github.com/casadi/casadi/wiki/L_1ln

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L886

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L886-L893

";

%feature("docstring")  casadi::casadi_diff "

diff

Extra doc: https://github.com/casadi/casadi/wiki/L_1ln

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L886

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L886-L893

";

%feature("docstring")  casadi::cumsum0(const std::vector< T > &values) "

[INTERNAL] 
cumulative sum, starting with zero

Extra doc: https://github.com/casadi/casadi/wiki/L_1lo

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L875

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L875-L883

";

%feature("docstring")  casadi::is_regular(const std::vector< T > &v) "

[INTERNAL] 
Checks if array does not contain NaN or Inf.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L393

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/casadi_misc.hpp#L393-L399

";

%feature("docstring")  casadi::normalized_out(std::ostream &stream, double 
val) "

[INTERNAL] ";

%feature("docstring")  casadi::normalized_in(std::istream &stream, double 
&ret) "

[INTERNAL] ";

%feature("docstring")  casadi::applymap(T(*f)(const T &), const std::vector<
 T > &comp) "

[INTERNAL] ";

%feature("docstring")  casadi::applymap(void(*f)(T &), std::vector< T > 
&comp) "

[INTERNAL] ";

%feature("docstring")  casadi::copy_vector(const std::vector< S > &s, 
std::vector< D > &d) "

[INTERNAL] ";

%feature("docstring")  casadi::copy_vector(const S *s, std::vector< D > &d) 
"

[INTERNAL] ";

%feature("docstring")  casadi::assign_vector(const std::vector< S > &s, 
std::vector< D > &d) "

[INTERNAL] ";

%feature("docstring")  casadi::init_vector(std::vector< S > &d, const 
std::vector< D > &s) "

[INTERNAL] ";

%feature("docstring")  casadi::isUnique(const std::vector< T > &v) "

[INTERNAL] ";

%feature("docstring")  casadi::get_ptr(std::vector< T > &v) "

[INTERNAL] ";

%feature("docstring")  casadi::get_ptr(const std::vector< T > &v) "

[INTERNAL] ";

%feature("docstring")  casadi::dot(const std::vector< T > &a, const 
std::vector< T > &b) "

[INTERNAL] ";

%feature("docstring")  casadi::norm_inf(const std::vector< T > &x) "

[INTERNAL] ";

%feature("docstring")  casadi::norm_1(const std::vector< T > &x) "

[INTERNAL] ";

%feature("docstring")  casadi::norm_2(const std::vector< T > &x) "

[INTERNAL] ";

%feature("docstring")  casadi::get_bvec_t(std::vector< T > &v) "

[INTERNAL] ";

%feature("docstring")  casadi::get_bvec_t(const std::vector< T > &v) "

[INTERNAL] ";

%feature("docstring")  casadi::has_conic(const std::string &name) "

[INTERNAL] 
Check if a particular plugin is available.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L31

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L31-L33

";

%feature("docstring")  casadi::load_conic(const std::string &name) "

[INTERNAL] 
Explicitly load a plugin dynamically.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L35

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L35-L37

";

%feature("docstring")  casadi::doc_conic(const std::string &name) "

[INTERNAL] 
Get the documentation string for a plugin.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L39

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L39-L41

";

%feature("docstring")  casadi::conic(const std::string &name, const 
std::string &solver, const SpDict &qp, const Dict &opts=Dict()) "

[INTERNAL]

Create a QP solver Solves the following strictly convex problem:



::

  min          1/2 x' H x + g' x
  x
  
  subject to
  LBA <= A x <= UBA
  LBX <= x   <= UBX
  
  resize(Q x, np, np) + P >= 0 (psd)
  
  with :
  H sparse (n x n) positive definite
  g dense  (n x 1)
  A sparse (nc x n)
  Q sparse symmetric (np^2 x n)
  P sparse symmetric (np x nq)
  
  n: number of decision variables (x)
  nc: number of constraints (A)
  nq: shape of psd constraint matrix



If H is not positive-definite, the solver should throw an error.

Second-order cone constraints can be added as psd constraints through 
a 
helper function 'soc':

x in R^n y in R

|| x ||_2 <= y

<=>

soc(x, y) psd

This can be proven with soc(x, y)=[y*I x; x' y] using the Shur 
complement.

General information

>List of available options

+------------------+-----------------+------------------+------------------+
|        Id        |      Type       |   Description    |     Used in      |
+==================+=================+==================+==================+
| ad_weight        | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for derivative   | Internal         |
|                  |                 | calculation.When |                  |
|                  |                 | there is an      |                  |
|                  |                 | option of either |                  |
|                  |                 | using forward or |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | directional      |                  |
|                  |                 | derivatives, the |                  |
|                  |                 | condition ad_wei |                  |
|                  |                 | ght*nf<=(1-      |                  |
|                  |                 | ad_weight)*na is |                  |
|                  |                 | used where nf    |                  |
|                  |                 | and na are       |                  |
|                  |                 | estimates of the |                  |
|                  |                 | number of        |                  |
|                  |                 | forward/reverse  |                  |
|                  |                 | mode directional |                  |
|                  |                 | derivatives      |                  |
|                  |                 | needed. By       |                  |
|                  |                 | default,         |                  |
|                  |                 | ad_weight is     |                  |
|                  |                 | calculated       |                  |
|                  |                 | automatically,   |                  |
|                  |                 | but this can be  |                  |
|                  |                 | overridden by    |                  |
|                  |                 | setting this     |                  |
|                  |                 | option. In       |                  |
|                  |                 | particular, 0    |                  |
|                  |                 | means forcing    |                  |
|                  |                 | forward mode and |                  |
|                  |                 | 1 forcing        |                  |
|                  |                 | reverse mode.    |                  |
|                  |                 | Leave unset for  |                  |
|                  |                 | (class specific) |                  |
|                  |                 | heuristics.      |                  |
+------------------+-----------------+------------------+------------------+
| ad_weight_sp     | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for sparsity     | Internal         |
|                  |                 | pattern          |                  |
|                  |                 | calculation calc |                  |
|                  |                 | ulation.Override |                  |
|                  |                 | s default        |                  |
|                  |                 | behavior. Set to |                  |
|                  |                 | 0 and 1 to force |                  |
|                  |                 | forward and      |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | respectively.    |                  |
|                  |                 | Cf. option       |                  |
|                  |                 | \"ad_weight\".     |                  |
|                  |                 | When set to -1,  |                  |
|                  |                 | sparsity is      |                  |
|                  |                 | completely       |                  |
|                  |                 | ignored and      |                  |
|                  |                 | dense matrices   |                  |
|                  |                 | are used.        |                  |
+------------------+-----------------+------------------+------------------+
| always_inline    | OT_BOOL         | Force inlining.  | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| cache            | OT_DICT         | Prepopulate the  | casadi::Function |
|                  |                 | function cache.  | Internal         |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| compiler         | OT_STRING       | Just-in-time     | casadi::Function |
|                  |                 | compiler plugin  | Internal         |
|                  |                 | to be used.      |                  |
+------------------+-----------------+------------------+------------------+
| custom_jacobian  | OT_FUNCTION     | Override         | casadi::Function |
|                  |                 | CasADi's AD. Use | Internal         |
|                  |                 | together with    |                  |
|                  |                 | 'jac_penalty':   |                  |
|                  |                 | 0. Note: Highly  |                  |
|                  |                 | experimental.    |                  |
|                  |                 | Syntax may break |                  |
|                  |                 | often.           |                  |
+------------------+-----------------+------------------+------------------+
| der_options      | OT_DICT         | Default options  | casadi::Function |
|                  |                 | to be used to    | Internal         |
|                  |                 | populate         |                  |
|                  |                 | forward_options, |                  |
|                  |                 | reverse_options, |                  |
|                  |                 | and              |                  |
|                  |                 | jacobian_options |                  |
|                  |                 | before those     |                  |
|                  |                 | options are      |                  |
|                  |                 | merged in.       |                  |
+------------------+-----------------+------------------+------------------+
| derivative_of    | OT_FUNCTION     | The function is  | casadi::Function |
|                  |                 | a derivative of  | Internal         |
|                  |                 | another          |                  |
|                  |                 | function. The    |                  |
|                  |                 | type of          |                  |
|                  |                 | derivative       |                  |
|                  |                 | (directional     |                  |
|                  |                 | derivative,      |                  |
|                  |                 | Jacobian) is     |                  |
|                  |                 | inferred from    |                  |
|                  |                 | the function     |                  |
|                  |                 | name.            |                  |
+------------------+-----------------+------------------+------------------+
| discrete         | OT_BOOLVECTOR   | Indicates which  | casadi::Conic    |
|                  |                 | of the variables |                  |
|                  |                 | are discrete,    |                  |
|                  |                 | i.e. integer-    |                  |
|                  |                 | valued           |                  |
+------------------+-----------------+------------------+------------------+
| dump             | OT_BOOL         | Dump function to | casadi::Function |
|                  |                 | file upon first  | Internal         |
|                  |                 | evaluation.      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| dump_dir         | OT_STRING       | Directory to     | casadi::Function |
|                  |                 | dump             | Internal         |
|                  |                 | inputs/outputs   |                  |
|                  |                 | to. Make sure    |                  |
|                  |                 | the directory    |                  |
|                  |                 | exists [.]       |                  |
+------------------+-----------------+------------------+------------------+
| dump_format      | OT_STRING       | Choose file      | casadi::Function |
|                  |                 | format to dump   | Internal         |
|                  |                 | matrices. See    |                  |
|                  |                 | DM.from_file     |                  |
|                  |                 | [mtx]            |                  |
+------------------+-----------------+------------------+------------------+
| dump_in          | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | to file          |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| dump_out         | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs to file  |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| enable_fd        | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation by   |                  |
|                  |                 | finite           |                  |
|                  |                 | differencing.    |                  |
|                  |                 | [default:        |                  |
|                  |                 | false]]          |                  |
+------------------+-----------------+------------------+------------------+
| enable_forward   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using forward    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_jacobian  | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobians of all |                  |
|                  |                 | differentiable   |                  |
|                  |                 | outputs with     |                  |
|                  |                 | respect to all   |                  |
|                  |                 | differentiable   |                  |
|                  |                 | inputs - if      |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_reverse   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | transposed       |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using reverse    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| error_on_fail    | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when function    | ction            |
|                  |                 | evaluation fails |                  |
|                  |                 | (default true).  |                  |
+------------------+-----------------+------------------+------------------+
| fd_method        | OT_STRING       | Method for       | casadi::Function |
|                  |                 | finite           | Internal         |
|                  |                 | differencing     |                  |
|                  |                 | [default         |                  |
|                  |                 | 'central']       |                  |
+------------------+-----------------+------------------+------------------+
| fd_options       | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | finite           |                  |
|                  |                 | difference       |                  |
|                  |                 | instance         |                  |
+------------------+-----------------+------------------+------------------+
| forward_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | forward mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| gather_stats     | OT_BOOL         | Deprecated       | casadi::Function |
|                  |                 | option           | Internal         |
|                  |                 | (ignored):       |                  |
|                  |                 | Statistics are   |                  |
|                  |                 | now always       |                  |
|                  |                 | collected.       |                  |
+------------------+-----------------+------------------+------------------+
| input_scheme     | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| inputs_check     | OT_BOOL         | Throw exceptions | casadi::Function |
|                  |                 | when the         | Internal         |
|                  |                 | numerical values |                  |
|                  |                 | of the inputs    |                  |
|                  |                 | don't make sense |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_in       | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each input if it | Internal         |
|                  |                 | should be        |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_out      | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each output if   | Internal         |
|                  |                 | it should be     |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| jac_penalty      | OT_DOUBLE       | When requested   | casadi::Function |
|                  |                 | for a number of  | Internal         |
|                  |                 | forward/reverse  |                  |
|                  |                 | directions, it   |                  |
|                  |                 | may be cheaper   |                  |
|                  |                 | to compute first |                  |
|                  |                 | the full         |                  |
|                  |                 | jacobian and     |                  |
|                  |                 | then multiply    |                  |
|                  |                 | with seeds,      |                  |
|                  |                 | rather than      |                  |
|                  |                 | obtain the       |                  |
|                  |                 | requested        |                  |
|                  |                 | directions in a  |                  |
|                  |                 | straightforward  |                  |
|                  |                 | manner. Casadi   |                  |
|                  |                 | uses a heuristic |                  |
|                  |                 | to decide which  |                  |
|                  |                 | is cheaper. A    |                  |
|                  |                 | high value of    |                  |
|                  |                 | 'jac_penalty'    |                  |
|                  |                 | makes it less    |                  |
|                  |                 | likely for the   |                  |
|                  |                 | heurstic to      |                  |
|                  |                 | chose the full   |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy. The    |                  |
|                  |                 | special value -1 |                  |
|                  |                 | indicates never  |                  |
|                  |                 | to use the full  |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy         |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_options | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | Jacobian         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| jit              | OT_BOOL         | Use just-in-time | casadi::Function |
|                  |                 | compiler to      | Internal         |
|                  |                 | speed up the     |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| jit_cleanup      | OT_BOOL         | Cleanup up the   | casadi::Function |
|                  |                 | temporary source | Internal         |
|                  |                 | file that jit    |                  |
|                  |                 | creates.         |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| jit_name         | OT_STRING       | The file name    | casadi::Function |
|                  |                 | used to write    | Internal         |
|                  |                 | out code. The    |                  |
|                  |                 | actual file      |                  |
|                  |                 | names used       |                  |
|                  |                 | depend on 'jit_t |                  |
|                  |                 | emp_suffix' and  |                  |
|                  |                 | include          |                  |
|                  |                 | extensions.      |                  |
|                  |                 | Default:         |                  |
|                  |                 | 'jit_tmp'        |                  |
+------------------+-----------------+------------------+------------------+
| jit_options      | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | jit compiler.    |                  |
+------------------+-----------------+------------------+------------------+
| jit_serialize    | OT_STRING       | Specify          | casadi::Function |
|                  |                 | behaviour when   | Internal         |
|                  |                 | serializing a    |                  |
|                  |                 | jitted function: |                  |
|                  |                 | SOURCE|link|embe |                  |
|                  |                 | d.               |                  |
+------------------+-----------------+------------------+------------------+
| jit_temp_suffix  | OT_BOOL         | Use a temporary  | casadi::Function |
|                  |                 | (seemingly       | Internal         |
|                  |                 | random) filename |                  |
|                  |                 | suffix for       |                  |
|                  |                 | generated code   |                  |
|                  |                 | and libraries.   |                  |
|                  |                 | This is desired  |                  |
|                  |                 | for thread-      |                  |
|                  |                 | safety. This     |                  |
|                  |                 | behaviour may    |                  |
|                  |                 | defeat caching   |                  |
|                  |                 | compiler         |                  |
|                  |                 | wrappers.        |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| max_io           | OT_INT          | Acceptable       | casadi::Function |
|                  |                 | number of inputs | Internal         |
|                  |                 | and outputs.     |                  |
|                  |                 | Warn if          |                  |
|                  |                 | exceeded.        |                  |
+------------------+-----------------+------------------+------------------+
| max_num_dir      | OT_INT          | Specify the      | casadi::Function |
|                  |                 | maximum number   | Internal         |
|                  |                 | of directions    |                  |
|                  |                 | for derivative   |                  |
|                  |                 | functions.       |                  |
|                  |                 | Overrules the    |                  |
|                  |                 | builtin optimize |                  |
|                  |                 | d_num_dir.       |                  |
+------------------+-----------------+------------------+------------------+
| never_inline     | OT_BOOL         | Forbid inlining. | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| output_scheme    | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| post_expand      | OT_BOOL         | After            | casadi::Function |
|                  |                 | construction,    | Internal         |
|                  |                 | expand this      |                  |
|                  |                 | Function .       |                  |
|                  |                 | Default: False   |                  |
+------------------+-----------------+------------------+------------------+
| post_expand_opti | OT_DICT         | Options to be    | casadi::Function |
| ons              |                 | passed to post-  | Internal         |
|                  |                 | construction     |                  |
|                  |                 | expansion.       |                  |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| print_in         | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_out        | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs          |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_problem    | OT_BOOL         | Print a numeric  | casadi::Conic    |
|                  |                 | description of   |                  |
|                  |                 | the problem      |                  |
+------------------+-----------------+------------------+------------------+
| print_time       | OT_BOOL         | print            | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time. Implies    |                  |
|                  |                 | record_time.     |                  |
+------------------+-----------------+------------------+------------------+
| record_time      | OT_BOOL         | record           | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time, for        |                  |
|                  |                 | retrieval with   |                  |
|                  |                 | stats().         |                  |
+------------------+-----------------+------------------+------------------+
| regularity_check | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when NaN or Inf  | ction            |
|                  |                 | appears during   |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| reverse_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | reverse mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| user_data        | OT_VOIDPTR      | A user-defined   | casadi::Function |
|                  |                 | field that can   | Internal         |
|                  |                 | be used to       |                  |
|                  |                 | identify the     |                  |
|                  |                 | function or pass |                  |
|                  |                 | additional       |                  |
|                  |                 | information      |                  |
+------------------+-----------------+------------------+------------------+
| verbose          | OT_BOOL         | Verbose          | casadi::ProtoFun |
|                  |                 | evaluation  for  | ction            |
|                  |                 | debugging        |                  |
+------------------+-----------------+------------------+------------------+

>Input scheme: casadi::ConicInput (CONIC_NUM_IN = 12)

+--------------+--------+--------------------------------------------------+
|  Full name   | Short  |                   Description                    |
+==============+========+==================================================+
| CONIC_H      | h      | The square matrix H: sparse, (n x n). Only the   |
|              |        | lower triangular part is actually used. The      |
|              |        | matrix is assumed to be symmetrical.             |
+--------------+--------+--------------------------------------------------+
| CONIC_G      | g      | The vector g: dense, (n x 1)                     |
+--------------+--------+--------------------------------------------------+
| CONIC_A      | a      | The matrix A: sparse, (nc x n) - product with x  |
|              |        | must be dense.                                   |
+--------------+--------+--------------------------------------------------+
| CONIC_LBA    | lba    | dense, (nc x 1)                                  |
+--------------+--------+--------------------------------------------------+
| CONIC_UBA    | uba    | dense, (nc x 1)                                  |
+--------------+--------+--------------------------------------------------+
| CONIC_LBX    | lbx    | dense, (n x 1)                                   |
+--------------+--------+--------------------------------------------------+
| CONIC_UBX    | ubx    | dense, (n x 1)                                   |
+--------------+--------+--------------------------------------------------+
| CONIC_X0     | x0     | dense, (n x 1)                                   |
+--------------+--------+--------------------------------------------------+
| CONIC_LAM_X0 | lam_x0 | dense                                            |
+--------------+--------+--------------------------------------------------+
| CONIC_LAM_A0 | lam_a0 | dense                                            |
+--------------+--------+--------------------------------------------------+
| CONIC_Q      | q      | The matrix Q: sparse symmetric, (np^2 x n)       |
+--------------+--------+--------------------------------------------------+
| CONIC_P      | p      | The matrix P: sparse symmetric, (np x np)        |
+--------------+--------+--------------------------------------------------+

>Output scheme: casadi::ConicOutput (CONIC_NUM_OUT = 4)

+-------------+-------+---------------------------------------------------+
|  Full name  | Short |                    Description                    |
+=============+=======+===================================================+
| CONIC_X     | x     | The primal solution.                              |
+-------------+-------+---------------------------------------------------+
| CONIC_COST  | cost  | The optimal cost.                                 |
+-------------+-------+---------------------------------------------------+
| CONIC_LAM_A | lam_a | The dual solution corresponding to linear bounds. |
+-------------+-------+---------------------------------------------------+
| CONIC_LAM_X | lam_x | The dual solution corresponding to simple bounds. |
+-------------+-------+---------------------------------------------------+

List of plugins
- cbc

- clp

- cplex

- gurobi

- highs

- hpipm

- hpmpc

- ooqp

- osqp

- proxqp

- qpoases

- sqic

- superscs

- ipqp

- nlpsol

- qrqp

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with  
Conic.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

cbc
---



Interface to Cbc solver for sparse Quadratic Programs

Extra doc: https://github.com/casadi/casadi/wiki/L_221

>List of available options

+-------------+-----------------------+------------------------------------+
|     Id      |         Type          |            Description             |
+=============+=======================+====================================+
| cbc         | OT_DICT               | Options to be passed to CBC.Three  |
|             |                       | sets of options are supported. The |
|             |                       | first can be found in              |
|             |                       | OsiSolverParameters.hpp. The       |
|             |                       | second can be found in             |
|             |                       | CbcModel.hpp. The third are        |
|             |                       | options that can be passed to      |
|             |                       | CbcMain1.                          |
+-------------+-----------------------+------------------------------------+
| hot_start   | OT_BOOL               | Hot start with x0 [Default false]. |
+-------------+-----------------------+------------------------------------+
| sos_groups  | OT_INTVECTORVECTOR    | Definition of SOS groups by        |
|             |                       | indices.                           |
+-------------+-----------------------+------------------------------------+
| sos_types   | OT_INTVECTOR          | Specify 1 or 2 for each SOS group. |
+-------------+-----------------------+------------------------------------+
| sos_weights | OT_DOUBLEVECTORVECTOR | Weights corresponding to SOS       |
|             |                       | entries.                           |
+-------------+-----------------------+------------------------------------+



--------------------------------------------------------------------------------

clp
---



Interface to Clp solver for sparse Quadratic Programs

Extra doc: https://github.com/casadi/casadi/wiki/L_22d

>List of available options

+-----+---------+----------------------------------------------------------+
| Id  |  Type   |                       Description                        |
+=====+=========+==========================================================+
| clp | OT_DICT | Options to be passed to CLP. A first set of options can  |
|     |         | be found in ClpParameters.hpp. eg. 'PrimalTolerance'.    |
|     |         | There are other options in additions. 'AutomaticScaling' |
|     |         | (bool) is recognised. 'initial_solve' (default off)      |
|     |         | activates the use of Clp's initialSolve.                 |
|     |         | 'initial_solve_options' takes a dictionary with          |
|     |         | following keys (see ClpSolve.hpp): SolveType (string),   |
|     |         | PresolveType (string), NumberPasses, SpecialOptions      |
|     |         | (intvectorvector), IndependentOptions (intvectorvector). |
+-----+---------+----------------------------------------------------------+



--------------------------------------------------------------------------------

cplex
-----



Interface to Cplex solver for sparse Quadratic Programs

Extra doc: https://github.com/casadi/casadi/wiki/L_22a

>List of available options

+----------------+-----------------------+---------------------------------+
|       Id       |         Type          |           Description           |
+================+=======================+=================================+
| cplex          | OT_DICT               | Options to be passed to CPLEX   |
+----------------+-----------------------+---------------------------------+
| dep_check      | OT_INT                | Detect redundant constraints.   |
+----------------+-----------------------+---------------------------------+
| dump_filename  | OT_STRING             | The filename to dump to.        |
+----------------+-----------------------+---------------------------------+
| dump_to_file   | OT_BOOL               | Dumps QP to file in CPLEX       |
|                |                       | format.                         |
+----------------+-----------------------+---------------------------------+
| mip_start      | OT_BOOL               | Hot start integers with x0      |
|                |                       | [Default false].                |
+----------------+-----------------------+---------------------------------+
| qp_method      | OT_INT                | Determines which CPLEX          |
|                |                       | algorithm to use.               |
+----------------+-----------------------+---------------------------------+
| sos_groups     | OT_INTVECTORVECTOR    | Definition of SOS groups by     |
|                |                       | indices.                        |
+----------------+-----------------------+---------------------------------+
| sos_types      | OT_INTVECTOR          | Specify 1 or 2 for each SOS     |
|                |                       | group.                          |
+----------------+-----------------------+---------------------------------+
| sos_weights    | OT_DOUBLEVECTORVECTOR | Weights corresponding to SOS    |
|                |                       | entries.                        |
+----------------+-----------------------+---------------------------------+
| tol            | OT_DOUBLE             | Tolerance of solver             |
+----------------+-----------------------+---------------------------------+
| version_suffix | OT_STRING             | Specify version of cplex to     |
|                |                       | load. We will attempt to load l |
|                |                       | ibcplex<version_suffix>.[so|dll |
|                |                       | |dylib]. Default value is taken |
|                |                       | from CPLEX_VERSION env          |
|                |                       | variable.                       |
+----------------+-----------------------+---------------------------------+
| warm_start     | OT_BOOL               | Use warm start with simplex     |
|                |                       | methods (affects only the       |
|                |                       | simplex methods).               |
+----------------+-----------------------+---------------------------------+



--------------------------------------------------------------------------------

gurobi
------



Interface to the GUROBI Solver for quadratic programming

Extra doc: https://github.com/casadi/casadi/wiki/L_22q

>List of available options

+-------------+-----------------------+------------------------------------+
|     Id      |         Type          |            Description             |
+=============+=======================+====================================+
| gurobi      | OT_DICT               | Options to be passed to gurobi.    |
+-------------+-----------------------+------------------------------------+
| sos_groups  | OT_INTVECTORVECTOR    | Definition of SOS groups by        |
|             |                       | indices.                           |
+-------------+-----------------------+------------------------------------+
| sos_types   | OT_INTVECTOR          | Specify 1 or 2 for each SOS group. |
+-------------+-----------------------+------------------------------------+
| sos_weights | OT_DOUBLEVECTORVECTOR | Weights corresponding to SOS       |
|             |                       | entries.                           |
+-------------+-----------------------+------------------------------------+
| vtype       | OT_STRINGVECTOR       | Type of variables: [CONTINUOUS|bin |
|             |                       | ary|integer|semicont|semiint]      |
+-------------+-----------------------+------------------------------------+



--------------------------------------------------------------------------------

highs
-----



Interface to HiGHS solver for sparse Quadratic Programs, see 
highs.dev for 
more information and https://www.maths.ed.ac.uk/hall/HiGHS/HighsOptions.html
  for a list of options.

Extra doc: https://github.com/casadi/casadi/wiki/L_22f

>List of available options

+-------+---------+--------------------------------+
|  Id   |  Type   |          Description           |
+=======+=========+================================+
| highs | OT_DICT | Options to be passed to HiGHS. |
+-------+---------+--------------------------------+



--------------------------------------------------------------------------------

hpipm
-----



Interface to HMPC Solver

In order to use this interface, you must:

Decision variables must only by state and control, and the variable 

ordering must be [x0 u0 x1 u1 ...]

The constraints must be in order: [ gap0 lincon0 gap1 lincon1 ]

gap: Ak+1 = Ak xk + Bk uk lincon: yk= Ck xk + Dk uk



::

         A0 B0 -I
         C0 D0
                A1 B1 -I
                C1 D1



where I must be a diagonal sparse matrix
Either supply all of N, nx, ng, nu 
options or rely on automatic 
detection

Extra doc: https://github.com/casadi/casadi/wiki/L_242

>List of available options

+-------+--------------+--------------------------------------------------+
|  Id   |     Type     |                   Description                    |
+=======+==============+==================================================+
| N     | OT_INT       | OCP horizon                                      |
+-------+--------------+--------------------------------------------------+
| hpipm | OT_DICT      | Options to be passed to hpipm                    |
+-------+--------------+--------------------------------------------------+
| inf   | OT_DOUBLE    | Replace infinities by this amount [default: 1e8] |
+-------+--------------+--------------------------------------------------+
| ng    | OT_INTVECTOR | Number of non-dynamic constraints, length N+1    |
+-------+--------------+--------------------------------------------------+
| nu    | OT_INTVECTOR | Number of controls, length N                     |
+-------+--------------+--------------------------------------------------+
| nx    | OT_INTVECTOR | Number of states, length N+1                     |
+-------+--------------+--------------------------------------------------+



--------------------------------------------------------------------------------

hpmpc
-----



Interface to HMPC Solver

In order to use this interface, you must:

Decision variables must only by state and control, and the variable 

ordering must be [x0 u0 x1 u1 ...]

The constraints must be in order: [ gap0 lincon0 gap1 lincon1 ]

gap: Ak+1 = Ak xk + Bk uk lincon: yk= Ck xk + Dk uk



::

         A0 B0 -I
         C0 D0
                A1 B1 -I
                C1 D1



where I must be a diagonal sparse matrix
Either supply all of N, nx, ng, nu 
options or rely on automatic 
detection

Extra doc: https://github.com/casadi/casadi/wiki/L_22p

>List of available options

+----------------+--------------+------------------------------------------+
|       Id       |     Type     |               Description                |
+================+==============+==========================================+
| N              | OT_INT       | OCP horizon                              |
+----------------+--------------+------------------------------------------+
| blasfeo_target | OT_STRING    | hpmpc target                             |
+----------------+--------------+------------------------------------------+
| inf            | OT_DOUBLE    | HPMPC cannot handle infinities.          |
|                |              | Infinities will be replaced by this      |
|                |              | option's value.                          |
+----------------+--------------+------------------------------------------+
| max_iter       | OT_INT       | Max number of iterations                 |
+----------------+--------------+------------------------------------------+
| mu0            | OT_DOUBLE    | Max element in cost function as estimate |
|                |              | of max multiplier                        |
+----------------+--------------+------------------------------------------+
| ng             | OT_INTVECTOR | Number of non-dynamic constraints,       |
|                |              | length N+1                               |
+----------------+--------------+------------------------------------------+
| nu             | OT_INTVECTOR | Number of controls, length N             |
+----------------+--------------+------------------------------------------+
| nx             | OT_INTVECTOR | Number of states, length N+1             |
+----------------+--------------+------------------------------------------+
| print_level    | OT_INT       | Amount of diagnostic printing [Default:  |
|                |              | 1].                                      |
+----------------+--------------+------------------------------------------+
| target         | OT_STRING    | hpmpc target                             |
+----------------+--------------+------------------------------------------+
| tol            | OT_DOUBLE    | Tolerance in the duality measure         |
+----------------+--------------+------------------------------------------+
| warm_start     | OT_BOOL      | Use warm-starting                        |
+----------------+--------------+------------------------------------------+



--------------------------------------------------------------------------------

ooqp
----



Interface to the OOQP Solver for quadratic programming The current 

implementation assumes that OOQP is configured with the MA27 sparse 
linear 
solver.

NOTE: when doing multiple calls to evaluate(), check if you need to 

reInit();

Extra doc: https://github.com/casadi/casadi/wiki/L_222

>List of available options

+-------------+-----------+------------------------------------------------+
|     Id      |   Type    |                  Description                   |
+=============+===========+================================================+
| artol       | OT_DOUBLE | tolerance as provided with setArTol to OOQP    |
+-------------+-----------+------------------------------------------------+
| mutol       | OT_DOUBLE | tolerance as provided with setMuTol to OOQP    |
+-------------+-----------+------------------------------------------------+
| print_level | OT_INT    | Print level. OOQP listens to print_level 0, 10 |
|             |           | and 100                                        |
+-------------+-----------+------------------------------------------------+



--------------------------------------------------------------------------------

osqp
----



Interface to the OSQP Solver for quadratic programming

Extra doc: https://github.com/casadi/casadi/wiki/L_220

Interface to the PROXQP Solver for quadratic programming

Extra doc: https://github.com/casadi/casadi/wiki/L_243

>List of available options

+-------------------+---------+--------------------------------------------+
|        Id         |  Type   |                Description                 |
+===================+=========+============================================+
| osqp              | OT_DICT | const Options to be passed to osqp.        |
+-------------------+---------+--------------------------------------------+
| warm_start_dual   | OT_BOOL | Use lam_a0 and lam_x0 input to warmstart   |
|                   |         | [Default: truw].                           |
+-------------------+---------+--------------------------------------------+
| warm_start_primal | OT_BOOL | Use x0 input to warmstart [Default: true]. |
+-------------------+---------+--------------------------------------------+



--------------------------------------------------------------------------------

proxqp
------



>List of available options

+-------------------+---------+--------------------------------------------+
|        Id         |  Type   |                Description                 |
+===================+=========+============================================+
| proxqp            | OT_DICT | const proxqp options.                      |
+-------------------+---------+--------------------------------------------+
| warm_start_dual   | OT_BOOL | Use y and z input to warmstart [Default:   |
|                   |         | true].                                     |
+-------------------+---------+--------------------------------------------+
| warm_start_primal | OT_BOOL | Use x input to warmstart [Default: true].  |
+-------------------+---------+--------------------------------------------+



--------------------------------------------------------------------------------

qpoases
-------



Interface to QPOases Solver for quadratic programming

::

  Extra doc: https://github.com/casadi/casadi/wiki/L_22o 
  



>List of available options

+-------------------------------+-----------+------------------------------+
|              Id               |   Type    |         Description          |
+===============================+===========+==============================+
| CPUtime                       | OT_DOUBLE | The maximum allowed CPU time |
|                               |           | in seconds for the whole     |
|                               |           | initialisation (and the      |
|                               |           | actually required one on     |
|                               |           | output). Disabled if unset.  |
+-------------------------------+-----------+------------------------------+
| boundRelaxation               | OT_DOUBLE | Initial relaxation of bounds |
|                               |           | to start homotopy and        |
|                               |           | initial value for far        |
|                               |           | bounds.                      |
+-------------------------------+-----------+------------------------------+
| boundTolerance                | OT_DOUBLE | If upper and lower bounds    |
|                               |           | differ less than this        |
|                               |           | tolerance, they are regarded |
|                               |           | equal, i.e. as equality      |
|                               |           | constraint.                  |
+-------------------------------+-----------+------------------------------+
| enableCholeskyRefactorisation | OT_INT    | Specifies the frequency of a |
|                               |           | full re-factorisation of     |
|                               |           | projected Hessian matrix: 0: |
|                               |           | turns them off, 1: uses them |
|                               |           | at each iteration etc.       |
+-------------------------------+-----------+------------------------------+
| enableDriftCorrection         | OT_INT    | Specifies the frequency of   |
|                               |           | drift corrections: 0: turns  |
|                               |           | them off.                    |
+-------------------------------+-----------+------------------------------+
| enableEqualities              | OT_BOOL   | Specifies whether equalities |
|                               |           | should be treated as always  |
|                               |           | active (True) or not (False) |
+-------------------------------+-----------+------------------------------+
| enableFarBounds               | OT_BOOL   | Enables the use of far       |
|                               |           | bounds.                      |
+-------------------------------+-----------+------------------------------+
| enableFlippingBounds          | OT_BOOL   | Enables the use of flipping  |
|                               |           | bounds.                      |
+-------------------------------+-----------+------------------------------+
| enableFullLITests             | OT_BOOL   | Enables condition-hardened   |
|                               |           | (but more expensive) LI      |
|                               |           | test.                        |
+-------------------------------+-----------+------------------------------+
| enableInertiaCorrection       | OT_BOOL   | Should working set be        |
|                               |           | repaired when negative       |
|                               |           | curvature is discovered      |
|                               |           | during hotstart.             |
+-------------------------------+-----------+------------------------------+
| enableNZCTests                | OT_BOOL   | Enables nonzero curvature    |
|                               |           | tests.                       |
+-------------------------------+-----------+------------------------------+
| enableRamping                 | OT_BOOL   | Enables ramping.             |
+-------------------------------+-----------+------------------------------+
| enableRegularisation          | OT_BOOL   | Enables automatic Hessian    |
|                               |           | regularisation.              |
+-------------------------------+-----------+------------------------------+
| epsDen                        | OT_DOUBLE | Denominator tolerance for    |
|                               |           | ratio tests.                 |
+-------------------------------+-----------+------------------------------+
| epsFlipping                   | OT_DOUBLE | Tolerance of squared         |
|                               |           | Cholesky diagonal factor     |
|                               |           | which triggers flipping      |
|                               |           | bound.                       |
+-------------------------------+-----------+------------------------------+
| epsIterRef                    | OT_DOUBLE | Early termination tolerance  |
|                               |           | for iterative refinement.    |
+-------------------------------+-----------+------------------------------+
| epsLITests                    | OT_DOUBLE | Tolerance for linear         |
|                               |           | independence tests.          |
+-------------------------------+-----------+------------------------------+
| epsNZCTests                   | OT_DOUBLE | Tolerance for nonzero        |
|                               |           | curvature tests.             |
+-------------------------------+-----------+------------------------------+
| epsNum                        | OT_DOUBLE | Numerator tolerance for      |
|                               |           | ratio tests.                 |
+-------------------------------+-----------+------------------------------+
| epsRegularisation             | OT_DOUBLE | Scaling factor of identity   |
|                               |           | matrix used for Hessian      |
|                               |           | regularisation.              |
+-------------------------------+-----------+------------------------------+
| finalRamping                  | OT_DOUBLE | Final value for ramping      |
|                               |           | strategy.                    |
+-------------------------------+-----------+------------------------------+
| growFarBounds                 | OT_DOUBLE | Factor to grow far bounds.   |
+-------------------------------+-----------+------------------------------+
| hessian_type                  | OT_STRING | Type of Hessian - see        |
|                               |           | qpOASES documentation [UNKNO |
|                               |           | WN|posdef|semidef|indef|zero |
|                               |           | |identity]]                  |
+-------------------------------+-----------+------------------------------+
| initialFarBounds              | OT_DOUBLE | Initial size for far bounds. |
+-------------------------------+-----------+------------------------------+
| initialRamping                | OT_DOUBLE | Start value for ramping      |
|                               |           | strategy.                    |
+-------------------------------+-----------+------------------------------+
| initialStatusBounds           | OT_STRING | Initial status of bounds at  |
|                               |           | first iteration.             |
+-------------------------------+-----------+------------------------------+
| linsol_plugin                 | OT_STRING | Linear solver plugin         |
+-------------------------------+-----------+------------------------------+
| maxDualJump                   | OT_DOUBLE | Maximum allowed jump in dual |
|                               |           | variables in linear          |
|                               |           | independence tests.          |
+-------------------------------+-----------+------------------------------+
| maxPrimalJump                 | OT_DOUBLE | Maximum allowed jump in      |
|                               |           | primal variables in nonzero  |
|                               |           | curvature tests.             |
+-------------------------------+-----------+------------------------------+
| max_schur                     | OT_INT    | Maximal number of Schur      |
|                               |           | updates [75]                 |
+-------------------------------+-----------+------------------------------+
| nWSR                          | OT_INT    | The maximum number of        |
|                               |           | working set recalculations   |
|                               |           | to be performed during the   |
|                               |           | initial homotopy. Default is |
|                               |           | 5(nx + nc)                   |
+-------------------------------+-----------+------------------------------+
| numRefinementSteps            | OT_INT    | Maximum number of iterative  |
|                               |           | refinement steps.            |
+-------------------------------+-----------+------------------------------+
| numRegularisationSteps        | OT_INT    | Maximum number of successive |
|                               |           | regularisation steps.        |
+-------------------------------+-----------+------------------------------+
| printLevel                    | OT_STRING | Defines the amount of text   |
|                               |           | output during QP solution,   |
|                               |           | see Section 5.7              |
+-------------------------------+-----------+------------------------------+
| schur                         | OT_BOOL   | Use Schur Complement         |
|                               |           | Approach [false]             |
+-------------------------------+-----------+------------------------------+
| sparse                        | OT_BOOL   | Formulate the QP using       |
|                               |           | sparse matrices. [false]     |
+-------------------------------+-----------+------------------------------+
| terminationTolerance          | OT_DOUBLE | Relative termination         |
|                               |           | tolerance to stop homotopy.  |
+-------------------------------+-----------+------------------------------+



--------------------------------------------------------------------------------

sqic
----



Interface to the SQIC solver for quadratic programming

Extra doc: https://github.com/casadi/casadi/wiki/L_21s



--------------------------------------------------------------------------------

superscs
--------



Interface to the SuperSCS solver for conic programming

Joris Gillis, 2019

Extra doc: https://github.com/casadi/casadi/wiki/L_21z

>List of available options

+----------+---------+-----------------------------------+
|    Id    |  Type   |            Description            |
+==========+=========+===================================+
| superscs | OT_DICT | Options to be passed to superscs. |
+----------+---------+-----------------------------------+



--------------------------------------------------------------------------------

ipqp
----



Solves QPs using a Mehrotra predictor-corrector interior point method

Extra doc: https://github.com/casadi/casadi/wiki/L_23c

>List of available options

+-----------------------+-----------+--------------------------------------+
|          Id           |   Type    |             Description              |
+=======================+===========+======================================+
| constr_viol_tol       | OT_DOUBLE | Constraint violation tolerance       |
|                       |           | [1e-8].                              |
+-----------------------+-----------+--------------------------------------+
| dual_inf_tol          | OT_DOUBLE | Dual feasibility violation tolerance |
|                       |           | [1e-8]                               |
+-----------------------+-----------+--------------------------------------+
| linear_solver         | OT_STRING | A custom linear solver creator       |
|                       |           | function [default: ldl]              |
+-----------------------+-----------+--------------------------------------+
| linear_solver_options | OT_DICT   | Options to be passed to the linear   |
|                       |           | solver                               |
+-----------------------+-----------+--------------------------------------+
| max_iter              | OT_INT    | Maximum number of iterations [1000]. |
+-----------------------+-----------+--------------------------------------+
| min_lam               | OT_DOUBLE | Smallest multiplier treated as       |
|                       |           | inactive for the initial active set  |
|                       |           | [0].                                 |
+-----------------------+-----------+--------------------------------------+
| print_header          | OT_BOOL   | Print header [true].                 |
+-----------------------+-----------+--------------------------------------+
| print_info            | OT_BOOL   | Print info [true].                   |
+-----------------------+-----------+--------------------------------------+
| print_iter            | OT_BOOL   | Print iterations [true].             |
+-----------------------+-----------+--------------------------------------+



--------------------------------------------------------------------------------

nlpsol
------



Solve QPs using an  Nlpsol Use the 'nlpsol' option to specify the NLP solver
 to use.

Extra doc: https://github.com/casadi/casadi/wiki/L_235

>List of available options

+----------------+-----------+---------------------------------+
|       Id       |   Type    |           Description           |
+================+===========+=================================+
| nlpsol         | OT_STRING | Name of solver.                 |
+----------------+-----------+---------------------------------+
| nlpsol_options | OT_DICT   | Options to be passed to solver. |
+----------------+-----------+---------------------------------+



--------------------------------------------------------------------------------

qrqp
----



Solve QPs using an active-set method

Extra doc: https://github.com/casadi/casadi/wiki/L_22y

>List of available options

+-----------------+-----------+--------------------------------------------+
|       Id        |   Type    |                Description                 |
+=================+===========+============================================+
| constr_viol_tol | OT_DOUBLE | Constraint violation tolerance [1e-8].     |
+-----------------+-----------+--------------------------------------------+
| dual_inf_tol    | OT_DOUBLE | Dual feasibility violation tolerance       |
|                 |           | [1e-8]                                     |
+-----------------+-----------+--------------------------------------------+
| max_iter        | OT_INT    | Maximum number of iterations [1000].       |
+-----------------+-----------+--------------------------------------------+
| min_lam         | OT_DOUBLE | Smallest multiplier treated as inactive    |
|                 |           | for the initial active set [0].            |
+-----------------+-----------+--------------------------------------------+
| print_header    | OT_BOOL   | Print header [true].                       |
+-----------------+-----------+--------------------------------------------+
| print_info      | OT_BOOL   | Print info [true].                         |
+-----------------+-----------+--------------------------------------------+
| print_iter      | OT_BOOL   | Print iterations [true].                   |
+-----------------+-----------+--------------------------------------------+
| print_lincomb   | OT_BOOL   | Print dependant linear combinations of     |
|                 |           | constraints [false]. Printed numbers are   |
|                 |           | 0-based indices into the vector of [simple |
|                 |           | bounds;linear bounds]                      |
+-----------------+-----------+--------------------------------------------+

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_21n

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L43

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L43-L46

";

%feature("docstring")  casadi::conic_debug(const Function &f, const 
std::string &filename) "

[INTERNAL] 
Generate native code in the interfaced language for debugging

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L48

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L48-L52

";

%feature("docstring")  casadi::conic_debug(const Function &f, std::ostream 
&file) "

[INTERNAL] 
Generate native code in the interfaced language for debugging

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L54

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L54-L58

";

%feature("docstring")  casadi::conic_in() "

[INTERNAL] 
Get input scheme of QP solvers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ee

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L60

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L60-L64

";

%feature("docstring")  casadi::conic_in(casadi_int ind) "

[INTERNAL] 
Get QP solver input scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1eg

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L72

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L72-L89

";

%feature("docstring")  casadi::conic_out() "

[INTERNAL] 
Get QP solver output scheme of QP solvers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ef

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L66

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L66-L70

";

%feature("docstring")  casadi::conic_out(casadi_int ind) "

[INTERNAL] 
Get output scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1eh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L91

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L91-L100

";

%feature("docstring")  casadi::conic_n_in() "

[INTERNAL] 
Get the number of QP solver inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ei

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L102

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L102-L104

";

%feature("docstring")  casadi::conic_n_out() "

[INTERNAL] 
Get the number of QP solver outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ej

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L106

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L106-L108

";

%feature("docstring")  casadi::qpsol(const std::string &name, const 
std::string &solver, const SXDict &qp, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::qpsol(const std::string &name, const 
std::string &solver, const MXDict &qp, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::conic_options(const std::string &name) "

[INTERNAL] 
Get all options for a plugin.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ek

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L542

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L542-L544

";

%feature("docstring")  casadi::conic_option_type(const std::string &name, 
const std::string &op) "

[INTERNAL] 
Get type info for a particular option.

Extra doc: https://github.com/casadi/casadi/wiki/L_1el

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L546

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L546-L548

";

%feature("docstring")  casadi::conic_option_info(const std::string &name, 
const std::string &op) "

[INTERNAL] 
Get documentation for a particular option.

Extra doc: https://github.com/casadi/casadi/wiki/L_1em

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.hpp#L550

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/conic.cpp#L550-L552

";

%feature("docstring")  casadi::has_dple(const std::string &name) "

[INTERNAL] 
Check if a particular plugin is available.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L31

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L31-L33

";

%feature("docstring")  casadi::load_dple(const std::string &name) "

[INTERNAL] 
Explicitly load a plugin dynamically.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L35

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L35-L37

";

%feature("docstring")  casadi::doc_dple(const std::string &name) "

[INTERNAL] 
Get the documentation string for a plugin.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L39

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L39-L41

";

%feature("docstring")  casadi::dplesol(const MX &A, const MX &V, const 
std::string &solver, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::dplesol(const MXVector &A, const MXVector &V,
 const std::string &solver, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::dplesol(const DMVector &A, const DMVector &V,
 const std::string &solver, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::dplesol(const std::string &name, const 
std::string &solver, const SpDict &st, const Dict &opts=Dict()) "

[INTERNAL]

Discrete periodic Lyapunov Equation solver Given matrices  $A_k$ and 
symmetric  $V_k, k = 0..K-1$

::

  A_k in R^(n x n)
  V_k in R^n
  

provides all of  $P_k$ that satisfy:

::

  P_0 = A_(K-1)*P_(K-1)*A_(K-1)' + V_k
  P_k+1 = A_k*P_k*A_k' + V_k  for k = 1..K-1
  

General information

>List of available options

+------------------+-----------------+------------------+------------------+
|        Id        |      Type       |   Description    |     Used in      |
+==================+=================+==================+==================+
| ad_weight        | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for derivative   | Internal         |
|                  |                 | calculation.When |                  |
|                  |                 | there is an      |                  |
|                  |                 | option of either |                  |
|                  |                 | using forward or |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | directional      |                  |
|                  |                 | derivatives, the |                  |
|                  |                 | condition ad_wei |                  |
|                  |                 | ght*nf<=(1-      |                  |
|                  |                 | ad_weight)*na is |                  |
|                  |                 | used where nf    |                  |
|                  |                 | and na are       |                  |
|                  |                 | estimates of the |                  |
|                  |                 | number of        |                  |
|                  |                 | forward/reverse  |                  |
|                  |                 | mode directional |                  |
|                  |                 | derivatives      |                  |
|                  |                 | needed. By       |                  |
|                  |                 | default,         |                  |
|                  |                 | ad_weight is     |                  |
|                  |                 | calculated       |                  |
|                  |                 | automatically,   |                  |
|                  |                 | but this can be  |                  |
|                  |                 | overridden by    |                  |
|                  |                 | setting this     |                  |
|                  |                 | option. In       |                  |
|                  |                 | particular, 0    |                  |
|                  |                 | means forcing    |                  |
|                  |                 | forward mode and |                  |
|                  |                 | 1 forcing        |                  |
|                  |                 | reverse mode.    |                  |
|                  |                 | Leave unset for  |                  |
|                  |                 | (class specific) |                  |
|                  |                 | heuristics.      |                  |
+------------------+-----------------+------------------+------------------+
| ad_weight_sp     | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for sparsity     | Internal         |
|                  |                 | pattern          |                  |
|                  |                 | calculation calc |                  |
|                  |                 | ulation.Override |                  |
|                  |                 | s default        |                  |
|                  |                 | behavior. Set to |                  |
|                  |                 | 0 and 1 to force |                  |
|                  |                 | forward and      |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | respectively.    |                  |
|                  |                 | Cf. option       |                  |
|                  |                 | \"ad_weight\".     |                  |
|                  |                 | When set to -1,  |                  |
|                  |                 | sparsity is      |                  |
|                  |                 | completely       |                  |
|                  |                 | ignored and      |                  |
|                  |                 | dense matrices   |                  |
|                  |                 | are used.        |                  |
+------------------+-----------------+------------------+------------------+
| always_inline    | OT_BOOL         | Force inlining.  | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| cache            | OT_DICT         | Prepopulate the  | casadi::Function |
|                  |                 | function cache.  | Internal         |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| compiler         | OT_STRING       | Just-in-time     | casadi::Function |
|                  |                 | compiler plugin  | Internal         |
|                  |                 | to be used.      |                  |
+------------------+-----------------+------------------+------------------+
| const_dim        | OT_BOOL         | Assume constant  | casadi::Dple     |
|                  |                 | dimension of P   |                  |
+------------------+-----------------+------------------+------------------+
| custom_jacobian  | OT_FUNCTION     | Override         | casadi::Function |
|                  |                 | CasADi's AD. Use | Internal         |
|                  |                 | together with    |                  |
|                  |                 | 'jac_penalty':   |                  |
|                  |                 | 0. Note: Highly  |                  |
|                  |                 | experimental.    |                  |
|                  |                 | Syntax may break |                  |
|                  |                 | often.           |                  |
+------------------+-----------------+------------------+------------------+
| der_options      | OT_DICT         | Default options  | casadi::Function |
|                  |                 | to be used to    | Internal         |
|                  |                 | populate         |                  |
|                  |                 | forward_options, |                  |
|                  |                 | reverse_options, |                  |
|                  |                 | and              |                  |
|                  |                 | jacobian_options |                  |
|                  |                 | before those     |                  |
|                  |                 | options are      |                  |
|                  |                 | merged in.       |                  |
+------------------+-----------------+------------------+------------------+
| derivative_of    | OT_FUNCTION     | The function is  | casadi::Function |
|                  |                 | a derivative of  | Internal         |
|                  |                 | another          |                  |
|                  |                 | function. The    |                  |
|                  |                 | type of          |                  |
|                  |                 | derivative       |                  |
|                  |                 | (directional     |                  |
|                  |                 | derivative,      |                  |
|                  |                 | Jacobian) is     |                  |
|                  |                 | inferred from    |                  |
|                  |                 | the function     |                  |
|                  |                 | name.            |                  |
+------------------+-----------------+------------------+------------------+
| dump             | OT_BOOL         | Dump function to | casadi::Function |
|                  |                 | file upon first  | Internal         |
|                  |                 | evaluation.      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| dump_dir         | OT_STRING       | Directory to     | casadi::Function |
|                  |                 | dump             | Internal         |
|                  |                 | inputs/outputs   |                  |
|                  |                 | to. Make sure    |                  |
|                  |                 | the directory    |                  |
|                  |                 | exists [.]       |                  |
+------------------+-----------------+------------------+------------------+
| dump_format      | OT_STRING       | Choose file      | casadi::Function |
|                  |                 | format to dump   | Internal         |
|                  |                 | matrices. See    |                  |
|                  |                 | DM.from_file     |                  |
|                  |                 | [mtx]            |                  |
+------------------+-----------------+------------------+------------------+
| dump_in          | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | to file          |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| dump_out         | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs to file  |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| enable_fd        | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation by   |                  |
|                  |                 | finite           |                  |
|                  |                 | differencing.    |                  |
|                  |                 | [default:        |                  |
|                  |                 | false]]          |                  |
+------------------+-----------------+------------------+------------------+
| enable_forward   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using forward    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_jacobian  | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobians of all |                  |
|                  |                 | differentiable   |                  |
|                  |                 | outputs with     |                  |
|                  |                 | respect to all   |                  |
|                  |                 | differentiable   |                  |
|                  |                 | inputs - if      |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_reverse   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | transposed       |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using reverse    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| eps_unstable     | OT_DOUBLE       | A margin for     | casadi::Dple     |
|                  |                 | unstability      |                  |
|                  |                 | detection        |                  |
+------------------+-----------------+------------------+------------------+
| error_on_fail    | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when function    | ction            |
|                  |                 | evaluation fails |                  |
|                  |                 | (default true).  |                  |
+------------------+-----------------+------------------+------------------+
| error_unstable   | OT_BOOL         | Throw an         | casadi::Dple     |
|                  |                 | exception when   |                  |
|                  |                 | it is detected   |                  |
|                  |                 | that             |                  |
|                  |                 | Product(A_i,     |                  |
|                  |                 | i=N..1)has       |                  |
|                  |                 | eigenvalues      |                  |
|                  |                 | greater than     |                  |
|                  |                 | 1-eps_unstable   |                  |
+------------------+-----------------+------------------+------------------+
| fd_method        | OT_STRING       | Method for       | casadi::Function |
|                  |                 | finite           | Internal         |
|                  |                 | differencing     |                  |
|                  |                 | [default         |                  |
|                  |                 | 'central']       |                  |
+------------------+-----------------+------------------+------------------+
| fd_options       | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | finite           |                  |
|                  |                 | difference       |                  |
|                  |                 | instance         |                  |
+------------------+-----------------+------------------+------------------+
| forward_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | forward mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| gather_stats     | OT_BOOL         | Deprecated       | casadi::Function |
|                  |                 | option           | Internal         |
|                  |                 | (ignored):       |                  |
|                  |                 | Statistics are   |                  |
|                  |                 | now always       |                  |
|                  |                 | collected.       |                  |
+------------------+-----------------+------------------+------------------+
| input_scheme     | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| inputs_check     | OT_BOOL         | Throw exceptions | casadi::Function |
|                  |                 | when the         | Internal         |
|                  |                 | numerical values |                  |
|                  |                 | of the inputs    |                  |
|                  |                 | don't make sense |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_in       | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each input if it | Internal         |
|                  |                 | should be        |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_out      | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each output if   | Internal         |
|                  |                 | it should be     |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| jac_penalty      | OT_DOUBLE       | When requested   | casadi::Function |
|                  |                 | for a number of  | Internal         |
|                  |                 | forward/reverse  |                  |
|                  |                 | directions, it   |                  |
|                  |                 | may be cheaper   |                  |
|                  |                 | to compute first |                  |
|                  |                 | the full         |                  |
|                  |                 | jacobian and     |                  |
|                  |                 | then multiply    |                  |
|                  |                 | with seeds,      |                  |
|                  |                 | rather than      |                  |
|                  |                 | obtain the       |                  |
|                  |                 | requested        |                  |
|                  |                 | directions in a  |                  |
|                  |                 | straightforward  |                  |
|                  |                 | manner. Casadi   |                  |
|                  |                 | uses a heuristic |                  |
|                  |                 | to decide which  |                  |
|                  |                 | is cheaper. A    |                  |
|                  |                 | high value of    |                  |
|                  |                 | 'jac_penalty'    |                  |
|                  |                 | makes it less    |                  |
|                  |                 | likely for the   |                  |
|                  |                 | heurstic to      |                  |
|                  |                 | chose the full   |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy. The    |                  |
|                  |                 | special value -1 |                  |
|                  |                 | indicates never  |                  |
|                  |                 | to use the full  |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy         |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_options | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | Jacobian         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| jit              | OT_BOOL         | Use just-in-time | casadi::Function |
|                  |                 | compiler to      | Internal         |
|                  |                 | speed up the     |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| jit_cleanup      | OT_BOOL         | Cleanup up the   | casadi::Function |
|                  |                 | temporary source | Internal         |
|                  |                 | file that jit    |                  |
|                  |                 | creates.         |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| jit_name         | OT_STRING       | The file name    | casadi::Function |
|                  |                 | used to write    | Internal         |
|                  |                 | out code. The    |                  |
|                  |                 | actual file      |                  |
|                  |                 | names used       |                  |
|                  |                 | depend on 'jit_t |                  |
|                  |                 | emp_suffix' and  |                  |
|                  |                 | include          |                  |
|                  |                 | extensions.      |                  |
|                  |                 | Default:         |                  |
|                  |                 | 'jit_tmp'        |                  |
+------------------+-----------------+------------------+------------------+
| jit_options      | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | jit compiler.    |                  |
+------------------+-----------------+------------------+------------------+
| jit_serialize    | OT_STRING       | Specify          | casadi::Function |
|                  |                 | behaviour when   | Internal         |
|                  |                 | serializing a    |                  |
|                  |                 | jitted function: |                  |
|                  |                 | SOURCE|link|embe |                  |
|                  |                 | d.               |                  |
+------------------+-----------------+------------------+------------------+
| jit_temp_suffix  | OT_BOOL         | Use a temporary  | casadi::Function |
|                  |                 | (seemingly       | Internal         |
|                  |                 | random) filename |                  |
|                  |                 | suffix for       |                  |
|                  |                 | generated code   |                  |
|                  |                 | and libraries.   |                  |
|                  |                 | This is desired  |                  |
|                  |                 | for thread-      |                  |
|                  |                 | safety. This     |                  |
|                  |                 | behaviour may    |                  |
|                  |                 | defeat caching   |                  |
|                  |                 | compiler         |                  |
|                  |                 | wrappers.        |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| max_io           | OT_INT          | Acceptable       | casadi::Function |
|                  |                 | number of inputs | Internal         |
|                  |                 | and outputs.     |                  |
|                  |                 | Warn if          |                  |
|                  |                 | exceeded.        |                  |
+------------------+-----------------+------------------+------------------+
| max_num_dir      | OT_INT          | Specify the      | casadi::Function |
|                  |                 | maximum number   | Internal         |
|                  |                 | of directions    |                  |
|                  |                 | for derivative   |                  |
|                  |                 | functions.       |                  |
|                  |                 | Overrules the    |                  |
|                  |                 | builtin optimize |                  |
|                  |                 | d_num_dir.       |                  |
+------------------+-----------------+------------------+------------------+
| never_inline     | OT_BOOL         | Forbid inlining. | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| output_scheme    | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| pos_def          | OT_BOOL         | Assume P         | casadi::Dple     |
|                  |                 | positive         |                  |
|                  |                 | definite         |                  |
+------------------+-----------------+------------------+------------------+
| post_expand      | OT_BOOL         | After            | casadi::Function |
|                  |                 | construction,    | Internal         |
|                  |                 | expand this      |                  |
|                  |                 | Function .       |                  |
|                  |                 | Default: False   |                  |
+------------------+-----------------+------------------+------------------+
| post_expand_opti | OT_DICT         | Options to be    | casadi::Function |
| ons              |                 | passed to post-  | Internal         |
|                  |                 | construction     |                  |
|                  |                 | expansion.       |                  |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| print_in         | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_out        | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs          |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_time       | OT_BOOL         | print            | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time. Implies    |                  |
|                  |                 | record_time.     |                  |
+------------------+-----------------+------------------+------------------+
| record_time      | OT_BOOL         | record           | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time, for        |                  |
|                  |                 | retrieval with   |                  |
|                  |                 | stats().         |                  |
+------------------+-----------------+------------------+------------------+
| regularity_check | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when NaN or Inf  | ction            |
|                  |                 | appears during   |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| reverse_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | reverse mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| user_data        | OT_VOIDPTR      | A user-defined   | casadi::Function |
|                  |                 | field that can   | Internal         |
|                  |                 | be used to       |                  |
|                  |                 | identify the     |                  |
|                  |                 | function or pass |                  |
|                  |                 | additional       |                  |
|                  |                 | information      |                  |
+------------------+-----------------+------------------+------------------+
| verbose          | OT_BOOL         | Verbose          | casadi::ProtoFun |
|                  |                 | evaluation  for  | ction            |
|                  |                 | debugging        |                  |
+------------------+-----------------+------------------+------------------+

>Input scheme: casadi::DpleInput (DPLE_NUM_IN = 2)

+-----------+-------+------------------------------------------------------+
| Full name | Short |                     Description                      |
+===========+=======+======================================================+
| DPLE_A    | a     | A matrices (horzcat when const_dim, diagcat          |
|           |       | otherwise) [a].                                      |
+-----------+-------+------------------------------------------------------+
| DPLE_V    | v     | V matrices (horzcat when const_dim, diagcat          |
|           |       | otherwise) [v].                                      |
+-----------+-------+------------------------------------------------------+

>Output scheme: casadi::DpleOutput (DPLE_NUM_OUT = 1)

+-----------+-------+------------------------------------------------------+
| Full name | Short |                     Description                      |
+===========+=======+======================================================+
| DPLE_P    | p     | Lyapunov matrix (horzcat when const_dim, diagcat     |
|           |       | otherwise) (Cholesky of P if pos_def) [p].           |
+-----------+-------+------------------------------------------------------+

List of plugins
- slicot

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with  
Dple.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

slicot
------



An efficient solver for Discrete Periodic Lyapunov Equations using 
SLICOT

Uses Periodic Schur Decomposition ('psd') and does not assume positive
 
definiteness. Based on Periodic Lyapunov equations: some applications
 and 
new algorithms. Int. J. Control, vol. 67, pp. 69-87, 1997.

Overview of the method: J. Gillis Practical Methods for Approximate 
Robust 
Periodic Optimal Control ofNonlinear Mechanical Systems, PhD 
Thesis, 
KULeuven, 2015

Extra doc: https://github.com/casadi/casadi/wiki/L_22j

>List of available options

+-----------------------+-----------+--------------------------------------+
|          Id           |   Type    |             Description              |
+=======================+===========+======================================+
| linear_solver         | OT_STRING | User-defined linear solver class.    |
|                       |           | Needed for sensitivities.            |
+-----------------------+-----------+--------------------------------------+
| linear_solver_options | OT_DICT   | Options to be passed to the linear   |
|                       |           | solver.                              |
+-----------------------+-----------+--------------------------------------+
| psd_num_zero          | OT_DOUBLE | Numerical zero used in Periodic      |
|                       |           | Schur decomposition with slicot.This |
|                       |           | option is needed when your systems   |
|                       |           | has Floquet multiplierszero or close |
|                       |           | to zero                              |
+-----------------------+-----------+--------------------------------------+

Joris Gillis

Extra doc: https://github.com/casadi/casadi/wiki/L_21o

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L97

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L97-L100

";

%feature("docstring")  casadi::dple_in() "

[INTERNAL] 
Get input scheme of DPLE solvers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1nc

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L102

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L102-L106

";

%feature("docstring")  casadi::dple_in(casadi_int ind) "

[INTERNAL] 
Get DPLE input scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ne

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L114

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L114-L121

";

%feature("docstring")  casadi::dple_out() "

[INTERNAL] 
Get output scheme of DPLE solvers.

Extra doc: https://github.com/casadi/casadi/wiki/L_1nd

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L108

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L108-L112

";

%feature("docstring")  casadi::dple_out(casadi_int ind) "

[INTERNAL] 
Get DPLE output scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1nf

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L123

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L123-L129

";

%feature("docstring")  casadi::dple_n_in() "

[INTERNAL] 
Get the number of QP solver inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ng

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L131

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L131-L133

";

%feature("docstring")  casadi::dple_n_out() "

[INTERNAL] 
Get the number of QP solver outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1nh

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.hpp#L135

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/dple.cpp#L135-L137

";

%feature("docstring")  casadi::trim_path(const std::string &full_path) "

[INTERNAL] ";

%feature("docstring")  casadi::message_prefix(std::ostream &stream) "

[INTERNAL] ";

%feature("docstring")  casadi::has_expm(const std::string &name) "

[INTERNAL] 
Check if a particular plugin is available.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.hpp#L32

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.cpp#L32-L34

";

%feature("docstring")  casadi::load_expm(const std::string &name) "

[INTERNAL] 
Explicitly load a plugin dynamically.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.hpp#L36

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.cpp#L36-L38

";

%feature("docstring")  casadi::doc_expm(const std::string &name) "

[INTERNAL] 
Get the documentation string for a plugin.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.hpp#L40

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.cpp#L40-L42

";

%feature("docstring")  casadi::expmsol(const std::string &name, const 
std::string &solver, const Sparsity &A, const Dict &opts=Dict()) "

[INTERNAL]

Performs a matrix exponentiation expm(A)
General information

>List of available options

+------------------+-----------------+------------------+------------------+
|        Id        |      Type       |   Description    |     Used in      |
+==================+=================+==================+==================+
| ad_weight        | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for derivative   | Internal         |
|                  |                 | calculation.When |                  |
|                  |                 | there is an      |                  |
|                  |                 | option of either |                  |
|                  |                 | using forward or |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | directional      |                  |
|                  |                 | derivatives, the |                  |
|                  |                 | condition ad_wei |                  |
|                  |                 | ght*nf<=(1-      |                  |
|                  |                 | ad_weight)*na is |                  |
|                  |                 | used where nf    |                  |
|                  |                 | and na are       |                  |
|                  |                 | estimates of the |                  |
|                  |                 | number of        |                  |
|                  |                 | forward/reverse  |                  |
|                  |                 | mode directional |                  |
|                  |                 | derivatives      |                  |
|                  |                 | needed. By       |                  |
|                  |                 | default,         |                  |
|                  |                 | ad_weight is     |                  |
|                  |                 | calculated       |                  |
|                  |                 | automatically,   |                  |
|                  |                 | but this can be  |                  |
|                  |                 | overridden by    |                  |
|                  |                 | setting this     |                  |
|                  |                 | option. In       |                  |
|                  |                 | particular, 0    |                  |
|                  |                 | means forcing    |                  |
|                  |                 | forward mode and |                  |
|                  |                 | 1 forcing        |                  |
|                  |                 | reverse mode.    |                  |
|                  |                 | Leave unset for  |                  |
|                  |                 | (class specific) |                  |
|                  |                 | heuristics.      |                  |
+------------------+-----------------+------------------+------------------+
| ad_weight_sp     | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for sparsity     | Internal         |
|                  |                 | pattern          |                  |
|                  |                 | calculation calc |                  |
|                  |                 | ulation.Override |                  |
|                  |                 | s default        |                  |
|                  |                 | behavior. Set to |                  |
|                  |                 | 0 and 1 to force |                  |
|                  |                 | forward and      |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | respectively.    |                  |
|                  |                 | Cf. option       |                  |
|                  |                 | \"ad_weight\".     |                  |
|                  |                 | When set to -1,  |                  |
|                  |                 | sparsity is      |                  |
|                  |                 | completely       |                  |
|                  |                 | ignored and      |                  |
|                  |                 | dense matrices   |                  |
|                  |                 | are used.        |                  |
+------------------+-----------------+------------------+------------------+
| always_inline    | OT_BOOL         | Force inlining.  | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| cache            | OT_DICT         | Prepopulate the  | casadi::Function |
|                  |                 | function cache.  | Internal         |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| compiler         | OT_STRING       | Just-in-time     | casadi::Function |
|                  |                 | compiler plugin  | Internal         |
|                  |                 | to be used.      |                  |
+------------------+-----------------+------------------+------------------+
| const_A          | OT_BOOL         | Assume A is      | casadi::Expm     |
|                  |                 | constant.        |                  |
|                  |                 | Default: false.  |                  |
+------------------+-----------------+------------------+------------------+
| custom_jacobian  | OT_FUNCTION     | Override         | casadi::Function |
|                  |                 | CasADi's AD. Use | Internal         |
|                  |                 | together with    |                  |
|                  |                 | 'jac_penalty':   |                  |
|                  |                 | 0. Note: Highly  |                  |
|                  |                 | experimental.    |                  |
|                  |                 | Syntax may break |                  |
|                  |                 | often.           |                  |
+------------------+-----------------+------------------+------------------+
| der_options      | OT_DICT         | Default options  | casadi::Function |
|                  |                 | to be used to    | Internal         |
|                  |                 | populate         |                  |
|                  |                 | forward_options, |                  |
|                  |                 | reverse_options, |                  |
|                  |                 | and              |                  |
|                  |                 | jacobian_options |                  |
|                  |                 | before those     |                  |
|                  |                 | options are      |                  |
|                  |                 | merged in.       |                  |
+------------------+-----------------+------------------+------------------+
| derivative_of    | OT_FUNCTION     | The function is  | casadi::Function |
|                  |                 | a derivative of  | Internal         |
|                  |                 | another          |                  |
|                  |                 | function. The    |                  |
|                  |                 | type of          |                  |
|                  |                 | derivative       |                  |
|                  |                 | (directional     |                  |
|                  |                 | derivative,      |                  |
|                  |                 | Jacobian) is     |                  |
|                  |                 | inferred from    |                  |
|                  |                 | the function     |                  |
|                  |                 | name.            |                  |
+------------------+-----------------+------------------+------------------+
| dump             | OT_BOOL         | Dump function to | casadi::Function |
|                  |                 | file upon first  | Internal         |
|                  |                 | evaluation.      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| dump_dir         | OT_STRING       | Directory to     | casadi::Function |
|                  |                 | dump             | Internal         |
|                  |                 | inputs/outputs   |                  |
|                  |                 | to. Make sure    |                  |
|                  |                 | the directory    |                  |
|                  |                 | exists [.]       |                  |
+------------------+-----------------+------------------+------------------+
| dump_format      | OT_STRING       | Choose file      | casadi::Function |
|                  |                 | format to dump   | Internal         |
|                  |                 | matrices. See    |                  |
|                  |                 | DM.from_file     |                  |
|                  |                 | [mtx]            |                  |
+------------------+-----------------+------------------+------------------+
| dump_in          | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | to file          |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| dump_out         | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs to file  |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| enable_fd        | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation by   |                  |
|                  |                 | finite           |                  |
|                  |                 | differencing.    |                  |
|                  |                 | [default:        |                  |
|                  |                 | false]]          |                  |
+------------------+-----------------+------------------+------------------+
| enable_forward   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using forward    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_jacobian  | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobians of all |                  |
|                  |                 | differentiable   |                  |
|                  |                 | outputs with     |                  |
|                  |                 | respect to all   |                  |
|                  |                 | differentiable   |                  |
|                  |                 | inputs - if      |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_reverse   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | transposed       |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using reverse    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| error_on_fail    | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when function    | ction            |
|                  |                 | evaluation fails |                  |
|                  |                 | (default true).  |                  |
+------------------+-----------------+------------------+------------------+
| fd_method        | OT_STRING       | Method for       | casadi::Function |
|                  |                 | finite           | Internal         |
|                  |                 | differencing     |                  |
|                  |                 | [default         |                  |
|                  |                 | 'central']       |                  |
+------------------+-----------------+------------------+------------------+
| fd_options       | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | finite           |                  |
|                  |                 | difference       |                  |
|                  |                 | instance         |                  |
+------------------+-----------------+------------------+------------------+
| forward_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | forward mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| gather_stats     | OT_BOOL         | Deprecated       | casadi::Function |
|                  |                 | option           | Internal         |
|                  |                 | (ignored):       |                  |
|                  |                 | Statistics are   |                  |
|                  |                 | now always       |                  |
|                  |                 | collected.       |                  |
+------------------+-----------------+------------------+------------------+
| input_scheme     | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| inputs_check     | OT_BOOL         | Throw exceptions | casadi::Function |
|                  |                 | when the         | Internal         |
|                  |                 | numerical values |                  |
|                  |                 | of the inputs    |                  |
|                  |                 | don't make sense |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_in       | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each input if it | Internal         |
|                  |                 | should be        |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_out      | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each output if   | Internal         |
|                  |                 | it should be     |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| jac_penalty      | OT_DOUBLE       | When requested   | casadi::Function |
|                  |                 | for a number of  | Internal         |
|                  |                 | forward/reverse  |                  |
|                  |                 | directions, it   |                  |
|                  |                 | may be cheaper   |                  |
|                  |                 | to compute first |                  |
|                  |                 | the full         |                  |
|                  |                 | jacobian and     |                  |
|                  |                 | then multiply    |                  |
|                  |                 | with seeds,      |                  |
|                  |                 | rather than      |                  |
|                  |                 | obtain the       |                  |
|                  |                 | requested        |                  |
|                  |                 | directions in a  |                  |
|                  |                 | straightforward  |                  |
|                  |                 | manner. Casadi   |                  |
|                  |                 | uses a heuristic |                  |
|                  |                 | to decide which  |                  |
|                  |                 | is cheaper. A    |                  |
|                  |                 | high value of    |                  |
|                  |                 | 'jac_penalty'    |                  |
|                  |                 | makes it less    |                  |
|                  |                 | likely for the   |                  |
|                  |                 | heurstic to      |                  |
|                  |                 | chose the full   |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy. The    |                  |
|                  |                 | special value -1 |                  |
|                  |                 | indicates never  |                  |
|                  |                 | to use the full  |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy         |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_options | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | Jacobian         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| jit              | OT_BOOL         | Use just-in-time | casadi::Function |
|                  |                 | compiler to      | Internal         |
|                  |                 | speed up the     |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| jit_cleanup      | OT_BOOL         | Cleanup up the   | casadi::Function |
|                  |                 | temporary source | Internal         |
|                  |                 | file that jit    |                  |
|                  |                 | creates.         |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| jit_name         | OT_STRING       | The file name    | casadi::Function |
|                  |                 | used to write    | Internal         |
|                  |                 | out code. The    |                  |
|                  |                 | actual file      |                  |
|                  |                 | names used       |                  |
|                  |                 | depend on 'jit_t |                  |
|                  |                 | emp_suffix' and  |                  |
|                  |                 | include          |                  |
|                  |                 | extensions.      |                  |
|                  |                 | Default:         |                  |
|                  |                 | 'jit_tmp'        |                  |
+------------------+-----------------+------------------+------------------+
| jit_options      | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | jit compiler.    |                  |
+------------------+-----------------+------------------+------------------+
| jit_serialize    | OT_STRING       | Specify          | casadi::Function |
|                  |                 | behaviour when   | Internal         |
|                  |                 | serializing a    |                  |
|                  |                 | jitted function: |                  |
|                  |                 | SOURCE|link|embe |                  |
|                  |                 | d.               |                  |
+------------------+-----------------+------------------+------------------+
| jit_temp_suffix  | OT_BOOL         | Use a temporary  | casadi::Function |
|                  |                 | (seemingly       | Internal         |
|                  |                 | random) filename |                  |
|                  |                 | suffix for       |                  |
|                  |                 | generated code   |                  |
|                  |                 | and libraries.   |                  |
|                  |                 | This is desired  |                  |
|                  |                 | for thread-      |                  |
|                  |                 | safety. This     |                  |
|                  |                 | behaviour may    |                  |
|                  |                 | defeat caching   |                  |
|                  |                 | compiler         |                  |
|                  |                 | wrappers.        |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| max_io           | OT_INT          | Acceptable       | casadi::Function |
|                  |                 | number of inputs | Internal         |
|                  |                 | and outputs.     |                  |
|                  |                 | Warn if          |                  |
|                  |                 | exceeded.        |                  |
+------------------+-----------------+------------------+------------------+
| max_num_dir      | OT_INT          | Specify the      | casadi::Function |
|                  |                 | maximum number   | Internal         |
|                  |                 | of directions    |                  |
|                  |                 | for derivative   |                  |
|                  |                 | functions.       |                  |
|                  |                 | Overrules the    |                  |
|                  |                 | builtin optimize |                  |
|                  |                 | d_num_dir.       |                  |
+------------------+-----------------+------------------+------------------+
| never_inline     | OT_BOOL         | Forbid inlining. | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| output_scheme    | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| post_expand      | OT_BOOL         | After            | casadi::Function |
|                  |                 | construction,    | Internal         |
|                  |                 | expand this      |                  |
|                  |                 | Function .       |                  |
|                  |                 | Default: False   |                  |
+------------------+-----------------+------------------+------------------+
| post_expand_opti | OT_DICT         | Options to be    | casadi::Function |
| ons              |                 | passed to post-  | Internal         |
|                  |                 | construction     |                  |
|                  |                 | expansion.       |                  |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| print_in         | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_out        | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs          |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_time       | OT_BOOL         | print            | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time. Implies    |                  |
|                  |                 | record_time.     |                  |
+------------------+-----------------+------------------+------------------+
| record_time      | OT_BOOL         | record           | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time, for        |                  |
|                  |                 | retrieval with   |                  |
|                  |                 | stats().         |                  |
+------------------+-----------------+------------------+------------------+
| regularity_check | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when NaN or Inf  | ction            |
|                  |                 | appears during   |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| reverse_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | reverse mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| user_data        | OT_VOIDPTR      | A user-defined   | casadi::Function |
|                  |                 | field that can   | Internal         |
|                  |                 | be used to       |                  |
|                  |                 | identify the     |                  |
|                  |                 | function or pass |                  |
|                  |                 | additional       |                  |
|                  |                 | information      |                  |
+------------------+-----------------+------------------+------------------+
| verbose          | OT_BOOL         | Verbose          | casadi::ProtoFun |
|                  |                 | evaluation  for  | ction            |
|                  |                 | debugging        |                  |
+------------------+-----------------+------------------+------------------+

List of plugins
- slicot

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with  
Expm.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

slicot
------



Extra doc: https://github.com/casadi/casadi/wiki/L_22l

Joris Gillis

Extra doc: https://github.com/casadi/casadi/wiki/L_21l

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.hpp#L44

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.cpp#L44-L47

";

%feature("docstring")  casadi::expm_n_in() "

[INTERNAL] 
Get the number of expm solver inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_rs

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.hpp#L49

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.cpp#L49-L51

";

%feature("docstring")  casadi::expm_n_out() "

[INTERNAL] 
Get the number of expm solver outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_rt

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.hpp#L53

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/expm.cpp#L53-L55

";

%feature("docstring")  casadi::external(const std::string &name, const 
Importer &li, const Dict &opts=Dict()) "

[INTERNAL] 
Load a just-in-time compiled external function.

File name given

Extra doc: https://github.com/casadi/casadi/wiki/L_i2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/external.hpp#L42

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/external.cpp#L42-L45

";

%feature("docstring")  casadi::external(const std::string &name, const Dict 
&opts=Dict()) "

[INTERNAL] 
Load an external function from a shared library.

Parameters:
-----------

name: 
Name as in the label assigned to a CasADi  Function object: 
Function(name,...,...) Will be used to look up 
symbols/functions named eg. 
<name>_eval Use  nm (linux/osx) or  depends.exe (win) to check which symbols
 are present in your shared library

File name is assumed to be ./<name>.so

Extra doc: https://github.com/casadi/casadi/wiki/L_i0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/external.hpp#L47

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/external.cpp#L47-L49

";

%feature("docstring")  casadi::external(const std::string &name, const 
std::string &bin_name, const Dict &opts=Dict()) "

[INTERNAL] 
Load an external function from a shared library.

Parameters:
-----------

name: 
Name as in the label assigned to a CasADi  Function object: 
Function(name,...,...) Will be used to look up 
symbols/functions named eg. 
<name>_eval Use  nm (linux/osx) or  depends.exe (win) to check which symbols
 are present in your shared library

bin_name: 
File name of the shared library

Extra doc: https://github.com/casadi/casadi/wiki/L_i1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/external.hpp#L51

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/external.cpp#L51-L54

";

%feature("docstring") casadi::IndexRecution::_function_buffer_eval "

[INTERNAL] ";

%feature("docstring")  casadi::index_interp1d(const std::vector< double > 
&x, double xq, bool equidistant) "

[INTERNAL] ";

%feature("docstring")  casadi::combine(const Dict &first, const Dict 
&second, bool recurse=false) "

[INTERNAL] 
Combine two dicts. First has priority.

Extra doc: https://github.com/casadi/casadi/wiki/L_17t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L593

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L593-L599

";

%feature("docstring")  casadi::update_dict(Dict &target, const Dict &source,
 bool recurse=false) "

[INTERNAL] 
Update the target dictionary in place with source elements.

Extra doc: https://github.com/casadi/casadi/wiki/L_17u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.hpp#L601

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/generic_type.cpp#L601-L614

";

%feature("docstring")  casadi::get_from_dict(const std::map< std::string, T 
> &d, const std::string &key, const T &default_value) "

[INTERNAL] ";

%feature("docstring")  casadi::get_from_dict(const Dict &d, const 
std::string &key, const T &default_value) "

[INTERNAL] ";

%feature("docstring")  casadi::extract_from_dict(const Dict &d, const 
std::string &key, T &value) "

[INTERNAL] ";

%feature("docstring")  casadi::extract_from_dict_inplace(Dict &d, const 
std::string &key, T &value) "

[INTERNAL] ";

%feature("docstring")  casadi::is_slice(const IM &x, bool ind1=false) "

[INTERNAL] 
Is the IM a  Slice.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/im.hpp#L30

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/im_instantiator.cpp#L30-L32

";

%feature("docstring")  casadi::is_slice(const std::vector< casadi_int > &v, 
bool ind1=false) "

[INTERNAL] 
Check if an index vector can be represented more efficiently as 
a 
slice.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L170

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L170-L200

";

%feature("docstring")  casadi::to_slice(const IM &x, bool ind1=false) "

[INTERNAL] 
Convert IM to  Slice.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/im.hpp#L34

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/im_instantiator.cpp#L34-L36

";

%feature("docstring")  casadi::to_slice(const std::vector< casadi_int > &v, 
bool ind1=false) "

[INTERNAL] 
Construct from an index vector (requires is_slice(v) to be true)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L152

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L152-L168

";

%feature("docstring")  casadi::text2type(const std::string &text) "

[INTERNAL] 
Convert to a type.

Extra doc: https://github.com/casadi/casadi/wiki/L_15y

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L39

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L39-L44

";

%feature("docstring")  casadi::text2vector(const std::string &text) "

[INTERNAL] 
Get entry as a vector.

Extra doc: https://github.com/casadi/casadi/wiki/L_15z

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L50

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L50-L56

";

%feature("docstring")  casadi::text2set(const std::string &text) "

[INTERNAL] 
Get entry as a set.

Extra doc: https://github.com/casadi/casadi/wiki/L_160

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L62

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/importer.hpp#L62-L67

";

%feature("docstring")  casadi::simpleRK(Function f, casadi_int N=10, 
casadi_int order=4) "

[INTERNAL] 
Construct an explicit Runge-Kutta integrator.

The constructed function has three inputs, corresponding to initial 
state 
(x0), parameter (p) and integration time (h) and one output, 
corresponding 
to final state (xf).

Parameters:
-----------

f: 
ODE function with two inputs (x and p) and one output (xdot)

N: 
Number of integrator steps

order: 
Order of interpolating polynomials

Extra doc: https://github.com/casadi/casadi/wiki/L_1sr

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L128

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L128-L187

";

%feature("docstring")  casadi::collocation_interpolators(const std::vector< 
double > &tau, std::vector< std::vector< double > > &C, std::vector< double 
> &D) "

[INTERNAL] 
Obtain collocation interpolating matrices.

A collocation method poses a polynomial Pi that interpolates exactly 

through an initial state (0,X_0) and helper states at collocation 
points 
(tau_j,X:collPoint(j)).

This function computes the linear mapping between dPi/dt and 
coefficients 
Z=[X_0 X:collPoints].

Parameters:
-----------

tau: 
location of collocation points, as obtained from collocation_points

C: 
interpolating coefficients to obtain derivatives. Length: order+1, 

order+1



::

dPi/dt @Z_j = (1/h) Sum_i C[j][i]*Z_i,



with h the length of the integration interval.

Parameters:
-----------

D: 
interpolating coefficients to obtain end state. Length: order+1



::

Pi @X_f = Sum_i D[i]*Z_i



Extra doc: https://github.com/casadi/casadi/wiki/L_1sp

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L189-L231

";

%feature("docstring")  casadi::collocation_coeff(const std::vector< double >
 &tau, DM &C, DM &D, DM &B) "

[INTERNAL] 
Obtain collocation interpolating matrices.

A collocation method poses a polynomial Pi that interpolates exactly 

through an initial state (0,X_0) and helper states at collocation 
points 
(tau_j,Xc_j) with j=1..degree.

This function computes the linear mapping between dPi/dt and 
coefficients 
Z=[X_0 Xc].

Parameters:
-----------

tau: 
location of collocation points (length: degree), as obtained from 

collocation_points

C: 
interpolating coefficients to obtain derivatives. Size: (degree+1)-by-

degree

You may find the slopes of Pi at the collocation points as

::

dPi/dt @ Xc = (1/h) Z*C,



with h the length of the integration interval.

Parameters:
-----------

D: 
interpolating coefficients to obtain end state. Size: (degree+1)-by-1

You may find the end point of Pi as

::

Pi @X_f = Z*D



Parameters:
-----------

B: 
quadrature coefficients Size: degree-by-1

Given quadrature righ-hand-sides 'quad' evaluated at the collocation 

points, you may find the integrated quadratures as

::

q = quad*B*h



Extra doc: https://github.com/casadi/casadi/wiki/L_1sq

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L233

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L233-L287

";

%feature("docstring")  casadi::simpleIRK(Function f, casadi_int N=10, 
casadi_int order=4, const std::string &scheme="radau", const std::string 
&solver="newton", const Dict &solver_options=Dict()) "

[INTERNAL] 
Construct an implicit Runge-Kutta integrator using a collocation
 
scheme.

The constructed function has three inputs, corresponding to initial 
state 
(x0), parameter (p) and integration time (h) and one output, 
corresponding 
to final state (xf).

Parameters:
-----------

f: 
ODE function with two inputs (x and p) and one output (xdot)

N: 
Number of integrator steps

order: 
Order of interpolating polynomials

scheme: 
 Collocation scheme, as excepted by collocationPoints function.

solver: 
Solver plugin

solver_options: 
Options to be passed to the solver plugin

Extra doc: https://github.com/casadi/casadi/wiki/L_1ss

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L289

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L289-L354

";

%feature("docstring")  casadi::simpleIntegrator(Function f, const 
std::string &integrator="cvodes", const Dict &integrator_options=Dict()) "

[INTERNAL] 
Simplified wrapper for the  Integrator class.

Extra doc: https://github.com/casadi/casadi/wiki/L_1st

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.hpp#L356

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integration_tools.cpp#L356-L395

";

%feature("docstring")  casadi::has_integrator(const std::string &name) "

[INTERNAL] 
Check if a particular plugin is available.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L97

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L97-L99

";

%feature("docstring")  casadi::load_integrator(const std::string &name) "

[INTERNAL] 
Explicitly load a plugin dynamically.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L101

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L101-L103

";

%feature("docstring")  casadi::doc_integrator(const std::string &name) "

[INTERNAL] 
Get the documentation string for a plugin.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L105

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L105-L107

";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const SXDict &dae, const Dict &opts=Dict()) "



Create an ODE/DAE integrator Solves an initial value problem (IVP) 
coupled 
to a terminal value problem with differential equation given 
as an implicit
 ODE coupled to an algebraic equation and a set of 
quadratures:



::

  Initial conditions at t=t0
  x(t0)  = x0
  q(t0)  = 0
  
  Forward integration from t=t0 to t=tf
  der(x) = function(x, z, p, t)                  Forward ODE
  0 = fz(x, z, p, t)                  Forward algebraic equations
  der(q) = fq(x, z, p, t)                  Forward quadratures
  
  Terminal conditions at t=tf
  rx(tf)  = rx0
  rq(tf)  = 0
  
  Backward integration from t=tf to t=t0
  der(rx) = gx(rx, rz, rp, x, z, p, t)        Backward ODE
  0 = gz(rx, rz, rp, x, z, p, t)        Backward algebraic equations
  der(rq) = gq(rx, rz, rp, x, z, p, t)        Backward quadratures
  
  where we assume that both the forward and backwards integrations are index-1
  (i.e. dfz/dz, dgz/drz are invertible) and furthermore that
  gx, gz and gq have a linear dependency on rx, rz and rp.

General information

>List of available options

+------------------+-----------------+------------------+------------------+
|        Id        |      Type       |   Description    |     Used in      |
+==================+=================+==================+==================+
| ad_weight        | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for derivative   | Internal         |
|                  |                 | calculation.When |                  |
|                  |                 | there is an      |                  |
|                  |                 | option of either |                  |
|                  |                 | using forward or |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | directional      |                  |
|                  |                 | derivatives, the |                  |
|                  |                 | condition ad_wei |                  |
|                  |                 | ght*nf<=(1-      |                  |
|                  |                 | ad_weight)*na is |                  |
|                  |                 | used where nf    |                  |
|                  |                 | and na are       |                  |
|                  |                 | estimates of the |                  |
|                  |                 | number of        |                  |
|                  |                 | forward/reverse  |                  |
|                  |                 | mode directional |                  |
|                  |                 | derivatives      |                  |
|                  |                 | needed. By       |                  |
|                  |                 | default,         |                  |
|                  |                 | ad_weight is     |                  |
|                  |                 | calculated       |                  |
|                  |                 | automatically,   |                  |
|                  |                 | but this can be  |                  |
|                  |                 | overridden by    |                  |
|                  |                 | setting this     |                  |
|                  |                 | option. In       |                  |
|                  |                 | particular, 0    |                  |
|                  |                 | means forcing    |                  |
|                  |                 | forward mode and |                  |
|                  |                 | 1 forcing        |                  |
|                  |                 | reverse mode.    |                  |
|                  |                 | Leave unset for  |                  |
|                  |                 | (class specific) |                  |
|                  |                 | heuristics.      |                  |
+------------------+-----------------+------------------+------------------+
| ad_weight_sp     | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for sparsity     | Internal         |
|                  |                 | pattern          |                  |
|                  |                 | calculation calc |                  |
|                  |                 | ulation.Override |                  |
|                  |                 | s default        |                  |
|                  |                 | behavior. Set to |                  |
|                  |                 | 0 and 1 to force |                  |
|                  |                 | forward and      |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | respectively.    |                  |
|                  |                 | Cf. option       |                  |
|                  |                 | \"ad_weight\".     |                  |
|                  |                 | When set to -1,  |                  |
|                  |                 | sparsity is      |                  |
|                  |                 | completely       |                  |
|                  |                 | ignored and      |                  |
|                  |                 | dense matrices   |                  |
|                  |                 | are used.        |                  |
+------------------+-----------------+------------------+------------------+
| always_inline    | OT_BOOL         | Force inlining.  | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| augmented_option | OT_DICT         | Options to be    | casadi::Integrat |
| s                |                 | passed down to   | or               |
|                  |                 | the augmented    |                  |
|                  |                 | integrator, if   |                  |
|                  |                 | one is           |                  |
|                  |                 | constructed.     |                  |
+------------------+-----------------+------------------+------------------+
| cache            | OT_DICT         | Prepopulate the  | casadi::Function |
|                  |                 | function cache.  | Internal         |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| common_options   | OT_DICT         | Options for      | casadi::OracleFu |
|                  |                 | auto-generated   | nction           |
|                  |                 | functions        |                  |
+------------------+-----------------+------------------+------------------+
| compiler         | OT_STRING       | Just-in-time     | casadi::Function |
|                  |                 | compiler plugin  | Internal         |
|                  |                 | to be used.      |                  |
+------------------+-----------------+------------------+------------------+
| custom_jacobian  | OT_FUNCTION     | Override         | casadi::Function |
|                  |                 | CasADi's AD. Use | Internal         |
|                  |                 | together with    |                  |
|                  |                 | 'jac_penalty':   |                  |
|                  |                 | 0. Note: Highly  |                  |
|                  |                 | experimental.    |                  |
|                  |                 | Syntax may break |                  |
|                  |                 | often.           |                  |
+------------------+-----------------+------------------+------------------+
| der_options      | OT_DICT         | Default options  | casadi::Function |
|                  |                 | to be used to    | Internal         |
|                  |                 | populate         |                  |
|                  |                 | forward_options, |                  |
|                  |                 | reverse_options, |                  |
|                  |                 | and              |                  |
|                  |                 | jacobian_options |                  |
|                  |                 | before those     |                  |
|                  |                 | options are      |                  |
|                  |                 | merged in.       |                  |
+------------------+-----------------+------------------+------------------+
| derivative_of    | OT_FUNCTION     | The function is  | casadi::Function |
|                  |                 | a derivative of  | Internal         |
|                  |                 | another          |                  |
|                  |                 | function. The    |                  |
|                  |                 | type of          |                  |
|                  |                 | derivative       |                  |
|                  |                 | (directional     |                  |
|                  |                 | derivative,      |                  |
|                  |                 | Jacobian) is     |                  |
|                  |                 | inferred from    |                  |
|                  |                 | the function     |                  |
|                  |                 | name.            |                  |
+------------------+-----------------+------------------+------------------+
| dump             | OT_BOOL         | Dump function to | casadi::Function |
|                  |                 | file upon first  | Internal         |
|                  |                 | evaluation.      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| dump_dir         | OT_STRING       | Directory to     | casadi::Function |
|                  |                 | dump             | Internal         |
|                  |                 | inputs/outputs   |                  |
|                  |                 | to. Make sure    |                  |
|                  |                 | the directory    |                  |
|                  |                 | exists [.]       |                  |
+------------------+-----------------+------------------+------------------+
| dump_format      | OT_STRING       | Choose file      | casadi::Function |
|                  |                 | format to dump   | Internal         |
|                  |                 | matrices. See    |                  |
|                  |                 | DM.from_file     |                  |
|                  |                 | [mtx]            |                  |
+------------------+-----------------+------------------+------------------+
| dump_in          | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | to file          |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| dump_out         | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs to file  |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| enable_fd        | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation by   |                  |
|                  |                 | finite           |                  |
|                  |                 | differencing.    |                  |
|                  |                 | [default:        |                  |
|                  |                 | false]]          |                  |
+------------------+-----------------+------------------+------------------+
| enable_forward   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using forward    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_jacobian  | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobians of all |                  |
|                  |                 | differentiable   |                  |
|                  |                 | outputs with     |                  |
|                  |                 | respect to all   |                  |
|                  |                 | differentiable   |                  |
|                  |                 | inputs - if      |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_reverse   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | transposed       |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using reverse    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| error_on_fail    | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when function    | ction            |
|                  |                 | evaluation fails |                  |
|                  |                 | (default true).  |                  |
+------------------+-----------------+------------------+------------------+
| expand           | OT_BOOL         | Replace MX with  | casadi::Integrat |
|                  |                 | SX expressions   | or               |
|                  |                 | in problem       |                  |
|                  |                 | formulation      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| fd_method        | OT_STRING       | Method for       | casadi::Function |
|                  |                 | finite           | Internal         |
|                  |                 | differencing     |                  |
|                  |                 | [default         |                  |
|                  |                 | 'central']       |                  |
+------------------+-----------------+------------------+------------------+
| fd_options       | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | finite           |                  |
|                  |                 | difference       |                  |
|                  |                 | instance         |                  |
+------------------+-----------------+------------------+------------------+
| forward_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | forward mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| gather_stats     | OT_BOOL         | Deprecated       | casadi::Function |
|                  |                 | option           | Internal         |
|                  |                 | (ignored):       |                  |
|                  |                 | Statistics are   |                  |
|                  |                 | now always       |                  |
|                  |                 | collected.       |                  |
+------------------+-----------------+------------------+------------------+
| grid             | OT_DOUBLEVECTOR | [DEPRECATED]     | casadi::Integrat |
|                  |                 | Time grid        | or               |
+------------------+-----------------+------------------+------------------+
| input_scheme     | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| inputs_check     | OT_BOOL         | Throw exceptions | casadi::Function |
|                  |                 | when the         | Internal         |
|                  |                 | numerical values |                  |
|                  |                 | of the inputs    |                  |
|                  |                 | don't make sense |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_in       | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each input if it | Internal         |
|                  |                 | should be        |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_out      | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each output if   | Internal         |
|                  |                 | it should be     |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| jac_penalty      | OT_DOUBLE       | When requested   | casadi::Function |
|                  |                 | for a number of  | Internal         |
|                  |                 | forward/reverse  |                  |
|                  |                 | directions, it   |                  |
|                  |                 | may be cheaper   |                  |
|                  |                 | to compute first |                  |
|                  |                 | the full         |                  |
|                  |                 | jacobian and     |                  |
|                  |                 | then multiply    |                  |
|                  |                 | with seeds,      |                  |
|                  |                 | rather than      |                  |
|                  |                 | obtain the       |                  |
|                  |                 | requested        |                  |
|                  |                 | directions in a  |                  |
|                  |                 | straightforward  |                  |
|                  |                 | manner. Casadi   |                  |
|                  |                 | uses a heuristic |                  |
|                  |                 | to decide which  |                  |
|                  |                 | is cheaper. A    |                  |
|                  |                 | high value of    |                  |
|                  |                 | 'jac_penalty'    |                  |
|                  |                 | makes it less    |                  |
|                  |                 | likely for the   |                  |
|                  |                 | heurstic to      |                  |
|                  |                 | chose the full   |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy. The    |                  |
|                  |                 | special value -1 |                  |
|                  |                 | indicates never  |                  |
|                  |                 | to use the full  |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy         |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_options | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | Jacobian         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| jit              | OT_BOOL         | Use just-in-time | casadi::Function |
|                  |                 | compiler to      | Internal         |
|                  |                 | speed up the     |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| jit_cleanup      | OT_BOOL         | Cleanup up the   | casadi::Function |
|                  |                 | temporary source | Internal         |
|                  |                 | file that jit    |                  |
|                  |                 | creates.         |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| jit_name         | OT_STRING       | The file name    | casadi::Function |
|                  |                 | used to write    | Internal         |
|                  |                 | out code. The    |                  |
|                  |                 | actual file      |                  |
|                  |                 | names used       |                  |
|                  |                 | depend on 'jit_t |                  |
|                  |                 | emp_suffix' and  |                  |
|                  |                 | include          |                  |
|                  |                 | extensions.      |                  |
|                  |                 | Default:         |                  |
|                  |                 | 'jit_tmp'        |                  |
+------------------+-----------------+------------------+------------------+
| jit_options      | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | jit compiler.    |                  |
+------------------+-----------------+------------------+------------------+
| jit_serialize    | OT_STRING       | Specify          | casadi::Function |
|                  |                 | behaviour when   | Internal         |
|                  |                 | serializing a    |                  |
|                  |                 | jitted function: |                  |
|                  |                 | SOURCE|link|embe |                  |
|                  |                 | d.               |                  |
+------------------+-----------------+------------------+------------------+
| jit_temp_suffix  | OT_BOOL         | Use a temporary  | casadi::Function |
|                  |                 | (seemingly       | Internal         |
|                  |                 | random) filename |                  |
|                  |                 | suffix for       |                  |
|                  |                 | generated code   |                  |
|                  |                 | and libraries.   |                  |
|                  |                 | This is desired  |                  |
|                  |                 | for thread-      |                  |
|                  |                 | safety. This     |                  |
|                  |                 | behaviour may    |                  |
|                  |                 | defeat caching   |                  |
|                  |                 | compiler         |                  |
|                  |                 | wrappers.        |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| max_io           | OT_INT          | Acceptable       | casadi::Function |
|                  |                 | number of inputs | Internal         |
|                  |                 | and outputs.     |                  |
|                  |                 | Warn if          |                  |
|                  |                 | exceeded.        |                  |
+------------------+-----------------+------------------+------------------+
| max_num_dir      | OT_INT          | Specify the      | casadi::Function |
|                  |                 | maximum number   | Internal         |
|                  |                 | of directions    |                  |
|                  |                 | for derivative   |                  |
|                  |                 | functions.       |                  |
|                  |                 | Overrules the    |                  |
|                  |                 | builtin optimize |                  |
|                  |                 | d_num_dir.       |                  |
+------------------+-----------------+------------------+------------------+
| monitor          | OT_STRINGVECTOR | Set of user      | casadi::OracleFu |
|                  |                 | problem          | nction           |
|                  |                 | functions to be  |                  |
|                  |                 | monitored        |                  |
+------------------+-----------------+------------------+------------------+
| nadj             | OT_INT          | Number of        | casadi::Integrat |
|                  |                 | adjoint          | or               |
|                  |                 | sensitivities to |                  |
|                  |                 | be calculated    |                  |
|                  |                 | [0]              |                  |
+------------------+-----------------+------------------+------------------+
| never_inline     | OT_BOOL         | Forbid inlining. | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| nfwd             | OT_INT          | Number of        | casadi::Integrat |
|                  |                 | forward          | or               |
|                  |                 | sensitivities to |                  |
|                  |                 | be calculated    |                  |
|                  |                 | [0]              |                  |
+------------------+-----------------+------------------+------------------+
| number_of_finite | OT_INT          | Target number of | casadi::Integrat |
| _elements        |                 | finite elements. | or               |
|                  |                 | The actual       |                  |
|                  |                 | number may be    |                  |
|                  |                 | higher to        |                  |
|                  |                 | accommodate all  |                  |
|                  |                 | output times     |                  |
+------------------+-----------------+------------------+------------------+
| output_scheme    | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| output_t0        | OT_BOOL         | [DEPRECATED]     | casadi::Integrat |
|                  |                 | Output the state | or               |
|                  |                 | at the initial   |                  |
|                  |                 | time             |                  |
+------------------+-----------------+------------------+------------------+
| post_expand      | OT_BOOL         | After            | casadi::Function |
|                  |                 | construction,    | Internal         |
|                  |                 | expand this      |                  |
|                  |                 | Function .       |                  |
|                  |                 | Default: False   |                  |
+------------------+-----------------+------------------+------------------+
| post_expand_opti | OT_DICT         | Options to be    | casadi::Function |
| ons              |                 | passed to post-  | Internal         |
|                  |                 | construction     |                  |
|                  |                 | expansion.       |                  |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| print_in         | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_out        | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs          |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_stats      | OT_BOOL         | Print out        | casadi::Integrat |
|                  |                 | statistics after | or               |
|                  |                 | integration      |                  |
+------------------+-----------------+------------------+------------------+
| print_time       | OT_BOOL         | print            | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time. Implies    |                  |
|                  |                 | record_time.     |                  |
+------------------+-----------------+------------------+------------------+
| record_time      | OT_BOOL         | record           | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time, for        |                  |
|                  |                 | retrieval with   |                  |
|                  |                 | stats().         |                  |
+------------------+-----------------+------------------+------------------+
| regularity_check | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when NaN or Inf  | ction            |
|                  |                 | appears during   |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| reverse_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | reverse mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| rootfinder       | OT_STRING       | An implicit      | casadi::Integrat |
|                  |                 | function solver  | or               |
+------------------+-----------------+------------------+------------------+
| rootfinder_optio | OT_DICT         | Options to be    | casadi::Integrat |
| ns               |                 | passed to the    | or               |
|                  |                 | NLP Solver       |                  |
+------------------+-----------------+------------------+------------------+
| show_eval_warnin | OT_BOOL         | Show warnings    | casadi::OracleFu |
| gs               |                 | generated from   | nction           |
|                  |                 | function         |                  |
|                  |                 | evaluations      |                  |
|                  |                 | [true]           |                  |
+------------------+-----------------+------------------+------------------+
| simplify         | OT_BOOL         | Implement as MX  | casadi::Integrat |
|                  |                 | Function (codege | or               |
|                  |                 | neratable/serial |                  |
|                  |                 | izable) default: |                  |
|                  |                 | false            |                  |
+------------------+-----------------+------------------+------------------+
| simplify_options | OT_DICT         | Any options to   | casadi::Integrat |
|                  |                 | pass to          | or               |
|                  |                 | simplified form  |                  |
|                  |                 | Function         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| specific_options | OT_DICT         | Options for      | casadi::OracleFu |
|                  |                 | specific auto-   | nction           |
|                  |                 | generated        |                  |
|                  |                 | functions,       |                  |
|                  |                 | overwriting the  |                  |
|                  |                 | defaults from    |                  |
|                  |                 | common_options.  |                  |
|                  |                 | Nested           |                  |
|                  |                 | dictionary.      |                  |
+------------------+-----------------+------------------+------------------+
| t0               | OT_DOUBLE       | [DEPRECATED]     | casadi::Integrat |
|                  |                 | Beginning of the | or               |
|                  |                 | time horizon     |                  |
+------------------+-----------------+------------------+------------------+
| tf               | OT_DOUBLE       | [DEPRECATED] End | casadi::Integrat |
|                  |                 | of the time      | or               |
|                  |                 | horizon          |                  |
+------------------+-----------------+------------------+------------------+
| user_data        | OT_VOIDPTR      | A user-defined   | casadi::Function |
|                  |                 | field that can   | Internal         |
|                  |                 | be used to       |                  |
|                  |                 | identify the     |                  |
|                  |                 | function or pass |                  |
|                  |                 | additional       |                  |
|                  |                 | information      |                  |
+------------------+-----------------+------------------+------------------+
| verbose          | OT_BOOL         | Verbose          | casadi::ProtoFun |
|                  |                 | evaluation  for  | ction            |
|                  |                 | debugging        |                  |
+------------------+-----------------+------------------+------------------+

>Input scheme: casadi::IntegratorInput (INTEGRATOR_NUM_IN = 7)

+-------------------+--------+---------------------------------------------+
|     Full name     | Short  |                 Description                 |
+===================+========+=============================================+
| INTEGRATOR_X0     | x0     | Differential state at the initial time.     |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_Z0     | z0     | Initial guess for the algebraic variable at |
|                   |        | the initial time.                           |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_P      | p      | Parameters.                                 |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_U      | u      | Piecewise constant control, a new control   |
|                   |        | interval starts at each output time.        |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_ADJ_XF | adj_xf | Adjoint seeds corresponding to the states   |
|                   |        | at the output times.                        |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_ADJ_ZF | adj_zf | Adjoint seeds corresponding to the          |
|                   |        | algebraic variables at the output times.    |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_ADJ_QF | adj_qf | Adjoint seeds corresponding to the          |
|                   |        | quadratures at the output times.            |
+-------------------+--------+---------------------------------------------+

>Output scheme: casadi::IntegratorOutput (INTEGRATOR_NUM_OUT = 7)

+-------------------+--------+---------------------------------------------+
|     Full name     | Short  |                 Description                 |
+===================+========+=============================================+
| INTEGRATOR_XF     | xf     | Differential state at all output times.     |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_ZF     | zf     | Algebraic variable at all output times.     |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_QF     | qf     | Quadrature state at all output times.       |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_ADJ_X0 | adj_x0 | Adjoint sensitivities corresponding to the  |
|                   |        | initial state.                              |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_ADJ_Z0 | adj_z0 | Adjoint sensitivities corresponding to the  |
|                   |        | algebraic variable guess.                   |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_ADJ_P  | adj_p  | Adjoint sensitivities corresponding to the  |
|                   |        | parameter vector.                           |
+-------------------+--------+---------------------------------------------+
| INTEGRATOR_ADJ_U  | adj_u  | Adjoint sensitivities corresponding to the  |
|                   |        | control vector.                             |
+-------------------+--------+---------------------------------------------+

List of plugins
- cvodes

- idas

- collocation

- rk

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with  
Integrator.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

cvodes
------



Interface to CVodes from the Sundials suite.

A call to evaluate will integrate to the end.

You can retrieve the entire state trajectory as follows, after the 
evaluate
 call: Call reset. Then call integrate(t_i) and getOuput for a
 series of 
times t_i.

Extra doc: https://github.com/casadi/casadi/wiki/L_228

>List of available options

+-----------------------------+-----------+--------------------------------+
|             Id              |   Type    |          Description           |
+=============================+===========+================================+
| abstol                      | OT_DOUBLE | Absolute tolerence for the IVP |
|                             |           | solution                       |
+-----------------------------+-----------+--------------------------------+
| always_recalculate_jacobian | OT_BOOL   | Recalculate Jacobian before    |
|                             |           | factorizations, even if        |
|                             |           | Jacobian is current [default:  |
|                             |           | true]                          |
+-----------------------------+-----------+--------------------------------+
| disable_internal_warnings   | OT_BOOL   | Disable SUNDIALS internal      |
|                             |           | warning messages               |
+-----------------------------+-----------+--------------------------------+
| fsens_all_at_once           | OT_BOOL   | Calculate all right hand sides |
|                             |           | of the sensitivity equations   |
|                             |           | at once                        |
+-----------------------------+-----------+--------------------------------+
| fsens_err_con               | OT_BOOL   | include the forward            |
|                             |           | sensitivities in all error     |
|                             |           | controls                       |
+-----------------------------+-----------+--------------------------------+
| interpolation_type          | OT_STRING | Type of interpolation for the  |
|                             |           | adjoint sensitivities          |
+-----------------------------+-----------+--------------------------------+
| linear_multistep_method     | OT_STRING | Integrator scheme: BDF|adams   |
+-----------------------------+-----------+--------------------------------+
| linear_solver               | OT_STRING | A custom linear solver creator |
|                             |           | function [default: qr]         |
+-----------------------------+-----------+--------------------------------+
| linear_solver_options       | OT_DICT   | Options to be passed to the    |
|                             |           | linear solver                  |
+-----------------------------+-----------+--------------------------------+
| max_krylov                  | OT_INT    | Maximum Krylov subspace size   |
+-----------------------------+-----------+--------------------------------+
| max_multistep_order         | OT_INT    | Maximum order for the          |
|                             |           | (variable-order) multistep     |
|                             |           | method                         |
+-----------------------------+-----------+--------------------------------+
| max_num_steps               | OT_INT    | Maximum number of integrator   |
|                             |           | steps                          |
+-----------------------------+-----------+--------------------------------+
| max_order                   | OT_DOUBLE | Maximum order                  |
+-----------------------------+-----------+--------------------------------+
| max_step_size               | OT_DOUBLE | Max step size [default: 0/inf] |
+-----------------------------+-----------+--------------------------------+
| min_step_size               | OT_DOUBLE | Min step size [default: 0/0.0] |
+-----------------------------+-----------+--------------------------------+
| newton_scheme               | OT_STRING | Linear solver scheme in the    |
|                             |           | Newton method:                 |
|                             |           | DIRECT|gmres|bcgstab|tfqmr     |
+-----------------------------+-----------+--------------------------------+
| nonlin_conv_coeff           | OT_DOUBLE | Coefficient in the nonlinear   |
|                             |           | convergence test               |
+-----------------------------+-----------+--------------------------------+
| nonlinear_solver_iteration  | OT_STRING | Nonlinear solver type:         |
|                             |           | NEWTON|functional              |
+-----------------------------+-----------+--------------------------------+
| quad_err_con                | OT_BOOL   | Should the quadratures affect  |
|                             |           | the step size control          |
+-----------------------------+-----------+--------------------------------+
| reltol                      | OT_DOUBLE | Relative tolerence for the IVP |
|                             |           | solution                       |
+-----------------------------+-----------+--------------------------------+
| scale_abstol                | OT_BOOL   | Scale absolute tolerance by    |
|                             |           | nominal value                  |
+-----------------------------+-----------+--------------------------------+
| second_order_correction     | OT_BOOL   | Second order correction in the |
|                             |           | augmented system Jacobian      |
|                             |           | [true]                         |
+-----------------------------+-----------+--------------------------------+
| sensitivity_method          | OT_STRING | Sensitivity method:            |
|                             |           | SIMULTANEOUS|staggered         |
+-----------------------------+-----------+--------------------------------+
| step0                       | OT_DOUBLE | initial step size [default:    |
|                             |           | 0/estimated]                   |
+-----------------------------+-----------+--------------------------------+
| steps_per_checkpoint        | OT_INT    | Number of steps between two    |
|                             |           | consecutive checkpoints        |
+-----------------------------+-----------+--------------------------------+
| stop_at_end                 | OT_BOOL   | [DEPRECATED] Stop the          |
|                             |           | integrator at the end of the   |
|                             |           | interval                       |
+-----------------------------+-----------+--------------------------------+
| use_preconditioner          | OT_BOOL   | Precondition the iterative     |
|                             |           | solver [default: true]         |
+-----------------------------+-----------+--------------------------------+



--------------------------------------------------------------------------------

idas
----



Interface to IDAS from the Sundials suite.

Extra doc: https://github.com/casadi/casadi/wiki/L_225

>List of available options

+---------------------------+-----------------+----------------------------+
|            Id             |      Type       |        Description         |
+===========================+=================+============================+
| abstol                    | OT_DOUBLE       | Absolute tolerence for the |
|                           |                 | IVP solution               |
+---------------------------+-----------------+----------------------------+
| abstolv                   | OT_DOUBLEVECTOR | Absolute tolerarance for   |
|                           |                 | each component             |
+---------------------------+-----------------+----------------------------+
| calc_ic                   | OT_BOOL         | Use IDACalcIC to get       |
|                           |                 | consistent initial         |
|                           |                 | conditions.                |
+---------------------------+-----------------+----------------------------+
| calc_icB                  | OT_BOOL         | Use IDACalcIC to get       |
|                           |                 | consistent initial         |
|                           |                 | conditions for backwards   |
|                           |                 | system [default: equal to  |
|                           |                 | calc_ic].                  |
+---------------------------+-----------------+----------------------------+
| cj_scaling                | OT_BOOL         | IDAS scaling on cj for the |
|                           |                 | user-defined linear solver |
|                           |                 | module                     |
+---------------------------+-----------------+----------------------------+
| constraints               | OT_INTVECTOR    | Constrain the solution     |
|                           |                 | y=[x,z]. 0 (default): no   |
|                           |                 | constraint on yi, 1: yi >= |
|                           |                 | 0.0, -1: yi <= 0.0, 2: yi  |
|                           |                 | > 0.0, -2: yi < 0.0.       |
+---------------------------+-----------------+----------------------------+
| disable_internal_warnings | OT_BOOL         | Disable SUNDIALS internal  |
|                           |                 | warning messages           |
+---------------------------+-----------------+----------------------------+
| first_time                | OT_DOUBLE       | First requested time as a  |
|                           |                 | fraction of the time       |
|                           |                 | interval                   |
+---------------------------+-----------------+----------------------------+
| fsens_err_con             | OT_BOOL         | include the forward        |
|                           |                 | sensitivities in all error |
|                           |                 | controls                   |
+---------------------------+-----------------+----------------------------+
| init_xdot                 | OT_DOUBLEVECTOR | Initial values for the     |
|                           |                 | state derivatives          |
+---------------------------+-----------------+----------------------------+
| interpolation_type        | OT_STRING       | Type of interpolation for  |
|                           |                 | the adjoint sensitivities  |
+---------------------------+-----------------+----------------------------+
| linear_solver             | OT_STRING       | A custom linear solver     |
|                           |                 | creator function [default: |
|                           |                 | qr]                        |
+---------------------------+-----------------+----------------------------+
| linear_solver_options     | OT_DICT         | Options to be passed to    |
|                           |                 | the linear solver          |
+---------------------------+-----------------+----------------------------+
| max_krylov                | OT_INT          | Maximum Krylov subspace    |
|                           |                 | size                       |
+---------------------------+-----------------+----------------------------+
| max_multistep_order       | OT_INT          | Maximum order for the      |
|                           |                 | (variable-order) multistep |
|                           |                 | method                     |
+---------------------------+-----------------+----------------------------+
| max_num_steps             | OT_INT          | Maximum number of          |
|                           |                 | integrator steps           |
+---------------------------+-----------------+----------------------------+
| max_order                 | OT_DOUBLE       | Maximum order              |
+---------------------------+-----------------+----------------------------+
| max_step_size             | OT_DOUBLE       | Maximim step size          |
+---------------------------+-----------------+----------------------------+
| newton_scheme             | OT_STRING       | Linear solver scheme in    |
|                           |                 | the Newton method:         |
|                           |                 | DIRECT|gmres|bcgstab|tfqmr |
+---------------------------+-----------------+----------------------------+
| nonlin_conv_coeff         | OT_DOUBLE       | Coefficient in the         |
|                           |                 | nonlinear convergence test |
+---------------------------+-----------------+----------------------------+
| quad_err_con              | OT_BOOL         | Should the quadratures     |
|                           |                 | affect the step size       |
|                           |                 | control                    |
+---------------------------+-----------------+----------------------------+
| reltol                    | OT_DOUBLE       | Relative tolerence for the |
|                           |                 | IVP solution               |
+---------------------------+-----------------+----------------------------+
| scale_abstol              | OT_BOOL         | Scale absolute tolerance   |
|                           |                 | by nominal value           |
+---------------------------+-----------------+----------------------------+
| second_order_correction   | OT_BOOL         | Second order correction in |
|                           |                 | the augmented system       |
|                           |                 | Jacobian [true]            |
+---------------------------+-----------------+----------------------------+
| sensitivity_method        | OT_STRING       | Sensitivity method:        |
|                           |                 | SIMULTANEOUS|staggered     |
+---------------------------+-----------------+----------------------------+
| step0                     | OT_DOUBLE       | initial step size          |
|                           |                 | [default: 0/estimated]     |
+---------------------------+-----------------+----------------------------+
| steps_per_checkpoint      | OT_INT          | Number of steps between    |
|                           |                 | two consecutive            |
|                           |                 | checkpoints                |
+---------------------------+-----------------+----------------------------+
| stop_at_end               | OT_BOOL         | [DEPRECATED] Stop the      |
|                           |                 | integrator at the end of   |
|                           |                 | the interval               |
+---------------------------+-----------------+----------------------------+
| suppress_algebraic        | OT_BOOL         | Suppress algebraic         |
|                           |                 | variables in the error     |
|                           |                 | testing                    |
+---------------------------+-----------------+----------------------------+
| use_preconditioner        | OT_BOOL         | Precondition the iterative |
|                           |                 | solver [default: true]     |
+---------------------------+-----------------+----------------------------+



--------------------------------------------------------------------------------

collocation
-----------



Fixed-step implicit Runge-Kutta integrator ODE/DAE integrator based 
on 
collocation schemes

The method is still under development

Extra doc: https://github.com/casadi/casadi/wiki/L_234

>List of available options

+---------------------------+-----------+----------------------------------+
|            Id             |   Type    |           Description            |
+===========================+===========+==================================+
| collocation_scheme        | OT_STRING | Collocation scheme:              |
|                           |           | radau|legendre                   |
+---------------------------+-----------+----------------------------------+
| interpolation_order       | OT_INT    | Order of the interpolating       |
|                           |           | polynomials                      |
+---------------------------+-----------+----------------------------------+
| number_of_finite_elements | OT_INT    | Target number of finite          |
|                           |           | elements. The actual number may  |
|                           |           | be higher to accommodate all     |
|                           |           | output times                     |
+---------------------------+-----------+----------------------------------+
| rootfinder                | OT_STRING | An implicit function solver      |
+---------------------------+-----------+----------------------------------+
| rootfinder_options        | OT_DICT   | Options to be passed to the NLP  |
|                           |           | Solver                           |
+---------------------------+-----------+----------------------------------+
| simplify                  | OT_BOOL   | Implement as MX  Function        |
|                           |           | (codegeneratable/serializable)   |
|                           |           | default: false                   |
+---------------------------+-----------+----------------------------------+
| simplify_options          | OT_DICT   | Any options to pass to           |
|                           |           | simplified form Function         |
|                           |           | constructor                      |
+---------------------------+-----------+----------------------------------+



--------------------------------------------------------------------------------

rk
--



Fixed-step explicit Runge-Kutta integrator for ODEs Currently 
implements 
RK4.

The method is still under development

Extra doc: https://github.com/casadi/casadi/wiki/L_23a

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_21k

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L109

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L109-L112

";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const MXDict &dae, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const Function &dae, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const SXDict &dae, double t0, const std::vector< double
 > &tout, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const MXDict &dae, double t0, const std::vector< double
 > &tout, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const Function &dae, double t0, const std::vector< 
double > &tout, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const SXDict &dae, double t0, double tf, const Dict 
&opts) "

[INTERNAL] ";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const MXDict &dae, double t0, double tf, const Dict 
&opts) "

[INTERNAL] ";

%feature("docstring")  casadi::integrator(const std::string &name, const 
std::string &solver, const Function &dae, double t0, double tf, const Dict 
&opts) "

[INTERNAL] ";

%feature("docstring")  casadi::integrator_in() "

[INTERNAL] 
Get input scheme of integrators.

Extra doc: https://github.com/casadi/casadi/wiki/L_7b

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L159

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L159-L163

";

%feature("docstring")  casadi::integrator_in(casadi_int ind) "

[INTERNAL] 
Get integrator input scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_7d

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L171

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L171-L183

";

%feature("docstring")  casadi::integrator_out() "

[INTERNAL] 
Get integrator output scheme of integrators.

Extra doc: https://github.com/casadi/casadi/wiki/L_7c

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L165

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L165-L169

";

%feature("docstring")  casadi::integrator_out(casadi_int ind) "

[INTERNAL] 
Get output scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_7e

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L185

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L185-L197

";

%feature("docstring")  casadi::integrator_n_in() "

[INTERNAL] 
Get the number of integrator inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_7f

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L199

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L199-L201

";

%feature("docstring")  casadi::integrator_n_out() "

[INTERNAL] 
Get the number of integrator outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_7g

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L203

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L203-L205

";

%feature("docstring")  casadi::dyn_in() "

[INTERNAL] 
Get input scheme of simulators.

Extra doc: https://github.com/casadi/casadi/wiki/L_25p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L207-L209

";

%feature("docstring")  casadi::dyn_in(casadi_int ind) "

[INTERNAL] 
Get simulator input scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_25r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L215

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L215-L217

";

%feature("docstring")  casadi::dyn_out() "

[INTERNAL] 
Get simulator output scheme of simulators.

Extra doc: https://github.com/casadi/casadi/wiki/L_25q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L211

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L211-L213

";

%feature("docstring")  casadi::dyn_out(casadi_int ind) "

[INTERNAL] 
Get output scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_25s

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L219

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L219-L221

";

%feature("docstring")  casadi::dyn_n_in() "

[INTERNAL] 
Get the number of simulator inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_25t

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L223

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L223-L225

";

%feature("docstring")  casadi::dyn_n_out() "

[INTERNAL] 
Get the number of simulator outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_25u

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.hpp#L227

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/integrator.cpp#L227-L229

";

%feature("docstring")  casadi::has_interpolant(const std::string &name) "

[INTERNAL] 
Check if a particular plugin is available.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.hpp#L34

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.cpp#L34-L36

";

%feature("docstring")  casadi::load_interpolant(const std::string &name) "

[INTERNAL] 
Explicitly load a plugin dynamically.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.hpp#L38

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.cpp#L38-L40

";

%feature("docstring")  casadi::doc_interpolant(const std::string &name) "

[INTERNAL] 
Get the documentation string for a plugin.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.hpp#L42

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.cpp#L42-L44

";

%feature("docstring")  casadi::interpolant(const std::string &name, const 
std::string &solver, const std::vector< std::vector< double > > &grid, const
 std::vector< double > &values, const Dict &opts=Dict()) "

[INTERNAL]

An interpolant function for lookup table data

Parameters:
-----------

name: 
label for the resulting  Function

solver: 
name of the plugin

grid: 
collection of 1D grids whose outer product defines the full N-D 

rectangular grid

values: 
flattened vector of all values for all gridpoints

Syntax 1D

::

  * # Python
  * xgrid = np.linspace(1,6,6)
  * V = [-1,-1,-2,-3,0,2]
  * LUT = casadi.interpolant(\"LUT\",\"bspline\",[xgrid],V)
  * print(LUT(2.5))
  * 



::

  * % Matlab
  * xgrid = 1:6;
  * V = [-1 -1 -2 -3 0 2];
  * LUT = casadi.interpolant('LUT','bspline',{xgrid},V);
  * LUT(2.5)
  * 



Syntax 2D

::

  * # Python
  * xgrid = np.linspace(-5,5,11)
  * ygrid = np.linspace(-4,4,9)
  * X,Y = np.meshgrid(xgrid,ygrid,indexing='ij')
  * R = np.sqrt(5*X**2 + Y**2)+ 1
  * data = np.sin(R)/R
  * data_flat = data.ravel(order='F')
  * LUT = casadi.interpolant('name','bspline',[xgrid,ygrid],data_flat)
  * print(LUT([0.5,1]))
  * \\\\enverbatim
  * \\\\verbatim
  * % Matlab
  * xgrid = -5:1:5;
  * ygrid = -4:1:4;
  * R = sqrt(5*X.^2 + Y.^2)+ 1;
  * V = sin(R)./(R);
  * LUT = interpolant('LUT','bspline',{xgrid, ygrid},V(:));
  * LUT([0.5 1])
  * 

General information

>List of available options

+------------------+-----------------+------------------+------------------+
|        Id        |      Type       |   Description    |     Used in      |
+==================+=================+==================+==================+
| ad_weight        | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for derivative   | Internal         |
|                  |                 | calculation.When |                  |
|                  |                 | there is an      |                  |
|                  |                 | option of either |                  |
|                  |                 | using forward or |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | directional      |                  |
|                  |                 | derivatives, the |                  |
|                  |                 | condition ad_wei |                  |
|                  |                 | ght*nf<=(1-      |                  |
|                  |                 | ad_weight)*na is |                  |
|                  |                 | used where nf    |                  |
|                  |                 | and na are       |                  |
|                  |                 | estimates of the |                  |
|                  |                 | number of        |                  |
|                  |                 | forward/reverse  |                  |
|                  |                 | mode directional |                  |
|                  |                 | derivatives      |                  |
|                  |                 | needed. By       |                  |
|                  |                 | default,         |                  |
|                  |                 | ad_weight is     |                  |
|                  |                 | calculated       |                  |
|                  |                 | automatically,   |                  |
|                  |                 | but this can be  |                  |
|                  |                 | overridden by    |                  |
|                  |                 | setting this     |                  |
|                  |                 | option. In       |                  |
|                  |                 | particular, 0    |                  |
|                  |                 | means forcing    |                  |
|                  |                 | forward mode and |                  |
|                  |                 | 1 forcing        |                  |
|                  |                 | reverse mode.    |                  |
|                  |                 | Leave unset for  |                  |
|                  |                 | (class specific) |                  |
|                  |                 | heuristics.      |                  |
+------------------+-----------------+------------------+------------------+
| ad_weight_sp     | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for sparsity     | Internal         |
|                  |                 | pattern          |                  |
|                  |                 | calculation calc |                  |
|                  |                 | ulation.Override |                  |
|                  |                 | s default        |                  |
|                  |                 | behavior. Set to |                  |
|                  |                 | 0 and 1 to force |                  |
|                  |                 | forward and      |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | respectively.    |                  |
|                  |                 | Cf. option       |                  |
|                  |                 | \"ad_weight\".     |                  |
|                  |                 | When set to -1,  |                  |
|                  |                 | sparsity is      |                  |
|                  |                 | completely       |                  |
|                  |                 | ignored and      |                  |
|                  |                 | dense matrices   |                  |
|                  |                 | are used.        |                  |
+------------------+-----------------+------------------+------------------+
| always_inline    | OT_BOOL         | Force inlining.  | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| batch_x          | OT_INT          | Evaluate a batch | casadi::Interpol |
|                  |                 | of different     | ant              |
|                  |                 | inputs at once   |                  |
|                  |                 | (default 1).     |                  |
+------------------+-----------------+------------------+------------------+
| cache            | OT_DICT         | Prepopulate the  | casadi::Function |
|                  |                 | function cache.  | Internal         |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| compiler         | OT_STRING       | Just-in-time     | casadi::Function |
|                  |                 | compiler plugin  | Internal         |
|                  |                 | to be used.      |                  |
+------------------+-----------------+------------------+------------------+
| custom_jacobian  | OT_FUNCTION     | Override         | casadi::Function |
|                  |                 | CasADi's AD. Use | Internal         |
|                  |                 | together with    |                  |
|                  |                 | 'jac_penalty':   |                  |
|                  |                 | 0. Note: Highly  |                  |
|                  |                 | experimental.    |                  |
|                  |                 | Syntax may break |                  |
|                  |                 | often.           |                  |
+------------------+-----------------+------------------+------------------+
| der_options      | OT_DICT         | Default options  | casadi::Function |
|                  |                 | to be used to    | Internal         |
|                  |                 | populate         |                  |
|                  |                 | forward_options, |                  |
|                  |                 | reverse_options, |                  |
|                  |                 | and              |                  |
|                  |                 | jacobian_options |                  |
|                  |                 | before those     |                  |
|                  |                 | options are      |                  |
|                  |                 | merged in.       |                  |
+------------------+-----------------+------------------+------------------+
| derivative_of    | OT_FUNCTION     | The function is  | casadi::Function |
|                  |                 | a derivative of  | Internal         |
|                  |                 | another          |                  |
|                  |                 | function. The    |                  |
|                  |                 | type of          |                  |
|                  |                 | derivative       |                  |
|                  |                 | (directional     |                  |
|                  |                 | derivative,      |                  |
|                  |                 | Jacobian) is     |                  |
|                  |                 | inferred from    |                  |
|                  |                 | the function     |                  |
|                  |                 | name.            |                  |
+------------------+-----------------+------------------+------------------+
| dump             | OT_BOOL         | Dump function to | casadi::Function |
|                  |                 | file upon first  | Internal         |
|                  |                 | evaluation.      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| dump_dir         | OT_STRING       | Directory to     | casadi::Function |
|                  |                 | dump             | Internal         |
|                  |                 | inputs/outputs   |                  |
|                  |                 | to. Make sure    |                  |
|                  |                 | the directory    |                  |
|                  |                 | exists [.]       |                  |
+------------------+-----------------+------------------+------------------+
| dump_format      | OT_STRING       | Choose file      | casadi::Function |
|                  |                 | format to dump   | Internal         |
|                  |                 | matrices. See    |                  |
|                  |                 | DM.from_file     |                  |
|                  |                 | [mtx]            |                  |
+------------------+-----------------+------------------+------------------+
| dump_in          | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | to file          |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| dump_out         | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs to file  |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| enable_fd        | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation by   |                  |
|                  |                 | finite           |                  |
|                  |                 | differencing.    |                  |
|                  |                 | [default:        |                  |
|                  |                 | false]]          |                  |
+------------------+-----------------+------------------+------------------+
| enable_forward   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using forward    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_jacobian  | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobians of all |                  |
|                  |                 | differentiable   |                  |
|                  |                 | outputs with     |                  |
|                  |                 | respect to all   |                  |
|                  |                 | differentiable   |                  |
|                  |                 | inputs - if      |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_reverse   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | transposed       |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using reverse    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| error_on_fail    | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when function    | ction            |
|                  |                 | evaluation fails |                  |
|                  |                 | (default true).  |                  |
+------------------+-----------------+------------------+------------------+
| fd_method        | OT_STRING       | Method for       | casadi::Function |
|                  |                 | finite           | Internal         |
|                  |                 | differencing     |                  |
|                  |                 | [default         |                  |
|                  |                 | 'central']       |                  |
+------------------+-----------------+------------------+------------------+
| fd_options       | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | finite           |                  |
|                  |                 | difference       |                  |
|                  |                 | instance         |                  |
+------------------+-----------------+------------------+------------------+
| forward_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | forward mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| gather_stats     | OT_BOOL         | Deprecated       | casadi::Function |
|                  |                 | option           | Internal         |
|                  |                 | (ignored):       |                  |
|                  |                 | Statistics are   |                  |
|                  |                 | now always       |                  |
|                  |                 | collected.       |                  |
+------------------+-----------------+------------------+------------------+
| inline           | OT_BOOL         | Implement the    | casadi::Interpol |
|                  |                 | lookup table in  | ant              |
|                  |                 | MX primitives.   |                  |
|                  |                 | Useful when you  |                  |
|                  |                 | need derivatives |                  |
|                  |                 | with respect to  |                  |
|                  |                 | grid and/or      |                  |
|                  |                 | coefficients.    |                  |
|                  |                 | Such derivatives |                  |
|                  |                 | are              |                  |
|                  |                 | fundamentally    |                  |
|                  |                 | dense, so use    |                  |
|                  |                 | with caution.    |                  |
+------------------+-----------------+------------------+------------------+
| input_scheme     | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| inputs_check     | OT_BOOL         | Throw exceptions | casadi::Function |
|                  |                 | when the         | Internal         |
|                  |                 | numerical values |                  |
|                  |                 | of the inputs    |                  |
|                  |                 | don't make sense |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_in       | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each input if it | Internal         |
|                  |                 | should be        |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_out      | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each output if   | Internal         |
|                  |                 | it should be     |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| jac_penalty      | OT_DOUBLE       | When requested   | casadi::Function |
|                  |                 | for a number of  | Internal         |
|                  |                 | forward/reverse  |                  |
|                  |                 | directions, it   |                  |
|                  |                 | may be cheaper   |                  |
|                  |                 | to compute first |                  |
|                  |                 | the full         |                  |
|                  |                 | jacobian and     |                  |
|                  |                 | then multiply    |                  |
|                  |                 | with seeds,      |                  |
|                  |                 | rather than      |                  |
|                  |                 | obtain the       |                  |
|                  |                 | requested        |                  |
|                  |                 | directions in a  |                  |
|                  |                 | straightforward  |                  |
|                  |                 | manner. Casadi   |                  |
|                  |                 | uses a heuristic |                  |
|                  |                 | to decide which  |                  |
|                  |                 | is cheaper. A    |                  |
|                  |                 | high value of    |                  |
|                  |                 | 'jac_penalty'    |                  |
|                  |                 | makes it less    |                  |
|                  |                 | likely for the   |                  |
|                  |                 | heurstic to      |                  |
|                  |                 | chose the full   |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy. The    |                  |
|                  |                 | special value -1 |                  |
|                  |                 | indicates never  |                  |
|                  |                 | to use the full  |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy         |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_options | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | Jacobian         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| jit              | OT_BOOL         | Use just-in-time | casadi::Function |
|                  |                 | compiler to      | Internal         |
|                  |                 | speed up the     |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| jit_cleanup      | OT_BOOL         | Cleanup up the   | casadi::Function |
|                  |                 | temporary source | Internal         |
|                  |                 | file that jit    |                  |
|                  |                 | creates.         |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| jit_name         | OT_STRING       | The file name    | casadi::Function |
|                  |                 | used to write    | Internal         |
|                  |                 | out code. The    |                  |
|                  |                 | actual file      |                  |
|                  |                 | names used       |                  |
|                  |                 | depend on 'jit_t |                  |
|                  |                 | emp_suffix' and  |                  |
|                  |                 | include          |                  |
|                  |                 | extensions.      |                  |
|                  |                 | Default:         |                  |
|                  |                 | 'jit_tmp'        |                  |
+------------------+-----------------+------------------+------------------+
| jit_options      | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | jit compiler.    |                  |
+------------------+-----------------+------------------+------------------+
| jit_serialize    | OT_STRING       | Specify          | casadi::Function |
|                  |                 | behaviour when   | Internal         |
|                  |                 | serializing a    |                  |
|                  |                 | jitted function: |                  |
|                  |                 | SOURCE|link|embe |                  |
|                  |                 | d.               |                  |
+------------------+-----------------+------------------+------------------+
| jit_temp_suffix  | OT_BOOL         | Use a temporary  | casadi::Function |
|                  |                 | (seemingly       | Internal         |
|                  |                 | random) filename |                  |
|                  |                 | suffix for       |                  |
|                  |                 | generated code   |                  |
|                  |                 | and libraries.   |                  |
|                  |                 | This is desired  |                  |
|                  |                 | for thread-      |                  |
|                  |                 | safety. This     |                  |
|                  |                 | behaviour may    |                  |
|                  |                 | defeat caching   |                  |
|                  |                 | compiler         |                  |
|                  |                 | wrappers.        |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| lookup_mode      | OT_STRINGVECTOR | Specifies, for   | casadi::Interpol |
|                  |                 | each grid        | ant              |
|                  |                 | dimension, the   |                  |
|                  |                 | lookup algorithm |                  |
|                  |                 | used to find the |                  |
|                  |                 | correct index.   |                  |
|                  |                 | 'linear' uses a  |                  |
|                  |                 | for-loop +       |                  |
|                  |                 | break; (default  |                  |
|                  |                 | when             |                  |
|                  |                 | #knots<=100),    |                  |
|                  |                 | 'exact' uses     |                  |
|                  |                 | floored division |                  |
|                  |                 | (only for        |                  |
|                  |                 | uniform grids),  |                  |
|                  |                 | 'binary' uses a  |                  |
|                  |                 | binary search.   |                  |
|                  |                 | (default when    |                  |
|                  |                 | #knots>100).     |                  |
+------------------+-----------------+------------------+------------------+
| max_io           | OT_INT          | Acceptable       | casadi::Function |
|                  |                 | number of inputs | Internal         |
|                  |                 | and outputs.     |                  |
|                  |                 | Warn if          |                  |
|                  |                 | exceeded.        |                  |
+------------------+-----------------+------------------+------------------+
| max_num_dir      | OT_INT          | Specify the      | casadi::Function |
|                  |                 | maximum number   | Internal         |
|                  |                 | of directions    |                  |
|                  |                 | for derivative   |                  |
|                  |                 | functions.       |                  |
|                  |                 | Overrules the    |                  |
|                  |                 | builtin optimize |                  |
|                  |                 | d_num_dir.       |                  |
+------------------+-----------------+------------------+------------------+
| never_inline     | OT_BOOL         | Forbid inlining. | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| output_scheme    | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| post_expand      | OT_BOOL         | After            | casadi::Function |
|                  |                 | construction,    | Internal         |
|                  |                 | expand this      |                  |
|                  |                 | Function .       |                  |
|                  |                 | Default: False   |                  |
+------------------+-----------------+------------------+------------------+
| post_expand_opti | OT_DICT         | Options to be    | casadi::Function |
| ons              |                 | passed to post-  | Internal         |
|                  |                 | construction     |                  |
|                  |                 | expansion.       |                  |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| print_in         | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_out        | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs          |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_time       | OT_BOOL         | print            | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time. Implies    |                  |
|                  |                 | record_time.     |                  |
+------------------+-----------------+------------------+------------------+
| record_time      | OT_BOOL         | record           | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time, for        |                  |
|                  |                 | retrieval with   |                  |
|                  |                 | stats().         |                  |
+------------------+-----------------+------------------+------------------+
| regularity_check | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when NaN or Inf  | ction            |
|                  |                 | appears during   |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| reverse_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | reverse mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| user_data        | OT_VOIDPTR      | A user-defined   | casadi::Function |
|                  |                 | field that can   | Internal         |
|                  |                 | be used to       |                  |
|                  |                 | identify the     |                  |
|                  |                 | function or pass |                  |
|                  |                 | additional       |                  |
|                  |                 | information      |                  |
+------------------+-----------------+------------------+------------------+
| verbose          | OT_BOOL         | Verbose          | casadi::ProtoFun |
|                  |                 | evaluation  for  | ction            |
|                  |                 | debugging        |                  |
+------------------+-----------------+------------------+------------------+

List of plugins
- bspline

- linear

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with  
Interpolant.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

bspline
-------



Extra doc: https://github.com/casadi/casadi/wiki/L_239

>List of available options

+-----------------------+--------------+-----------------------------------+
|          Id           |     Type     |            Description            |
+=======================+==============+===================================+
| algorithm             | OT_STRING    | Algorithm used for fitting the    |
|                       |              | data: 'not_a_knot' (default, same |
|                       |              | as Matlab), 'smooth_linear'.      |
+-----------------------+--------------+-----------------------------------+
| degree                | OT_INTVECTOR | Sets, for each grid dimension,    |
|                       |              | the degree of the spline.         |
+-----------------------+--------------+-----------------------------------+
| linear_solver         | OT_STRING    | Solver used for constructing the  |
|                       |              | coefficient tensor.               |
+-----------------------+--------------+-----------------------------------+
| linear_solver_options | OT_DICT      | Options to be passed to the       |
|                       |              | linear solver.                    |
+-----------------------+--------------+-----------------------------------+
| smooth_linear_frac    | OT_DOUBLE    | When 'smooth_linear' algorithm is |
|                       |              | active, determines sharpness      |
|                       |              | between 0 (sharp, as linear       |
|                       |              | interpolation) and 0.5            |
|                       |              | (smooth).Default value is 0.1.    |
+-----------------------+--------------+-----------------------------------+



--------------------------------------------------------------------------------

linear
------



Extra doc: https://github.com/casadi/casadi/wiki/L_23b

>List of available options

+-------------+-----------------+------------------------------------------+
|     Id      |      Type       |               Description                |
+=============+=================+==========================================+
| lookup_mode | OT_STRINGVECTOR | Sets, for each grid dimenion, the lookup |
|             |                 | algorithm used to find the correct       |
|             |                 | index. 'linear' uses a for-loop + break; |
|             |                 | 'exact' uses floored division (only for  |
|             |                 | uniform grids).                          |
+-------------+-----------------+------------------------------------------+

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_21p

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.hpp#L125

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.cpp#L125-L147

";

%feature("docstring")  casadi::interpolant(const std::string &name, const 
std::string &solver, const std::vector< casadi_int > &grid_dims, const 
std::vector< double > &values, const Dict &opts=Dict()) "

[INTERNAL] 
Parametric variant of interpolant.

The resulting function will have an additional argument for the grid

By default, derivatives wrt the coefficients are not supported (zero).
 Some
 interpolant plugins may support the  inline=true which enables correct 
derivatives

Extra doc: https://github.com/casadi/casadi/wiki/L_1p5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.hpp#L171

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.cpp#L171-L187

";

%feature("docstring")  casadi::interpolant(const std::string &name, const 
std::string &solver, const std::vector< std::vector< double > > &grid, 
casadi_int m=1, const Dict &opts=Dict()) "

[INTERNAL] 
Parametric variant of interpolant.

The resulting function will have an additional argument for the 

coefficients

By default, derivatives wrt the coefficients are not supported (zero).
 Some
 interpolant plugins may support the  inline=true which enables correct 
derivatives

Extra doc: https://github.com/casadi/casadi/wiki/L_1p3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.hpp#L189

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.cpp#L189-L203

";

%feature("docstring")  casadi::interpolant(const std::string &name, const 
std::string &solver, const std::vector< casadi_int > &grid_dims, casadi_int 
m=1, const Dict &opts=Dict()) "

[INTERNAL] 
Parametric variant of interpolant.

The resulting function will have additional arguments for the grid and
 
coefficients

By default, derivatives wrt the coefficients are not supported (zero).
 Some
 interpolant plugins may support the  inline=true which enables correct 
derivatives

Extra doc: https://github.com/casadi/casadi/wiki/L_1p4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.hpp#L205

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/interpolant.cpp#L205-L213

";

%feature("docstring")  casadi::has_linsol(const std::string &name) "

[INTERNAL] 
Check if a particular plugin is available.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L205

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L205-L207

";

%feature("docstring")  casadi::load_linsol(const std::string &name) "

[INTERNAL] 
Explicitly load a plugin dynamically.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L209

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L209-L211

";

%feature("docstring")  casadi::doc_linsol(const std::string &name) "

[INTERNAL] 
Get the documentation string for a plugin.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.hpp#L213

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/linsol.cpp#L213-L215

";

%feature("docstring")  casadi::detect_simple_bounds(const SX &xX, const SX 
&p, const SX &g, const SX &lbg, const SX &ubg, std::vector< casadi_int > 
&gi, SX &lbx, SX &ubx, Function &lam_forward, Function &lam_backward) "

[INTERNAL] 
Detect simple bounds from general constraints.

Given parametric constraints:

::

  *   subject to lbg(p) <= g(x,p) <= ubg(p)
  * 



Returns an equivalent set

::

  *   subject to  lbg(p)(gi) <= g(x,p)(gi) <= ubg(p)(gi)
  *               lbx(p) <= x                 <= ubx(p)
  * 



Parameters:
-----------

lam_forward: 
(lam_g,p)->(lam_sg,lam_x)

lam_backward: 
(lam_sg,lam_x,p)->(lam_g)

Extra doc: https://github.com/casadi/casadi/wiki/L_1sw

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_tools.hpp#L207

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_tools.cpp#L207-L215

";

%feature("docstring")  casadi::detect_simple_bounds(const MX &x, const MX 
&p, const MX &g, const MX &lbg, const MX &ubg, std::vector< casadi_int > 
&gi, MX &lbx, MX &ubx, Function &lam_forward, Function &lam_backward) "

[INTERNAL] ";

%feature("docstring")  casadi::check_sos(casadi_int nx, const std::vector< 
std::vector< T > > &groups, std::vector< std::vector< double > > &weights, 
std::vector< casadi_int > &types) "

[INTERNAL] 
Check sos structure and generate defaults.

Extra doc: https://github.com/casadi/casadi/wiki/L_1sx

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_tools.hpp#L79

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlp_tools.hpp#L79-L120

";

%feature("docstring")  casadi::has_nlpsol(const std::string &name) "

[INTERNAL] 
Check if a particular plugin is available.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L34

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L34-L36

";

%feature("docstring")  casadi::load_nlpsol(const std::string &name) "

[INTERNAL] 
Explicitly load a plugin dynamically.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L38

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L38-L40

";

%feature("docstring")  casadi::doc_nlpsol(const std::string &name) "

[INTERNAL] 
Get the documentation string for a plugin.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L42

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L42-L44

";

%feature("docstring")  casadi::nlpsol(const std::string &name, const 
std::string &solver, const SXDict &nlp, const Dict &opts=Dict()) "

[INTERNAL]

Create an NLP solver Creates a solver for the following parametric 

nonlinear program (NLP):

::

  min          F(x, p)
  x
  
  subject to
  LBX <=   x    <= UBX
  LBG <= G(x, p) <= UBG
  p  == P
  
  nx: number of decision variables
  ng: number of constraints
  np: number of parameters

General information

>List of available options

+------------------+-----------------+------------------+------------------+
|        Id        |      Type       |   Description    |     Used in      |
+==================+=================+==================+==================+
| ad_weight        | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for derivative   | Internal         |
|                  |                 | calculation.When |                  |
|                  |                 | there is an      |                  |
|                  |                 | option of either |                  |
|                  |                 | using forward or |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | directional      |                  |
|                  |                 | derivatives, the |                  |
|                  |                 | condition ad_wei |                  |
|                  |                 | ght*nf<=(1-      |                  |
|                  |                 | ad_weight)*na is |                  |
|                  |                 | used where nf    |                  |
|                  |                 | and na are       |                  |
|                  |                 | estimates of the |                  |
|                  |                 | number of        |                  |
|                  |                 | forward/reverse  |                  |
|                  |                 | mode directional |                  |
|                  |                 | derivatives      |                  |
|                  |                 | needed. By       |                  |
|                  |                 | default,         |                  |
|                  |                 | ad_weight is     |                  |
|                  |                 | calculated       |                  |
|                  |                 | automatically,   |                  |
|                  |                 | but this can be  |                  |
|                  |                 | overridden by    |                  |
|                  |                 | setting this     |                  |
|                  |                 | option. In       |                  |
|                  |                 | particular, 0    |                  |
|                  |                 | means forcing    |                  |
|                  |                 | forward mode and |                  |
|                  |                 | 1 forcing        |                  |
|                  |                 | reverse mode.    |                  |
|                  |                 | Leave unset for  |                  |
|                  |                 | (class specific) |                  |
|                  |                 | heuristics.      |                  |
+------------------+-----------------+------------------+------------------+
| ad_weight_sp     | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for sparsity     | Internal         |
|                  |                 | pattern          |                  |
|                  |                 | calculation calc |                  |
|                  |                 | ulation.Override |                  |
|                  |                 | s default        |                  |
|                  |                 | behavior. Set to |                  |
|                  |                 | 0 and 1 to force |                  |
|                  |                 | forward and      |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | respectively.    |                  |
|                  |                 | Cf. option       |                  |
|                  |                 | \"ad_weight\".     |                  |
|                  |                 | When set to -1,  |                  |
|                  |                 | sparsity is      |                  |
|                  |                 | completely       |                  |
|                  |                 | ignored and      |                  |
|                  |                 | dense matrices   |                  |
|                  |                 | are used.        |                  |
+------------------+-----------------+------------------+------------------+
| always_inline    | OT_BOOL         | Force inlining.  | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| bound_consistenc | OT_BOOL         | Ensure that      | casadi::Nlpsol   |
| y                |                 | primal-dual      |                  |
|                  |                 | solution is      |                  |
|                  |                 | consistent with  |                  |
|                  |                 | the bounds       |                  |
+------------------+-----------------+------------------+------------------+
| cache            | OT_DICT         | Prepopulate the  | casadi::Function |
|                  |                 | function cache.  | Internal         |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| calc_f           | OT_BOOL         | Calculate 'f' in | casadi::Nlpsol   |
|                  |                 | the Nlpsol base  |                  |
|                  |                 | class            |                  |
+------------------+-----------------+------------------+------------------+
| calc_g           | OT_BOOL         | Calculate 'g' in | casadi::Nlpsol   |
|                  |                 | the Nlpsol base  |                  |
|                  |                 | class            |                  |
+------------------+-----------------+------------------+------------------+
| calc_lam_p       | OT_BOOL         | Calculate        | casadi::Nlpsol   |
|                  |                 | 'lam_p' in the   |                  |
|                  |                 | Nlpsol base      |                  |
|                  |                 | class            |                  |
+------------------+-----------------+------------------+------------------+
| calc_lam_x       | OT_BOOL         | Calculate        | casadi::Nlpsol   |
|                  |                 | 'lam_x' in the   |                  |
|                  |                 | Nlpsol base      |                  |
|                  |                 | class            |                  |
+------------------+-----------------+------------------+------------------+
| calc_multipliers | OT_BOOL         | Calculate        | casadi::Nlpsol   |
|                  |                 | Lagrange         |                  |
|                  |                 | multipliers in   |                  |
|                  |                 | the Nlpsol base  |                  |
|                  |                 | class            |                  |
+------------------+-----------------+------------------+------------------+
| common_options   | OT_DICT         | Options for      | casadi::OracleFu |
|                  |                 | auto-generated   | nction           |
|                  |                 | functions        |                  |
+------------------+-----------------+------------------+------------------+
| compiler         | OT_STRING       | Just-in-time     | casadi::Function |
|                  |                 | compiler plugin  | Internal         |
|                  |                 | to be used.      |                  |
+------------------+-----------------+------------------+------------------+
| custom_jacobian  | OT_FUNCTION     | Override         | casadi::Function |
|                  |                 | CasADi's AD. Use | Internal         |
|                  |                 | together with    |                  |
|                  |                 | 'jac_penalty':   |                  |
|                  |                 | 0. Note: Highly  |                  |
|                  |                 | experimental.    |                  |
|                  |                 | Syntax may break |                  |
|                  |                 | often.           |                  |
+------------------+-----------------+------------------+------------------+
| der_options      | OT_DICT         | Default options  | casadi::Function |
|                  |                 | to be used to    | Internal         |
|                  |                 | populate         |                  |
|                  |                 | forward_options, |                  |
|                  |                 | reverse_options, |                  |
|                  |                 | and              |                  |
|                  |                 | jacobian_options |                  |
|                  |                 | before those     |                  |
|                  |                 | options are      |                  |
|                  |                 | merged in.       |                  |
+------------------+-----------------+------------------+------------------+
| derivative_of    | OT_FUNCTION     | The function is  | casadi::Function |
|                  |                 | a derivative of  | Internal         |
|                  |                 | another          |                  |
|                  |                 | function. The    |                  |
|                  |                 | type of          |                  |
|                  |                 | derivative       |                  |
|                  |                 | (directional     |                  |
|                  |                 | derivative,      |                  |
|                  |                 | Jacobian) is     |                  |
|                  |                 | inferred from    |                  |
|                  |                 | the function     |                  |
|                  |                 | name.            |                  |
+------------------+-----------------+------------------+------------------+
| detect_simple_bo | OT_BOOL         | Automatically    | casadi::Nlpsol   |
| unds             |                 | detect simple    |                  |
|                  |                 | bounds (lbx/ubx) |                  |
|                  |                 | (default false). |                  |
|                  |                 | This is          |                  |
|                  |                 | hopefully        |                  |
|                  |                 | beneficial to    |                  |
|                  |                 | speed and        |                  |
|                  |                 | robustness but   |                  |
|                  |                 | may also have    |                  |
|                  |                 | adverse affects: |                  |
|                  |                 | 1) Subtleties in |                  |
|                  |                 | heuristics and   |                  |
|                  |                 | stopping         |                  |
|                  |                 | criteria may     |                  |
|                  |                 | change the       |                  |
|                  |                 | solution, 2)     |                  |
|                  |                 | IPOPT may lie    |                  |
|                  |                 | about            |                  |
|                  |                 | multipliers of   |                  |
|                  |                 | simple equality  |                  |
|                  |                 | bounds unless 'f |                  |
|                  |                 | ixed_variable_tr |                  |
|                  |                 | eatment' is set  |                  |
|                  |                 | to               |                  |
|                  |                 | 'relax_bounds'.  |                  |
+------------------+-----------------+------------------+------------------+
| detect_simple_bo | OT_BOOLVECTOR   | For internal use | casadi::Nlpsol   |
| unds_is_simple   |                 | only.            |                  |
+------------------+-----------------+------------------+------------------+
| detect_simple_bo | OT_FUNCTION     | For internal use | casadi::Nlpsol   |
| unds_parts       |                 | only.            |                  |
+------------------+-----------------+------------------+------------------+
| detect_simple_bo | OT_INTVECTOR    | For internal use | casadi::Nlpsol   |
| unds_target_x    |                 | only.            |                  |
+------------------+-----------------+------------------+------------------+
| discrete         | OT_BOOLVECTOR   | Indicates which  | casadi::Nlpsol   |
|                  |                 | of the variables |                  |
|                  |                 | are discrete,    |                  |
|                  |                 | i.e. integer-    |                  |
|                  |                 | valued           |                  |
+------------------+-----------------+------------------+------------------+
| dump             | OT_BOOL         | Dump function to | casadi::Function |
|                  |                 | file upon first  | Internal         |
|                  |                 | evaluation.      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| dump_dir         | OT_STRING       | Directory to     | casadi::Function |
|                  |                 | dump             | Internal         |
|                  |                 | inputs/outputs   |                  |
|                  |                 | to. Make sure    |                  |
|                  |                 | the directory    |                  |
|                  |                 | exists [.]       |                  |
+------------------+-----------------+------------------+------------------+
| dump_format      | OT_STRING       | Choose file      | casadi::Function |
|                  |                 | format to dump   | Internal         |
|                  |                 | matrices. See    |                  |
|                  |                 | DM.from_file     |                  |
|                  |                 | [mtx]            |                  |
+------------------+-----------------+------------------+------------------+
| dump_in          | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | to file          |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| dump_out         | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs to file  |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| enable_fd        | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation by   |                  |
|                  |                 | finite           |                  |
|                  |                 | differencing.    |                  |
|                  |                 | [default:        |                  |
|                  |                 | false]]          |                  |
+------------------+-----------------+------------------+------------------+
| enable_forward   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using forward    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_jacobian  | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobians of all |                  |
|                  |                 | differentiable   |                  |
|                  |                 | outputs with     |                  |
|                  |                 | respect to all   |                  |
|                  |                 | differentiable   |                  |
|                  |                 | inputs - if      |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_reverse   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | transposed       |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using reverse    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| error_on_fail    | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when function    | ction            |
|                  |                 | evaluation fails |                  |
|                  |                 | (default true).  |                  |
+------------------+-----------------+------------------+------------------+
| eval_errors_fata | OT_BOOL         | When errors      | casadi::Nlpsol   |
| l                |                 | occur during     |                  |
|                  |                 | evaluation of    |                  |
|                  |                 | f,g,...,stop the |                  |
|                  |                 | iterations       |                  |
+------------------+-----------------+------------------+------------------+
| expand           | OT_BOOL         | Replace MX with  | casadi::OracleFu |
|                  |                 | SX expressions   | nction           |
|                  |                 | in problem       |                  |
|                  |                 | formulation      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| fd_method        | OT_STRING       | Method for       | casadi::Function |
|                  |                 | finite           | Internal         |
|                  |                 | differencing     |                  |
|                  |                 | [default         |                  |
|                  |                 | 'central']       |                  |
+------------------+-----------------+------------------+------------------+
| fd_options       | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | finite           |                  |
|                  |                 | difference       |                  |
|                  |                 | instance         |                  |
+------------------+-----------------+------------------+------------------+
| forward_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | forward mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| gather_stats     | OT_BOOL         | Deprecated       | casadi::Function |
|                  |                 | option           | Internal         |
|                  |                 | (ignored):       |                  |
|                  |                 | Statistics are   |                  |
|                  |                 | now always       |                  |
|                  |                 | collected.       |                  |
+------------------+-----------------+------------------+------------------+
| ignore_check_vec | OT_BOOL         | If set to true,  | casadi::Nlpsol   |
|                  |                 | the input shape  |                  |
|                  |                 | of F will not be |                  |
|                  |                 | checked.         |                  |
+------------------+-----------------+------------------+------------------+
| input_scheme     | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| inputs_check     | OT_BOOL         | Throw exceptions | casadi::Function |
|                  |                 | when the         | Internal         |
|                  |                 | numerical values |                  |
|                  |                 | of the inputs    |                  |
|                  |                 | don't make sense |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_in       | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each input if it | Internal         |
|                  |                 | should be        |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_out      | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each output if   | Internal         |
|                  |                 | it should be     |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| iteration_callba | OT_FUNCTION     | A function that  | casadi::Nlpsol   |
| ck               |                 | will be called   |                  |
|                  |                 | at each          |                  |
|                  |                 | iteration with   |                  |
|                  |                 | the solver as    |                  |
|                  |                 | input. Check     |                  |
|                  |                 | documentation of |                  |
|                  |                 | Callback .       |                  |
+------------------+-----------------+------------------+------------------+
| iteration_callba | OT_BOOL         | If set to true,  | casadi::Nlpsol   |
| ck_ignore_errors |                 | errors thrown by |                  |
|                  |                 | iteration_callba |                  |
|                  |                 | ck will be       |                  |
|                  |                 | ignored.         |                  |
+------------------+-----------------+------------------+------------------+
| iteration_callba | OT_INT          | Only call the    | casadi::Nlpsol   |
| ck_step          |                 | callback         |                  |
|                  |                 | function every   |                  |
|                  |                 | few iterations.  |                  |
+------------------+-----------------+------------------+------------------+
| jac_penalty      | OT_DOUBLE       | When requested   | casadi::Function |
|                  |                 | for a number of  | Internal         |
|                  |                 | forward/reverse  |                  |
|                  |                 | directions, it   |                  |
|                  |                 | may be cheaper   |                  |
|                  |                 | to compute first |                  |
|                  |                 | the full         |                  |
|                  |                 | jacobian and     |                  |
|                  |                 | then multiply    |                  |
|                  |                 | with seeds,      |                  |
|                  |                 | rather than      |                  |
|                  |                 | obtain the       |                  |
|                  |                 | requested        |                  |
|                  |                 | directions in a  |                  |
|                  |                 | straightforward  |                  |
|                  |                 | manner. Casadi   |                  |
|                  |                 | uses a heuristic |                  |
|                  |                 | to decide which  |                  |
|                  |                 | is cheaper. A    |                  |
|                  |                 | high value of    |                  |
|                  |                 | 'jac_penalty'    |                  |
|                  |                 | makes it less    |                  |
|                  |                 | likely for the   |                  |
|                  |                 | heurstic to      |                  |
|                  |                 | chose the full   |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy. The    |                  |
|                  |                 | special value -1 |                  |
|                  |                 | indicates never  |                  |
|                  |                 | to use the full  |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy         |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_options | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | Jacobian         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| jit              | OT_BOOL         | Use just-in-time | casadi::Function |
|                  |                 | compiler to      | Internal         |
|                  |                 | speed up the     |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| jit_cleanup      | OT_BOOL         | Cleanup up the   | casadi::Function |
|                  |                 | temporary source | Internal         |
|                  |                 | file that jit    |                  |
|                  |                 | creates.         |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| jit_name         | OT_STRING       | The file name    | casadi::Function |
|                  |                 | used to write    | Internal         |
|                  |                 | out code. The    |                  |
|                  |                 | actual file      |                  |
|                  |                 | names used       |                  |
|                  |                 | depend on 'jit_t |                  |
|                  |                 | emp_suffix' and  |                  |
|                  |                 | include          |                  |
|                  |                 | extensions.      |                  |
|                  |                 | Default:         |                  |
|                  |                 | 'jit_tmp'        |                  |
+------------------+-----------------+------------------+------------------+
| jit_options      | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | jit compiler.    |                  |
+------------------+-----------------+------------------+------------------+
| jit_serialize    | OT_STRING       | Specify          | casadi::Function |
|                  |                 | behaviour when   | Internal         |
|                  |                 | serializing a    |                  |
|                  |                 | jitted function: |                  |
|                  |                 | SOURCE|link|embe |                  |
|                  |                 | d.               |                  |
+------------------+-----------------+------------------+------------------+
| jit_temp_suffix  | OT_BOOL         | Use a temporary  | casadi::Function |
|                  |                 | (seemingly       | Internal         |
|                  |                 | random) filename |                  |
|                  |                 | suffix for       |                  |
|                  |                 | generated code   |                  |
|                  |                 | and libraries.   |                  |
|                  |                 | This is desired  |                  |
|                  |                 | for thread-      |                  |
|                  |                 | safety. This     |                  |
|                  |                 | behaviour may    |                  |
|                  |                 | defeat caching   |                  |
|                  |                 | compiler         |                  |
|                  |                 | wrappers.        |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| max_io           | OT_INT          | Acceptable       | casadi::Function |
|                  |                 | number of inputs | Internal         |
|                  |                 | and outputs.     |                  |
|                  |                 | Warn if          |                  |
|                  |                 | exceeded.        |                  |
+------------------+-----------------+------------------+------------------+
| max_num_dir      | OT_INT          | Specify the      | casadi::Function |
|                  |                 | maximum number   | Internal         |
|                  |                 | of directions    |                  |
|                  |                 | for derivative   |                  |
|                  |                 | functions.       |                  |
|                  |                 | Overrules the    |                  |
|                  |                 | builtin optimize |                  |
|                  |                 | d_num_dir.       |                  |
+------------------+-----------------+------------------+------------------+
| min_lam          | OT_DOUBLE       | Minimum allowed  | casadi::Nlpsol   |
|                  |                 | multiplier value |                  |
+------------------+-----------------+------------------+------------------+
| monitor          | OT_STRINGVECTOR | Set of user      | casadi::OracleFu |
|                  |                 | problem          | nction           |
|                  |                 | functions to be  |                  |
|                  |                 | monitored        |                  |
+------------------+-----------------+------------------+------------------+
| never_inline     | OT_BOOL         | Forbid inlining. | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| no_nlp_grad      | OT_BOOL         | Prevent the      | casadi::Nlpsol   |
|                  |                 | creation of the  |                  |
|                  |                 | 'nlp_grad'       |                  |
|                  |                 | function         |                  |
+------------------+-----------------+------------------+------------------+
| oracle_options   | OT_DICT         | Options to be    | casadi::Nlpsol   |
|                  |                 | passed to the    |                  |
|                  |                 | oracle function  |                  |
+------------------+-----------------+------------------+------------------+
| output_scheme    | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| post_expand      | OT_BOOL         | After            | casadi::Function |
|                  |                 | construction,    | Internal         |
|                  |                 | expand this      |                  |
|                  |                 | Function .       |                  |
|                  |                 | Default: False   |                  |
+------------------+-----------------+------------------+------------------+
| post_expand_opti | OT_DICT         | Options to be    | casadi::Function |
| ons              |                 | passed to post-  | Internal         |
|                  |                 | construction     |                  |
|                  |                 | expansion.       |                  |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| print_in         | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_out        | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs          |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_time       | OT_BOOL         | print            | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time. Implies    |                  |
|                  |                 | record_time.     |                  |
+------------------+-----------------+------------------+------------------+
| record_time      | OT_BOOL         | record           | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time, for        |                  |
|                  |                 | retrieval with   |                  |
|                  |                 | stats().         |                  |
+------------------+-----------------+------------------+------------------+
| regularity_check | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when NaN or Inf  | ction            |
|                  |                 | appears during   |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| reverse_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | reverse mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| sens_linsol      | OT_STRING       | Linear solver    | casadi::Nlpsol   |
|                  |                 | used for         |                  |
|                  |                 | parametric       |                  |
|                  |                 | sensitivities    |                  |
|                  |                 | (default 'qr').  |                  |
+------------------+-----------------+------------------+------------------+
| sens_linsol_opti | OT_DICT         | Linear solver    | casadi::Nlpsol   |
| ons              |                 | options used for |                  |
|                  |                 | parametric       |                  |
|                  |                 | sensitivities.   |                  |
+------------------+-----------------+------------------+------------------+
| show_eval_warnin | OT_BOOL         | Show warnings    | casadi::OracleFu |
| gs               |                 | generated from   | nction           |
|                  |                 | function         |                  |
|                  |                 | evaluations      |                  |
|                  |                 | [true]           |                  |
+------------------+-----------------+------------------+------------------+
| specific_options | OT_DICT         | Options for      | casadi::OracleFu |
|                  |                 | specific auto-   | nction           |
|                  |                 | generated        |                  |
|                  |                 | functions,       |                  |
|                  |                 | overwriting the  |                  |
|                  |                 | defaults from    |                  |
|                  |                 | common_options.  |                  |
|                  |                 | Nested           |                  |
|                  |                 | dictionary.      |                  |
+------------------+-----------------+------------------+------------------+
| user_data        | OT_VOIDPTR      | A user-defined   | casadi::Function |
|                  |                 | field that can   | Internal         |
|                  |                 | be used to       |                  |
|                  |                 | identify the     |                  |
|                  |                 | function or pass |                  |
|                  |                 | additional       |                  |
|                  |                 | information      |                  |
+------------------+-----------------+------------------+------------------+
| verbose          | OT_BOOL         | Verbose          | casadi::ProtoFun |
|                  |                 | evaluation  for  | ction            |
|                  |                 | debugging        |                  |
+------------------+-----------------+------------------+------------------+
| verbose_init     | OT_BOOL         | Print out timing | casadi::Nlpsol   |
|                  |                 | information      |                  |
|                  |                 | about the        |                  |
|                  |                 | different stages |                  |
|                  |                 | of               |                  |
|                  |                 | initialization   |                  |
+------------------+-----------------+------------------+------------------+
| warn_initial_bou | OT_BOOL         | Warn if the      | casadi::Nlpsol   |
| nds              |                 | initial guess    |                  |
|                  |                 | does not satisfy |                  |
|                  |                 | LBX and UBX      |                  |
+------------------+-----------------+------------------+------------------+

>Input scheme: casadi::NlpsolInput (NLPSOL_NUM_IN = 8)

+---------------+--------+-------------------------------------------------+
|   Full name   | Short  |                   Description                   |
+===============+========+=================================================+
| NLPSOL_X0     | x0     | Decision variables, initial guess (nx x 1)      |
+---------------+--------+-------------------------------------------------+
| NLPSOL_P      | p      | Value of fixed parameters (np x 1)              |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LBX    | lbx    | Decision variables lower bound (nx x 1),        |
|               |        | default -inf.                                   |
+---------------+--------+-------------------------------------------------+
| NLPSOL_UBX    | ubx    | Decision variables upper bound (nx x 1),        |
|               |        | default +inf.                                   |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LBG    | lbg    | Constraints lower bound (ng x 1), default -inf. |
+---------------+--------+-------------------------------------------------+
| NLPSOL_UBG    | ubg    | Constraints upper bound (ng x 1), default +inf. |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LAM_X0 | lam_x0 | Lagrange multipliers for bounds on X, initial   |
|               |        | guess (nx x 1)                                  |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LAM_G0 | lam_g0 | Lagrange multipliers for bounds on G, initial   |
|               |        | guess (ng x 1)                                  |
+---------------+--------+-------------------------------------------------+

>Output scheme: casadi::NlpsolOutput (NLPSOL_NUM_OUT = 6)

+--------------+-------+---------------------------------------------------+
|  Full name   | Short |                    Description                    |
+==============+=======+===================================================+
| NLPSOL_X     | x     | Decision variables at the optimal solution (nx x  |
|              |       | 1)                                                |
+--------------+-------+---------------------------------------------------+
| NLPSOL_F     | f     | Cost function value at the optimal solution (1 x  |
|              |       | 1)                                                |
+--------------+-------+---------------------------------------------------+
| NLPSOL_G     | g     | Constraints function at the optimal solution (ng  |
|              |       | x 1)                                              |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_X | lam_x | Lagrange multipliers for bounds on X at the       |
|              |       | solution (nx x 1)                                 |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_G | lam_g | Lagrange multipliers for bounds on G at the       |
|              |       | solution (ng x 1)                                 |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_P | lam_p | Lagrange multipliers for bounds on P at the       |
|              |       | solution (np x 1)                                 |
+--------------+-------+---------------------------------------------------+

List of plugins
- AmplInterface

- blocksqp

- bonmin

- ipopt

- knitro

- snopt

- worhp

- feasiblesqpmethod

- qrsqp

- scpgen

- sqpmethod

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with  
Nlpsol.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

AmplInterface
-------------



>List of available options

+--------+-----------+--------------------+
|   Id   |   Type    |    Description     |
+========+===========+====================+
| solver | OT_STRING | AMPL solver binary |
+--------+-----------+--------------------+



--------------------------------------------------------------------------------

blocksqp
--------



This is a modified version of blockSQP by Janka et al.

Dennis Janka, Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_224

>List of available options

+----------------------------+-----------+---------------------------------+
|             Id             |   Type    |           Description           |
+============================+===========+=================================+
| block_hess                 | OT_INT    | Blockwise Hessian               |
|                            |           | approximation?                  |
+----------------------------+-----------+---------------------------------+
| col_eps                    | OT_DOUBLE | Epsilon for COL scaling         |
|                            |           | strategy                        |
+----------------------------+-----------+---------------------------------+
| col_tau1                   | OT_DOUBLE | tau1 for COL scaling strategy   |
+----------------------------+-----------+---------------------------------+
| col_tau2                   | OT_DOUBLE | tau2 for COL scaling strategy   |
+----------------------------+-----------+---------------------------------+
| conv_strategy              | OT_INT    | Convexification strategy        |
+----------------------------+-----------+---------------------------------+
| delta                      | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| delta_h0                   | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| eps                        | OT_DOUBLE | Values smaller than this are    |
|                            |           | regarded as numerically zero    |
+----------------------------+-----------+---------------------------------+
| eta                        | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| fallback_scaling           | OT_INT    | If indefinite update is used,   |
|                            |           | the type of fallback strategy   |
+----------------------------+-----------+---------------------------------+
| fallback_update            | OT_INT    | If indefinite update is used,   |
|                            |           | the type of fallback strategy   |
+----------------------------+-----------+---------------------------------+
| gamma_f                    | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| gamma_theta                | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| globalization              | OT_BOOL   | Enable globalization            |
+----------------------------+-----------+---------------------------------+
| hess_damp                  | OT_INT    | Activate Powell damping for     |
|                            |           | BFGS                            |
+----------------------------+-----------+---------------------------------+
| hess_damp_fac              | OT_DOUBLE | Damping factor for BFGS Powell  |
|                            |           | modification                    |
+----------------------------+-----------+---------------------------------+
| hess_lim_mem               | OT_INT    | Full or limited memory          |
+----------------------------+-----------+---------------------------------+
| hess_memsize               | OT_INT    | Memory size for L-BFGS updates  |
+----------------------------+-----------+---------------------------------+
| hess_scaling               | OT_INT    | Scaling strategy for Hessian    |
|                            |           | approximation                   |
+----------------------------+-----------+---------------------------------+
| hess_update                | OT_INT    | Type of Hessian approximation   |
+----------------------------+-----------+---------------------------------+
| ini_hess_diag              | OT_DOUBLE | Initial Hessian guess: diagonal |
|                            |           | matrix diag(iniHessDiag)        |
+----------------------------+-----------+---------------------------------+
| kappa_f                    | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| kappa_minus                | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| kappa_plus                 | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| kappa_plus_max             | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| kappa_soc                  | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| linsol                     | OT_STRING | The linear solver to be used by |
|                            |           | the QP method                   |
+----------------------------+-----------+---------------------------------+
| max_consec_reduced_steps   | OT_INT    | Maximum number of consecutive   |
|                            |           | reduced steps                   |
+----------------------------+-----------+---------------------------------+
| max_consec_skipped_updates | OT_INT    | Maximum number of consecutive   |
|                            |           | skipped updates                 |
+----------------------------+-----------+---------------------------------+
| max_conv_qp                | OT_INT    | How many additional QPs may be  |
|                            |           | solved for convexification per  |
|                            |           | iteration?                      |
+----------------------------+-----------+---------------------------------+
| max_it_qp                  | OT_INT    | Maximum number of QP iterations |
|                            |           | per SQP iteration               |
+----------------------------+-----------+---------------------------------+
| max_iter                   | OT_INT    | Maximum number of SQP           |
|                            |           | iterations                      |
+----------------------------+-----------+---------------------------------+
| max_line_search            | OT_INT    | Maximum number of steps in line |
|                            |           | search                          |
+----------------------------+-----------+---------------------------------+
| max_soc_iter               | OT_INT    | Maximum number of SOC line      |
|                            |           | search iterations               |
+----------------------------+-----------+---------------------------------+
| max_time_qp                | OT_DOUBLE | Maximum number of time in       |
|                            |           | seconds per QP solve per SQP    |
|                            |           | iteration                       |
+----------------------------+-----------+---------------------------------+
| nlinfeastol                | OT_DOUBLE | Nonlinear feasibility tolerance |
+----------------------------+-----------+---------------------------------+
| obj_lo                     | OT_DOUBLE | Lower bound on objective        |
|                            |           | function [-inf]                 |
+----------------------------+-----------+---------------------------------+
| obj_up                     | OT_DOUBLE | Upper bound on objective        |
|                            |           | function [inf]                  |
+----------------------------+-----------+---------------------------------+
| opttol                     | OT_DOUBLE | Optimality tolerance            |
+----------------------------+-----------+---------------------------------+
| print_header               | OT_BOOL   | Print solver header at startup  |
+----------------------------+-----------+---------------------------------+
| print_iteration            | OT_BOOL   | Print SQP iterations            |
+----------------------------+-----------+---------------------------------+
| print_maxit_reached        | OT_BOOL   | Print error when maximum number |
|                            |           | of SQP iterations reached       |
+----------------------------+-----------+---------------------------------+
| qp_init                    | OT_BOOL   | Use warmstarting                |
+----------------------------+-----------+---------------------------------+
| qpsol                      | OT_STRING | The QP solver to be used by the |
|                            |           | SQP method                      |
+----------------------------+-----------+---------------------------------+
| qpsol_options              | OT_DICT   | Options to be passed to the QP  |
|                            |           | solver                          |
+----------------------------+-----------+---------------------------------+
| restore_feas               | OT_BOOL   | Use feasibility restoration     |
|                            |           | phase                           |
+----------------------------+-----------+---------------------------------+
| rho                        | OT_DOUBLE | Feasibility restoration phase   |
|                            |           | parameter                       |
+----------------------------+-----------+---------------------------------+
| s_f                        | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| s_theta                    | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| schur                      | OT_BOOL   | Use qpOASES Schur compliment    |
|                            |           | approach                        |
+----------------------------+-----------+---------------------------------+
| skip_first_globalization   | OT_BOOL   | No globalization strategy in    |
|                            |           | first iteration                 |
+----------------------------+-----------+---------------------------------+
| theta_max                  | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| theta_min                  | OT_DOUBLE | Filter line search parameter,   |
|                            |           | cf. IPOPT paper                 |
+----------------------------+-----------+---------------------------------+
| warmstart                  | OT_BOOL   | Use warmstarting                |
+----------------------------+-----------+---------------------------------+
| which_second_derv          | OT_INT    | For which block should second   |
|                            |           | derivatives be provided by the  |
|                            |           | user                            |
+----------------------------+-----------+---------------------------------+
| zeta                       | OT_DOUBLE | Feasibility restoration phase   |
|                            |           | parameter                       |
+----------------------------+-----------+---------------------------------+



--------------------------------------------------------------------------------

bonmin
------



When in warmstart mode, output NLPSOL_LAM_X may be used as input

NOTE: Even when max_iter == 0, it is not guaranteed that 
input(NLPSOL_X0) 
== output(NLPSOL_X). Indeed if bounds on X or 
constraints are unmet, they 
will differ.

For a good tutorial on BONMIN, see 
http://drops.dagstuhl.de/volltexte/2009/2089/pdf/09061.WaechterAndreas.Paper.2089.pdf

A good resource about the algorithms in BONMIN is: Wachter and L. T. 

Biegler, On the Implementation of an Interior-Point Filter Line-Search
 
Algorithm for Large-Scale Nonlinear Programming, Mathematical 
Programming 
106(1), pp. 25-57, 2006 (As Research Report RC 23149, IBM 
T. J. Watson 
Research Center, Yorktown, USA

Caveats:
with default options, multipliers for the decision variables are 
wrong
 for equality constraints. Change the 'fixed_variable_treatment' to 

'make_constraint' or 'relax_bounds' to obtain correct results.

Extra doc: https://github.com/casadi/casadi/wiki/L_223

>List of available options

+-------------------------+-----------------------+------------------------+
|           Id            |         Type          |      Description       |
+=========================+=======================+========================+
| bonmin                  | OT_DICT               | Options to be passed   |
|                         |                       | to BONMIN              |
+-------------------------+-----------------------+------------------------+
| con_integer_md          | OT_DICT               | Integer metadata (a    |
|                         |                       | dictionary with lists  |
|                         |                       | of integers) about     |
|                         |                       | constraints to be      |
|                         |                       | passed to BONMIN       |
+-------------------------+-----------------------+------------------------+
| con_numeric_md          | OT_DICT               | Numeric metadata (a    |
|                         |                       | dictionary with lists  |
|                         |                       | of reals) about        |
|                         |                       | constraints to be      |
|                         |                       | passed to BONMIN       |
+-------------------------+-----------------------+------------------------+
| con_string_md           | OT_DICT               | String metadata (a     |
|                         |                       | dictionary with lists  |
|                         |                       | of strings) about      |
|                         |                       | constraints to be      |
|                         |                       | passed to BONMIN       |
+-------------------------+-----------------------+------------------------+
| grad_f                  | OT_FUNCTION           | Function for           |
|                         |                       | calculating the        |
|                         |                       | gradient of the        |
|                         |                       | objective (column,     |
|                         |                       | autogenerated by       |
|                         |                       | default)               |
+-------------------------+-----------------------+------------------------+
| grad_f_options          | OT_DICT               | Options for the        |
|                         |                       | autogenerated gradient |
|                         |                       | of the objective.      |
+-------------------------+-----------------------+------------------------+
| hess_lag                | OT_FUNCTION           | Function for           |
|                         |                       | calculating the        |
|                         |                       | Hessian of the         |
|                         |                       | Lagrangian             |
|                         |                       | (autogenerated by      |
|                         |                       | default)               |
+-------------------------+-----------------------+------------------------+
| hess_lag_options        | OT_DICT               | Options for the        |
|                         |                       | autogenerated Hessian  |
|                         |                       | of the Lagrangian.     |
+-------------------------+-----------------------+------------------------+
| jac_g                   | OT_FUNCTION           | Function for           |
|                         |                       | calculating the        |
|                         |                       | Jacobian of the        |
|                         |                       | constraints            |
|                         |                       | (autogenerated by      |
|                         |                       | default)               |
+-------------------------+-----------------------+------------------------+
| jac_g_options           | OT_DICT               | Options for the        |
|                         |                       | autogenerated Jacobian |
|                         |                       | of the constraints.    |
+-------------------------+-----------------------+------------------------+
| pass_nonlinear_constrai | OT_BOOL               | Pass list of           |
| nts                     |                       | constraints entering   |
|                         |                       | nonlinearly to BONMIN  |
+-------------------------+-----------------------+------------------------+
| pass_nonlinear_variable | OT_BOOL               | Pass list of variables |
| s                       |                       | entering nonlinearly   |
|                         |                       | to BONMIN              |
+-------------------------+-----------------------+------------------------+
| sos1_groups             | OT_INTVECTORVECTOR    | Options for the        |
|                         |                       | autogenerated gradient |
|                         |                       | of the objective.      |
+-------------------------+-----------------------+------------------------+
| sos1_priorities         | OT_INTVECTOR          | Options for the        |
|                         |                       | autogenerated gradient |
|                         |                       | of the objective.      |
+-------------------------+-----------------------+------------------------+
| sos1_weights            | OT_DOUBLEVECTORVECTOR | Options for the        |
|                         |                       | autogenerated gradient |
|                         |                       | of the objective.      |
+-------------------------+-----------------------+------------------------+
| var_integer_md          | OT_DICT               | Integer metadata (a    |
|                         |                       | dictionary with lists  |
|                         |                       | of integers) about     |
|                         |                       | variables to be passed |
|                         |                       | to BONMIN              |
+-------------------------+-----------------------+------------------------+
| var_numeric_md          | OT_DICT               | Numeric metadata (a    |
|                         |                       | dictionary with lists  |
|                         |                       | of reals) about        |
|                         |                       | variables to be passed |
|                         |                       | to BONMIN              |
+-------------------------+-----------------------+------------------------+
| var_string_md           | OT_DICT               | String metadata (a     |
|                         |                       | dictionary with lists  |
|                         |                       | of strings) about      |
|                         |                       | variables to be passed |
|                         |                       | to BONMIN              |
+-------------------------+-----------------------+------------------------+



--------------------------------------------------------------------------------

ipopt
-----



When in warmstart mode, output NLPSOL_LAM_X may be used as input

NOTE: Even when max_iter == 0, it is not guaranteed that 
input(NLPSOL_X0) 
== output(NLPSOL_X). Indeed if bounds on X or 
constraints are unmet, they 
will differ.

For a good tutorial on IPOPT, see 
http://drops.dagstuhl.de/volltexte/2009/2089/pdf/09061.WaechterAndreas.Paper.2089.pdf

A good resource about the algorithms in IPOPT is: Wachter and L. T. 

Biegler, On the Implementation of an Interior-Point Filter Line-Search
 
Algorithm for Large-Scale Nonlinear Programming, Mathematical 
Programming 
106(1), pp. 25-57, 2006 (As Research Report RC 23149, IBM 
T. J. Watson 
Research Center, Yorktown, USA

Caveats:
with default options, multipliers for the decision variables are 
wrong
 for equality constraints. Change the 'fixed_variable_treatment' to 

'make_constraint' or 'relax_bounds' to obtain correct results.

Extra doc: https://github.com/casadi/casadi/wiki/L_21y

>List of available options

+--------------------------+-------------+---------------------------------+
|            Id            |    Type     |           Description           |
+==========================+=============+=================================+
| clip_inactive_lam        | OT_BOOL     | Explicitly set Lagrange         |
|                          |             | multipliers to 0 when bound is  |
|                          |             | deemed inactive (default:       |
|                          |             | false).                         |
+--------------------------+-------------+---------------------------------+
| con_integer_md           | OT_DICT     | Integer metadata (a dictionary  |
|                          |             | with lists of integers) about   |
|                          |             | constraints to be passed to     |
|                          |             | IPOPT                           |
+--------------------------+-------------+---------------------------------+
| con_numeric_md           | OT_DICT     | Numeric metadata (a dictionary  |
|                          |             | with lists of reals) about      |
|                          |             | constraints to be passed to     |
|                          |             | IPOPT                           |
+--------------------------+-------------+---------------------------------+
| con_string_md            | OT_DICT     | String metadata (a dictionary   |
|                          |             | with lists of strings) about    |
|                          |             | constraints to be passed to     |
|                          |             | IPOPT                           |
+--------------------------+-------------+---------------------------------+
| convexify_margin         | OT_DOUBLE   | When using a convexification    |
|                          |             | strategy, make sure that the    |
|                          |             | smallest eigenvalue is at least |
|                          |             | this (default: 1e-7).           |
+--------------------------+-------------+---------------------------------+
| convexify_strategy       | OT_STRING   | NONE|regularize|eigen-          |
|                          |             | reflect|eigen-clip. Strategy to |
|                          |             | convexify the Lagrange Hessian  |
|                          |             | before passing it to the        |
|                          |             | solver.                         |
+--------------------------+-------------+---------------------------------+
| grad_f                   | OT_FUNCTION | Function for calculating the    |
|                          |             | gradient of the objective       |
|                          |             | (column, autogenerated by       |
|                          |             | default)                        |
+--------------------------+-------------+---------------------------------+
| hess_lag                 | OT_FUNCTION | Function for calculating the    |
|                          |             | Hessian of the Lagrangian       |
|                          |             | (autogenerated by default)      |
+--------------------------+-------------+---------------------------------+
| inactive_lam_strategy    | OT_STRING   | Strategy to detect if a bound   |
|                          |             | is inactive. RELTOL: use        |
|                          |             | solver-defined constraint       |
|                          |             | tolerance *                     |
|                          |             | inactive_lam_value|abstol: use  |
|                          |             | inactive_lam_value              |
+--------------------------+-------------+---------------------------------+
| inactive_lam_value       | OT_DOUBLE   | Value used in                   |
|                          |             | inactive_lam_strategy (default: |
|                          |             | 10).                            |
+--------------------------+-------------+---------------------------------+
| ipopt                    | OT_DICT     | Options to be passed to IPOPT   |
+--------------------------+-------------+---------------------------------+
| jac_g                    | OT_FUNCTION | Function for calculating the    |
|                          |             | Jacobian of the constraints     |
|                          |             | (autogenerated by default)      |
+--------------------------+-------------+---------------------------------+
| max_iter_eig             | OT_DOUBLE   | Maximum number of iterations to |
|                          |             | compute an eigenvalue           |
|                          |             | decomposition (default: 50).    |
+--------------------------+-------------+---------------------------------+
| pass_nonlinear_variables | OT_BOOL     | Pass list of variables entering |
|                          |             | nonlinearly to IPOPT            |
+--------------------------+-------------+---------------------------------+
| var_integer_md           | OT_DICT     | Integer metadata (a dictionary  |
|                          |             | with lists of integers) about   |
|                          |             | variables to be passed to IPOPT |
+--------------------------+-------------+---------------------------------+
| var_numeric_md           | OT_DICT     | Numeric metadata (a dictionary  |
|                          |             | with lists of reals) about      |
|                          |             | variables to be passed to IPOPT |
+--------------------------+-------------+---------------------------------+
| var_string_md            | OT_DICT     | String metadata (a dictionary   |
|                          |             | with lists of strings) about    |
|                          |             | variables to be passed to IPOPT |
+--------------------------+-------------+---------------------------------+



--------------------------------------------------------------------------------

knitro
------



KNITRO interface

Extra doc: https://github.com/casadi/casadi/wiki/L_22c

>List of available options

+--------------------------+--------------------+--------------------------+
|            Id            |        Type        |       Description        |
+==========================+====================+==========================+
| complem_variables        | OT_INTVECTORVECTOR | List of complementary    |
|                          |                    | constraints on simple    |
|                          |                    | bounds. Pair (i, j)      |
|                          |                    | encodes complementarity  |
|                          |                    | between the bounds on    |
|                          |                    | variable i and variable  |
|                          |                    | j.                       |
+--------------------------+--------------------+--------------------------+
| contype                  | OT_INTVECTOR       | Type of constraint       |
+--------------------------+--------------------+--------------------------+
| detect_linear_constraint | OT_BOOL            | Detect type of           |
| s                        |                    | constraints              |
+--------------------------+--------------------+--------------------------+
| knitro                   | OT_DICT            | Options to be passed to  |
|                          |                    | KNITRO                   |
+--------------------------+--------------------+--------------------------+
| options_file             | OT_STRING          | Read options from file   |
|                          |                    | (solver specific)        |
+--------------------------+--------------------+--------------------------+



--------------------------------------------------------------------------------

snopt
-----



SNOPT interface

Extra doc: https://github.com/casadi/casadi/wiki/L_22m

>List of available options

+-------+-----------+---------------------------------------------+
|  Id   |   Type    |                 Description                 |
+=======+===========+=============================================+
| snopt | OT_DICT   | Options to be passed to SNOPT               |
+-------+-----------+---------------------------------------------+
| start | OT_STRING | Warm-start options for Worhp: cold|warm|hot |
+-------+-----------+---------------------------------------------+



--------------------------------------------------------------------------------

worhp
-----



WORHP interface

Designed for Worhp 1.12

>List of available options

+-------+---------+-------------------------------+
|  Id   |  Type   |          Description          |
+=======+=========+===============================+
| worhp | OT_DICT | Options to be passed to WORHP |
+-------+---------+-------------------------------+



--------------------------------------------------------------------------------

feasiblesqpmethod
-----------------



A textbook FeasibleSQPMethod

Extra doc: https://github.com/casadi/casadi/wiki/L_241

>List of available options

+----------------------------+-----------------+---------------------------+
|             Id             |      Type       |        Description        |
+============================+=================+===========================+
| anderson_memory            | OT_INT          | Anderson memory. If       |
|                            |                 | Anderson is used default  |
|                            |                 | is 1, else default is 0.  |
+----------------------------+-----------------+---------------------------+
| contraction_acceptance_val | OT_DOUBLE       | If the empirical          |
| ue                         |                 | contraction rate in the   |
|                            |                 | feasibility iterations is |
|                            |                 | above this value in the   |
|                            |                 | heuristics the iterations |
|                            |                 | are aborted.              |
+----------------------------+-----------------+---------------------------+
| convexify_margin           | OT_DOUBLE       | When using a              |
|                            |                 | convexification strategy, |
|                            |                 | make sure that the        |
|                            |                 | smallest eigenvalue4 is   |
|                            |                 | at least this (default:   |
|                            |                 | 1e-7).                    |
+----------------------------+-----------------+---------------------------+
| convexify_strategy         | OT_STRING       | NONE|regularize|eigen-    |
|                            |                 | reflect|eigen-clip.       |
|                            |                 | Strategy to convexify the |
|                            |                 | Lagrange Hessian before   |
|                            |                 | passing it to the solver. |
+----------------------------+-----------------+---------------------------+
| f                          | OT_FUNCTION     | Function for calculating  |
|                            |                 | the objective function    |
|                            |                 | (autogenerated by         |
|                            |                 | default)                  |
+----------------------------+-----------------+---------------------------+
| feas_tol                   | OT_DOUBLE       | Feasibility tolerance.    |
|                            |                 | Below this tolerance an   |
|                            |                 | iterate is considered to  |
|                            |                 | be feasible.              |
+----------------------------+-----------------+---------------------------+
| g                          | OT_FUNCTION     | Function for calculating  |
|                            |                 | the constraints           |
|                            |                 | (autogenerated by         |
|                            |                 | default)                  |
+----------------------------+-----------------+---------------------------+
| grad_f                     | OT_FUNCTION     | Function for calculating  |
|                            |                 | the gradient of the       |
|                            |                 | objective (autogenerated  |
|                            |                 | by default)               |
+----------------------------+-----------------+---------------------------+
| hess_lag                   | OT_FUNCTION     | Function for calculating  |
|                            |                 | the Hessian of the        |
|                            |                 | Lagrangian (autogenerated |
|                            |                 | by default)               |
+----------------------------+-----------------+---------------------------+
| hessian_approximation      | OT_STRING       | limited-memory|exact      |
+----------------------------+-----------------+---------------------------+
| init_feasible              | OT_BOOL         | Initialize the QP         |
|                            |                 | subproblems with a        |
|                            |                 | feasible initial value    |
|                            |                 | (default: false).         |
+----------------------------+-----------------+---------------------------+
| jac_g                      | OT_FUNCTION     | Function for calculating  |
|                            |                 | the Jacobian of the       |
|                            |                 | constraints               |
|                            |                 | (autogenerated by         |
|                            |                 | default)                  |
+----------------------------+-----------------+---------------------------+
| lbfgs_memory               | OT_INT          | Size of L-BFGS memory.    |
+----------------------------+-----------------+---------------------------+
| max_inner_iter             | OT_DOUBLE       | Maximum number of inner   |
|                            |                 | iterations.               |
+----------------------------+-----------------+---------------------------+
| max_iter                   | OT_INT          | Maximum number of SQP     |
|                            |                 | iterations                |
+----------------------------+-----------------+---------------------------+
| max_iter_eig               | OT_DOUBLE       | Maximum number of         |
|                            |                 | iterations to compute an  |
|                            |                 | eigenvalue decomposition  |
|                            |                 | (default: 50).            |
+----------------------------+-----------------+---------------------------+
| merit_memory               | OT_INT          | Size of memory to store   |
|                            |                 | history of merit function |
|                            |                 | values                    |
+----------------------------+-----------------+---------------------------+
| min_iter                   | OT_INT          | Minimum number of SQP     |
|                            |                 | iterations                |
+----------------------------+-----------------+---------------------------+
| optim_tol                  | OT_DOUBLE       | Optimality tolerance.     |
|                            |                 | Below this value an       |
|                            |                 | iterate is considered to  |
|                            |                 | be optimal.               |
+----------------------------+-----------------+---------------------------+
| print_header               | OT_BOOL         | Print the header with     |
|                            |                 | problem statistics        |
+----------------------------+-----------------+---------------------------+
| print_iteration            | OT_BOOL         | Print the iterations      |
+----------------------------+-----------------+---------------------------+
| print_status               | OT_BOOL         | Print a status message    |
|                            |                 | after solving             |
+----------------------------+-----------------+---------------------------+
| qpsol                      | OT_STRING       | The QP solver to be used  |
|                            |                 | by the SQP method         |
|                            |                 | [qpoases]                 |
+----------------------------+-----------------+---------------------------+
| qpsol_options              | OT_DICT         | Options to be passed to   |
|                            |                 | the QP solver             |
+----------------------------+-----------------+---------------------------+
| solve_type                 | OT_STRING       | The solver type: Either   |
|                            |                 | SQP or SLP. Defaults to   |
|                            |                 | SQP                       |
+----------------------------+-----------------+---------------------------+
| tol_du                     | OT_DOUBLE       | Stopping criterion for    |
|                            |                 | dual infeasability        |
+----------------------------+-----------------+---------------------------+
| tol_pr                     | OT_DOUBLE       | Stopping criterion for    |
|                            |                 | primal infeasibility      |
+----------------------------+-----------------+---------------------------+
| tr_acceptance              | OT_DOUBLE       | Is the trust-region ratio |
|                            |                 | above this value, the     |
|                            |                 | step is accepted.         |
+----------------------------+-----------------+---------------------------+
| tr_alpha1                  | OT_DOUBLE       | Lower alpha in trust-     |
|                            |                 | region size criterion.    |
+----------------------------+-----------------+---------------------------+
| tr_alpha2                  | OT_DOUBLE       | Upper alpha in trust-     |
|                            |                 | region size criterion.    |
+----------------------------+-----------------+---------------------------+
| tr_eta1                    | OT_DOUBLE       | Lower eta in trust-region |
|                            |                 | acceptance criterion.     |
+----------------------------+-----------------+---------------------------+
| tr_eta2                    | OT_DOUBLE       | Upper eta in trust-region |
|                            |                 | acceptance criterion.     |
+----------------------------+-----------------+---------------------------+
| tr_rad0                    | OT_DOUBLE       | Initial trust-region      |
|                            |                 | radius.                   |
+----------------------------+-----------------+---------------------------+
| tr_rad_max                 | OT_DOUBLE       | Maximum trust-region      |
|                            |                 | radius.                   |
+----------------------------+-----------------+---------------------------+
| tr_rad_min                 | OT_DOUBLE       | Minimum trust-region      |
|                            |                 | radius.                   |
+----------------------------+-----------------+---------------------------+
| tr_scale_vector            | OT_DOUBLEVECTOR | Vector that tells where   |
|                            |                 | trust-region is applied.  |
+----------------------------+-----------------+---------------------------+
| tr_tol                     | OT_DOUBLE       | Trust-region tolerance.   |
|                            |                 | Below this value another  |
|                            |                 | scalar is equal to the    |
|                            |                 | trust region radius.      |
+----------------------------+-----------------+---------------------------+
| use_anderson               | OT_BOOL         | Use Anderson              |
|                            |                 | Acceleration. (default    |
|                            |                 | false)                    |
+----------------------------+-----------------+---------------------------+
| watchdog                   | OT_INT          | Number of watchdog        |
|                            |                 | iterations in feasibility |
|                            |                 | iterations. After this    |
|                            |                 | amount of iterations, it  |
|                            |                 | is checked with the       |
|                            |                 | contraction acceptance    |
|                            |                 | value, if iterations are  |
|                            |                 | converging.               |
+----------------------------+-----------------+---------------------------+



--------------------------------------------------------------------------------

qrsqp
-----



A textbook SQPMethod

Extra doc: https://github.com/casadi/casadi/wiki/L_22u



--------------------------------------------------------------------------------

scpgen
------



A structure-exploiting sequential quadratic programming (to be come 

sequential convex programming) method for nonlinear programming.

Extra doc: https://github.com/casadi/casadi/wiki/L_232

>List of available options

+-----------------------+-----------------+--------------------------------+
|          Id           |      Type       |          Description           |
+=======================+=================+================================+
| beta                  | OT_DOUBLE       | Line-search parameter,         |
|                       |                 | restoration factor of stepsize |
+-----------------------+-----------------+--------------------------------+
| c1                    | OT_DOUBLE       | Armijo condition, coefficient  |
|                       |                 | of decrease in merit           |
+-----------------------+-----------------+--------------------------------+
| codegen               | OT_BOOL         | C-code generation              |
+-----------------------+-----------------+--------------------------------+
| hessian_approximation | OT_STRING       | gauss-newton|exact             |
+-----------------------+-----------------+--------------------------------+
| lbfgs_memory          | OT_INT          | Size of L-BFGS memory.         |
+-----------------------+-----------------+--------------------------------+
| max_iter              | OT_INT          | Maximum number of SQP          |
|                       |                 | iterations                     |
+-----------------------+-----------------+--------------------------------+
| max_iter_ls           | OT_INT          | Maximum number of linesearch   |
|                       |                 | iterations                     |
+-----------------------+-----------------+--------------------------------+
| merit_memsize         | OT_INT          | Size of memory to store        |
|                       |                 | history of merit function      |
|                       |                 | values                         |
+-----------------------+-----------------+--------------------------------+
| merit_start           | OT_DOUBLE       | Lower bound for the merit      |
|                       |                 | function parameter             |
+-----------------------+-----------------+--------------------------------+
| name_x                | OT_STRINGVECTOR | Names of the variables.        |
+-----------------------+-----------------+--------------------------------+
| print_header          | OT_BOOL         | Print the header with problem  |
|                       |                 | statistics                     |
+-----------------------+-----------------+--------------------------------+
| print_x               | OT_INTVECTOR    | Which variables to print.      |
+-----------------------+-----------------+--------------------------------+
| qpsol                 | OT_STRING       | The QP solver to be used by    |
|                       |                 | the SQP method                 |
+-----------------------+-----------------+--------------------------------+
| qpsol_options         | OT_DICT         | Options to be passed to the QP |
|                       |                 | solver                         |
+-----------------------+-----------------+--------------------------------+
| reg_threshold         | OT_DOUBLE       | Threshold for the              |
|                       |                 | regularization.                |
+-----------------------+-----------------+--------------------------------+
| regularize            | OT_BOOL         | Automatic regularization of    |
|                       |                 | Lagrange Hessian.              |
+-----------------------+-----------------+--------------------------------+
| tol_du                | OT_DOUBLE       | Stopping criterion for dual    |
|                       |                 | infeasability                  |
+-----------------------+-----------------+--------------------------------+
| tol_pr                | OT_DOUBLE       | Stopping criterion for primal  |
|                       |                 | infeasibility                  |
+-----------------------+-----------------+--------------------------------+
| tol_pr_step           | OT_DOUBLE       | Stopping criterion for the     |
|                       |                 | step size                      |
+-----------------------+-----------------+--------------------------------+
| tol_reg               | OT_DOUBLE       | Stopping criterion for         |
|                       |                 | regularization                 |
+-----------------------+-----------------+--------------------------------+



--------------------------------------------------------------------------------

sqpmethod
---------



A textbook SQPMethod

Extra doc: https://github.com/casadi/casadi/wiki/L_22x

>List of available options

+--------------------------+-------------+---------------------------------+
|            Id            |    Type     |           Description           |
+==========================+=============+=================================+
| beta                     | OT_DOUBLE   | Line-search parameter,          |
|                          |             | restoration factor of stepsize  |
+--------------------------+-------------+---------------------------------+
| c1                       | OT_DOUBLE   | Armijo condition, coefficient   |
|                          |             | of decrease in merit            |
+--------------------------+-------------+---------------------------------+
| convexify_margin         | OT_DOUBLE   | When using a convexification    |
|                          |             | strategy, make sure that the    |
|                          |             | smallest eigenvalue is at least |
|                          |             | this (default: 1e-7).           |
+--------------------------+-------------+---------------------------------+
| convexify_strategy       | OT_STRING   | NONE|regularize|eigen-          |
|                          |             | reflect|eigen-clip. Strategy to |
|                          |             | convexify the Lagrange Hessian  |
|                          |             | before passing it to the        |
|                          |             | solver.                         |
+--------------------------+-------------+---------------------------------+
| elastic_mode             | OT_BOOL     | Enable the elastic mode which   |
|                          |             | is used when the QP is          |
|                          |             | infeasible (default: false).    |
+--------------------------+-------------+---------------------------------+
| gamma_0                  | OT_DOUBLE   | Starting value for the penalty  |
|                          |             | parameter of elastic mode       |
|                          |             | (default: 1).                   |
+--------------------------+-------------+---------------------------------+
| gamma_1_min              | OT_DOUBLE   | Minimum value for gamma_1       |
|                          |             | (default: 1e-5).                |
+--------------------------+-------------+---------------------------------+
| gamma_max                | OT_DOUBLE   | Maximum value for the penalty   |
|                          |             | parameter of elastic mode       |
|                          |             | (default: 1e20).                |
+--------------------------+-------------+---------------------------------+
| hess_lag                 | OT_FUNCTION | Function for calculating the    |
|                          |             | Hessian of the Lagrangian       |
|                          |             | (autogenerated by default)      |
+--------------------------+-------------+---------------------------------+
| hessian_approximation    | OT_STRING   | limited-memory|exact            |
+--------------------------+-------------+---------------------------------+
| init_feasible            | OT_BOOL     | Initialize the QP subproblems   |
|                          |             | with a feasible initial value   |
|                          |             | (default: false).               |
+--------------------------+-------------+---------------------------------+
| jac_fg                   | OT_FUNCTION | Function for calculating the    |
|                          |             | gradient of the objective and   |
|                          |             | Jacobian of the constraints     |
|                          |             | (autogenerated by default)      |
+--------------------------+-------------+---------------------------------+
| lbfgs_memory             | OT_INT      | Size of L-BFGS memory.          |
+--------------------------+-------------+---------------------------------+
| max_iter                 | OT_INT      | Maximum number of SQP           |
|                          |             | iterations                      |
+--------------------------+-------------+---------------------------------+
| max_iter_eig             | OT_DOUBLE   | Maximum number of iterations to |
|                          |             | compute an eigenvalue           |
|                          |             | decomposition (default: 50).    |
+--------------------------+-------------+---------------------------------+
| max_iter_ls              | OT_INT      | Maximum number of linesearch    |
|                          |             | iterations                      |
+--------------------------+-------------+---------------------------------+
| merit_memory             | OT_INT      | Size of memory to store history |
|                          |             | of merit function values        |
+--------------------------+-------------+---------------------------------+
| min_iter                 | OT_INT      | Minimum number of SQP           |
|                          |             | iterations                      |
+--------------------------+-------------+---------------------------------+
| min_step_size            | OT_DOUBLE   | The size (inf-norm) of the step |
|                          |             | size should not become smaller  |
|                          |             | than this.                      |
+--------------------------+-------------+---------------------------------+
| print_header             | OT_BOOL     | Print the header with problem   |
|                          |             | statistics                      |
+--------------------------+-------------+---------------------------------+
| print_iteration          | OT_BOOL     | Print the iterations            |
+--------------------------+-------------+---------------------------------+
| print_status             | OT_BOOL     | Print a status message after    |
|                          |             | solving                         |
+--------------------------+-------------+---------------------------------+
| qpsol                    | OT_STRING   | The QP solver to be used by the |
|                          |             | SQP method [qpoases]            |
+--------------------------+-------------+---------------------------------+
| qpsol_options            | OT_DICT     | Options to be passed to the QP  |
|                          |             | solver                          |
+--------------------------+-------------+---------------------------------+
| second_order_corrections | OT_BOOL     | Enable second order             |
|                          |             | corrections. These are used     |
|                          |             | when a step is considered bad   |
|                          |             | by the merit function and       |
|                          |             | constraint norm (default:       |
|                          |             | false).                         |
+--------------------------+-------------+---------------------------------+
| tol_du                   | OT_DOUBLE   | Stopping criterion for dual     |
|                          |             | infeasability                   |
+--------------------------+-------------+---------------------------------+
| tol_pr                   | OT_DOUBLE   | Stopping criterion for primal   |
|                          |             | infeasibility                   |
+--------------------------+-------------+---------------------------------+

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_21q

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L115

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L115-L118

";

%feature("docstring")  casadi::nlpsol(const std::string &name, const 
std::string &solver, const MXDict &nlp, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::nlpsol(const std::string &name, const 
std::string &solver, const NlpBuilder &nl, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::nlpsol(const std::string &name, const 
std::string &solver, const std::string &fname, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::nlpsol(const std::string &name, const 
std::string &solver, const Importer &compiler, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::nlpsol(const std::string &name, const 
std::string &solver, const Function &nlp, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::nlpsol_in() "

[INTERNAL] 
Get input scheme of NLP solvers.

>Input scheme: casadi::NlpsolInput (NLPSOL_NUM_IN = 8)

+---------------+--------+-------------------------------------------------+
|   Full name   | Short  |                   Description                   |
+===============+========+=================================================+
| NLPSOL_X0     | x0     | Decision variables, initial guess (nx x 1)      |
+---------------+--------+-------------------------------------------------+
| NLPSOL_P      | p      | Value of fixed parameters (np x 1)              |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LBX    | lbx    | Decision variables lower bound (nx x 1),        |
|               |        | default -inf.                                   |
+---------------+--------+-------------------------------------------------+
| NLPSOL_UBX    | ubx    | Decision variables upper bound (nx x 1),        |
|               |        | default +inf.                                   |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LBG    | lbg    | Constraints lower bound (ng x 1), default -inf. |
+---------------+--------+-------------------------------------------------+
| NLPSOL_UBG    | ubg    | Constraints upper bound (ng x 1), default +inf. |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LAM_X0 | lam_x0 | Lagrange multipliers for bounds on X, initial   |
|               |        | guess (nx x 1)                                  |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LAM_G0 | lam_g0 | Lagrange multipliers for bounds on G, initial   |
|               |        | guess (ng x 1)                                  |
+---------------+--------+-------------------------------------------------+

Extra doc: https://github.com/casadi/casadi/wiki/L_1sy

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L197

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L197-L201

";

%feature("docstring")  casadi::nlpsol_in(casadi_int ind) "

[INTERNAL] 
Get NLP solver input scheme name by index.

>Input scheme: casadi::NlpsolInput (NLPSOL_NUM_IN = 8)

+---------------+--------+-------------------------------------------------+
|   Full name   | Short  |                   Description                   |
+===============+========+=================================================+
| NLPSOL_X0     | x0     | Decision variables, initial guess (nx x 1)      |
+---------------+--------+-------------------------------------------------+
| NLPSOL_P      | p      | Value of fixed parameters (np x 1)              |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LBX    | lbx    | Decision variables lower bound (nx x 1),        |
|               |        | default -inf.                                   |
+---------------+--------+-------------------------------------------------+
| NLPSOL_UBX    | ubx    | Decision variables upper bound (nx x 1),        |
|               |        | default +inf.                                   |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LBG    | lbg    | Constraints lower bound (ng x 1), default -inf. |
+---------------+--------+-------------------------------------------------+
| NLPSOL_UBG    | ubg    | Constraints upper bound (ng x 1), default +inf. |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LAM_X0 | lam_x0 | Lagrange multipliers for bounds on X, initial   |
|               |        | guess (nx x 1)                                  |
+---------------+--------+-------------------------------------------------+
| NLPSOL_LAM_G0 | lam_g0 | Lagrange multipliers for bounds on G, initial   |
|               |        | guess (ng x 1)                                  |
+---------------+--------+-------------------------------------------------+

Extra doc: https://github.com/casadi/casadi/wiki/L_1t0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L228

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L228-L241

";

%feature("docstring")  casadi::nlpsol_out() "

[INTERNAL] 
Get NLP solver output scheme of NLP solvers.

>Output scheme: casadi::NlpsolOutput (NLPSOL_NUM_OUT = 6)

+--------------+-------+---------------------------------------------------+
|  Full name   | Short |                    Description                    |
+==============+=======+===================================================+
| NLPSOL_X     | x     | Decision variables at the optimal solution (nx x  |
|              |       | 1)                                                |
+--------------+-------+---------------------------------------------------+
| NLPSOL_F     | f     | Cost function value at the optimal solution (1 x  |
|              |       | 1)                                                |
+--------------+-------+---------------------------------------------------+
| NLPSOL_G     | g     | Constraints function at the optimal solution (ng  |
|              |       | x 1)                                              |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_X | lam_x | Lagrange multipliers for bounds on X at the       |
|              |       | solution (nx x 1)                                 |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_G | lam_g | Lagrange multipliers for bounds on G at the       |
|              |       | solution (ng x 1)                                 |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_P | lam_p | Lagrange multipliers for bounds on P at the       |
|              |       | solution (np x 1)                                 |
+--------------+-------+---------------------------------------------------+

Extra doc: https://github.com/casadi/casadi/wiki/L_1sz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L203

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L203-L207

";

%feature("docstring")  casadi::nlpsol_out(casadi_int ind) "

[INTERNAL] 
Get output scheme name by index.

>Output scheme: casadi::NlpsolOutput (NLPSOL_NUM_OUT = 6)

+--------------+-------+---------------------------------------------------+
|  Full name   | Short |                    Description                    |
+==============+=======+===================================================+
| NLPSOL_X     | x     | Decision variables at the optimal solution (nx x  |
|              |       | 1)                                                |
+--------------+-------+---------------------------------------------------+
| NLPSOL_F     | f     | Cost function value at the optimal solution (1 x  |
|              |       | 1)                                                |
+--------------+-------+---------------------------------------------------+
| NLPSOL_G     | g     | Constraints function at the optimal solution (ng  |
|              |       | x 1)                                              |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_X | lam_x | Lagrange multipliers for bounds on X at the       |
|              |       | solution (nx x 1)                                 |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_G | lam_g | Lagrange multipliers for bounds on G at the       |
|              |       | solution (ng x 1)                                 |
+--------------+-------+---------------------------------------------------+
| NLPSOL_LAM_P | lam_p | Lagrange multipliers for bounds on P at the       |
|              |       | solution (np x 1)                                 |
+--------------+-------+---------------------------------------------------+

Extra doc: https://github.com/casadi/casadi/wiki/L_1t1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L243

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L243-L254

";

%feature("docstring")  casadi::nlpsol_n_in() "

[INTERNAL] 
Number of NLP solver inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1t2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L256

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L256-L258

";

%feature("docstring")  casadi::nlpsol_n_out() "

[INTERNAL] 
Number of NLP solver outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1t3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L260

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L260-L262

";

%feature("docstring")  casadi::nlpsol_options(const std::string &name) "

[INTERNAL] 
Get all options for a plugin.

Extra doc: https://github.com/casadi/casadi/wiki/L_1t5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L900

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L900-L902

";

%feature("docstring")  casadi::nlpsol_option_type(const std::string &name, 
const std::string &op) "

[INTERNAL] 
Get type info for a particular option.

Extra doc: https://github.com/casadi/casadi/wiki/L_1t6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L904

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L904-L906

";

%feature("docstring")  casadi::nlpsol_option_info(const std::string &name, 
const std::string &op) "

[INTERNAL] 
Get documentation for a particular option.

Extra doc: https://github.com/casadi/casadi/wiki/L_1t7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.hpp#L908

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/nlpsol.cpp#L908-L910

";

%feature("docstring")  casadi::rootfinder_in() "

[INTERNAL] 
Get rootfinder input scheme.

Extra doc: https://github.com/casadi/casadi/wiki/L_1ty

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L35

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L35-L39

";

%feature("docstring")  casadi::rootfinder_in(casadi_int ind) "

[INTERNAL] 
Get rootfinder input scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1u0

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L47

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L47-L54

";

%feature("docstring")  casadi::rootfinder_out() "

[INTERNAL] 
Get rootfinder output scheme.

Extra doc: https://github.com/casadi/casadi/wiki/L_1tz

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L41

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L41-L45

";

%feature("docstring")  casadi::rootfinder_out(casadi_int ind) "

[INTERNAL] 
Get rootfinder output scheme name by index.

Extra doc: https://github.com/casadi/casadi/wiki/L_1u1

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L56

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L56-L62

";

%feature("docstring")  casadi::rootfinder_n_in() "

[INTERNAL] 
Number of rootfinder inputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1u2

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L64

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L64-L66

";

%feature("docstring")  casadi::rootfinder_n_out() "

[INTERNAL] 
Number of rootfinder outputs.

Extra doc: https://github.com/casadi/casadi/wiki/L_1u3

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L68

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L68-L70

";

%feature("docstring")  casadi::rootfinder_options(const std::string &name) "

[INTERNAL] 
Get all options for a plugin.

Extra doc: https://github.com/casadi/casadi/wiki/L_1u4

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L72

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L72-L74

";

%feature("docstring")  casadi::rootfinder_option_type(const std::string 
&name, const std::string &op) "

[INTERNAL] 
Get type info for a particular option.

Extra doc: https://github.com/casadi/casadi/wiki/L_1u5

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L76

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L76-L78

";

%feature("docstring")  casadi::rootfinder_option_info(const std::string 
&name, const std::string &op) "

[INTERNAL] 
Get documentation for a particular option.

Extra doc: https://github.com/casadi/casadi/wiki/L_1u6

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L80

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L80-L82

";

%feature("docstring")  casadi::has_rootfinder(const std::string &name) "

[INTERNAL] 
Check if a particular plugin is available.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L84

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L84-L86

";

%feature("docstring")  casadi::load_rootfinder(const std::string &name) "

[INTERNAL] 
Explicitly load a plugin dynamically.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L88

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L88-L90

";

%feature("docstring")  casadi::doc_rootfinder(const std::string &name) "

[INTERNAL] 
Get the documentation string for a plugin.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L92

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L92-L94

";

%feature("docstring")  casadi::rootfinder(const std::string &name, const 
std::string &solver, const SXDict &rfp, const Dict &opts=Dict()) "

[INTERNAL]

Create a solver for rootfinding problems Takes a function where one 
of the 
inputs is unknown and one of the outputs is a residual function
 that is 
always zero, defines a new function where the the unknown 
input has been 
replaced by a  guess for the unknown and the residual output has been 
replaced by the 
calculated value for the input.

For a function [y0, y1, ...,yi, .., yn] = F(x0, x1, ..., xj, ..., xm),
 
where xj is unknown and yi=0, defines a new function [y0, y1, ...,xj,
 .., 
yn] = G(x0, x1, ..., xj_guess, ..., xm),

xj and yi must have the same dimension and d(yi)/d(xj) must be 
invertable.

By default, the first input is unknown and the first output is the 

residual.
General information

>List of available options

+------------------+-----------------+------------------+------------------+
|        Id        |      Type       |   Description    |     Used in      |
+==================+=================+==================+==================+
| ad_weight        | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for derivative   | Internal         |
|                  |                 | calculation.When |                  |
|                  |                 | there is an      |                  |
|                  |                 | option of either |                  |
|                  |                 | using forward or |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | directional      |                  |
|                  |                 | derivatives, the |                  |
|                  |                 | condition ad_wei |                  |
|                  |                 | ght*nf<=(1-      |                  |
|                  |                 | ad_weight)*na is |                  |
|                  |                 | used where nf    |                  |
|                  |                 | and na are       |                  |
|                  |                 | estimates of the |                  |
|                  |                 | number of        |                  |
|                  |                 | forward/reverse  |                  |
|                  |                 | mode directional |                  |
|                  |                 | derivatives      |                  |
|                  |                 | needed. By       |                  |
|                  |                 | default,         |                  |
|                  |                 | ad_weight is     |                  |
|                  |                 | calculated       |                  |
|                  |                 | automatically,   |                  |
|                  |                 | but this can be  |                  |
|                  |                 | overridden by    |                  |
|                  |                 | setting this     |                  |
|                  |                 | option. In       |                  |
|                  |                 | particular, 0    |                  |
|                  |                 | means forcing    |                  |
|                  |                 | forward mode and |                  |
|                  |                 | 1 forcing        |                  |
|                  |                 | reverse mode.    |                  |
|                  |                 | Leave unset for  |                  |
|                  |                 | (class specific) |                  |
|                  |                 | heuristics.      |                  |
+------------------+-----------------+------------------+------------------+
| ad_weight_sp     | OT_DOUBLE       | Weighting factor | casadi::Function |
|                  |                 | for sparsity     | Internal         |
|                  |                 | pattern          |                  |
|                  |                 | calculation calc |                  |
|                  |                 | ulation.Override |                  |
|                  |                 | s default        |                  |
|                  |                 | behavior. Set to |                  |
|                  |                 | 0 and 1 to force |                  |
|                  |                 | forward and      |                  |
|                  |                 | reverse mode     |                  |
|                  |                 | respectively.    |                  |
|                  |                 | Cf. option       |                  |
|                  |                 | \"ad_weight\".     |                  |
|                  |                 | When set to -1,  |                  |
|                  |                 | sparsity is      |                  |
|                  |                 | completely       |                  |
|                  |                 | ignored and      |                  |
|                  |                 | dense matrices   |                  |
|                  |                 | are used.        |                  |
+------------------+-----------------+------------------+------------------+
| always_inline    | OT_BOOL         | Force inlining.  | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| cache            | OT_DICT         | Prepopulate the  | casadi::Function |
|                  |                 | function cache.  | Internal         |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| common_options   | OT_DICT         | Options for      | casadi::OracleFu |
|                  |                 | auto-generated   | nction           |
|                  |                 | functions        |                  |
+------------------+-----------------+------------------+------------------+
| compiler         | OT_STRING       | Just-in-time     | casadi::Function |
|                  |                 | compiler plugin  | Internal         |
|                  |                 | to be used.      |                  |
+------------------+-----------------+------------------+------------------+
| constraints      | OT_INTVECTOR    | Constrain the    | casadi::Rootfind |
|                  |                 | unknowns. 0      | er               |
|                  |                 | (default): no    |                  |
|                  |                 | constraint on    |                  |
|                  |                 | ui, 1: ui >=     |                  |
|                  |                 | 0.0, -1: ui <=   |                  |
|                  |                 | 0.0, 2: ui >     |                  |
|                  |                 | 0.0, -2: ui <    |                  |
|                  |                 | 0.0.             |                  |
+------------------+-----------------+------------------+------------------+
| custom_jacobian  | OT_FUNCTION     | Override         | casadi::Function |
|                  |                 | CasADi's AD. Use | Internal         |
|                  |                 | together with    |                  |
|                  |                 | 'jac_penalty':   |                  |
|                  |                 | 0. Note: Highly  |                  |
|                  |                 | experimental.    |                  |
|                  |                 | Syntax may break |                  |
|                  |                 | often.           |                  |
+------------------+-----------------+------------------+------------------+
| der_options      | OT_DICT         | Default options  | casadi::Function |
|                  |                 | to be used to    | Internal         |
|                  |                 | populate         |                  |
|                  |                 | forward_options, |                  |
|                  |                 | reverse_options, |                  |
|                  |                 | and              |                  |
|                  |                 | jacobian_options |                  |
|                  |                 | before those     |                  |
|                  |                 | options are      |                  |
|                  |                 | merged in.       |                  |
+------------------+-----------------+------------------+------------------+
| derivative_of    | OT_FUNCTION     | The function is  | casadi::Function |
|                  |                 | a derivative of  | Internal         |
|                  |                 | another          |                  |
|                  |                 | function. The    |                  |
|                  |                 | type of          |                  |
|                  |                 | derivative       |                  |
|                  |                 | (directional     |                  |
|                  |                 | derivative,      |                  |
|                  |                 | Jacobian) is     |                  |
|                  |                 | inferred from    |                  |
|                  |                 | the function     |                  |
|                  |                 | name.            |                  |
+------------------+-----------------+------------------+------------------+
| dump             | OT_BOOL         | Dump function to | casadi::Function |
|                  |                 | file upon first  | Internal         |
|                  |                 | evaluation.      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| dump_dir         | OT_STRING       | Directory to     | casadi::Function |
|                  |                 | dump             | Internal         |
|                  |                 | inputs/outputs   |                  |
|                  |                 | to. Make sure    |                  |
|                  |                 | the directory    |                  |
|                  |                 | exists [.]       |                  |
+------------------+-----------------+------------------+------------------+
| dump_format      | OT_STRING       | Choose file      | casadi::Function |
|                  |                 | format to dump   | Internal         |
|                  |                 | matrices. See    |                  |
|                  |                 | DM.from_file     |                  |
|                  |                 | [mtx]            |                  |
+------------------+-----------------+------------------+------------------+
| dump_in          | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | to file          |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| dump_out         | OT_BOOL         | Dump numerical   | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs to file  |                  |
|                  |                 | (readable with   |                  |
|                  |                 | DM.from_file )   |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| enable_fd        | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation by   |                  |
|                  |                 | finite           |                  |
|                  |                 | differencing.    |                  |
|                  |                 | [default:        |                  |
|                  |                 | false]]          |                  |
+------------------+-----------------+------------------+------------------+
| enable_forward   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using forward    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_jacobian  | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | Jacobians of all |                  |
|                  |                 | differentiable   |                  |
|                  |                 | outputs with     |                  |
|                  |                 | respect to all   |                  |
|                  |                 | differentiable   |                  |
|                  |                 | inputs - if      |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| enable_reverse   | OT_BOOL         | Enable           | casadi::Function |
|                  |                 | derivative       | Internal         |
|                  |                 | calculation      |                  |
|                  |                 | using generated  |                  |
|                  |                 | functions for    |                  |
|                  |                 | transposed       |                  |
|                  |                 | Jacobian-times-  |                  |
|                  |                 | vector products  |                  |
|                  |                 | - typically      |                  |
|                  |                 | using reverse    |                  |
|                  |                 | mode AD - if     |                  |
|                  |                 | available.       |                  |
|                  |                 | [default: true]  |                  |
+------------------+-----------------+------------------+------------------+
| error_on_fail    | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when function    | ction            |
|                  |                 | evaluation fails |                  |
|                  |                 | (default true).  |                  |
+------------------+-----------------+------------------+------------------+
| expand           | OT_BOOL         | Replace MX with  | casadi::OracleFu |
|                  |                 | SX expressions   | nction           |
|                  |                 | in problem       |                  |
|                  |                 | formulation      |                  |
|                  |                 | [false]          |                  |
+------------------+-----------------+------------------+------------------+
| fd_method        | OT_STRING       | Method for       | casadi::Function |
|                  |                 | finite           | Internal         |
|                  |                 | differencing     |                  |
|                  |                 | [default         |                  |
|                  |                 | 'central']       |                  |
+------------------+-----------------+------------------+------------------+
| fd_options       | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | finite           |                  |
|                  |                 | difference       |                  |
|                  |                 | instance         |                  |
+------------------+-----------------+------------------+------------------+
| forward_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | forward mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| gather_stats     | OT_BOOL         | Deprecated       | casadi::Function |
|                  |                 | option           | Internal         |
|                  |                 | (ignored):       |                  |
|                  |                 | Statistics are   |                  |
|                  |                 | now always       |                  |
|                  |                 | collected.       |                  |
+------------------+-----------------+------------------+------------------+
| implicit_input   | OT_INT          | Index of the     | casadi::Rootfind |
|                  |                 | input that       | er               |
|                  |                 | corresponds to   |                  |
|                  |                 | the actual root- |                  |
|                  |                 | finding          |                  |
+------------------+-----------------+------------------+------------------+
| implicit_output  | OT_INT          | Index of the     | casadi::Rootfind |
|                  |                 | output that      | er               |
|                  |                 | corresponds to   |                  |
|                  |                 | the actual root- |                  |
|                  |                 | finding          |                  |
+------------------+-----------------+------------------+------------------+
| input_scheme     | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| inputs_check     | OT_BOOL         | Throw exceptions | casadi::Function |
|                  |                 | when the         | Internal         |
|                  |                 | numerical values |                  |
|                  |                 | of the inputs    |                  |
|                  |                 | don't make sense |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_in       | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each input if it | Internal         |
|                  |                 | should be        |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| is_diff_out      | OT_BOOLVECTOR   | Indicate for     | casadi::Function |
|                  |                 | each output if   | Internal         |
|                  |                 | it should be     |                  |
|                  |                 | differentiable.  |                  |
+------------------+-----------------+------------------+------------------+
| jac_penalty      | OT_DOUBLE       | When requested   | casadi::Function |
|                  |                 | for a number of  | Internal         |
|                  |                 | forward/reverse  |                  |
|                  |                 | directions, it   |                  |
|                  |                 | may be cheaper   |                  |
|                  |                 | to compute first |                  |
|                  |                 | the full         |                  |
|                  |                 | jacobian and     |                  |
|                  |                 | then multiply    |                  |
|                  |                 | with seeds,      |                  |
|                  |                 | rather than      |                  |
|                  |                 | obtain the       |                  |
|                  |                 | requested        |                  |
|                  |                 | directions in a  |                  |
|                  |                 | straightforward  |                  |
|                  |                 | manner. Casadi   |                  |
|                  |                 | uses a heuristic |                  |
|                  |                 | to decide which  |                  |
|                  |                 | is cheaper. A    |                  |
|                  |                 | high value of    |                  |
|                  |                 | 'jac_penalty'    |                  |
|                  |                 | makes it less    |                  |
|                  |                 | likely for the   |                  |
|                  |                 | heurstic to      |                  |
|                  |                 | chose the full   |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy. The    |                  |
|                  |                 | special value -1 |                  |
|                  |                 | indicates never  |                  |
|                  |                 | to use the full  |                  |
|                  |                 | Jacobian         |                  |
|                  |                 | strategy         |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_functio | OT_FUNCTION     | Function object  | casadi::Rootfind |
| n                |                 | for calculating  | er               |
|                  |                 | the Jacobian     |                  |
|                  |                 | (autogenerated   |                  |
|                  |                 | by default)      |                  |
+------------------+-----------------+------------------+------------------+
| jacobian_options | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | Jacobian         |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| jit              | OT_BOOL         | Use just-in-time | casadi::Function |
|                  |                 | compiler to      | Internal         |
|                  |                 | speed up the     |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| jit_cleanup      | OT_BOOL         | Cleanup up the   | casadi::Function |
|                  |                 | temporary source | Internal         |
|                  |                 | file that jit    |                  |
|                  |                 | creates.         |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| jit_name         | OT_STRING       | The file name    | casadi::Function |
|                  |                 | used to write    | Internal         |
|                  |                 | out code. The    |                  |
|                  |                 | actual file      |                  |
|                  |                 | names used       |                  |
|                  |                 | depend on 'jit_t |                  |
|                  |                 | emp_suffix' and  |                  |
|                  |                 | include          |                  |
|                  |                 | extensions.      |                  |
|                  |                 | Default:         |                  |
|                  |                 | 'jit_tmp'        |                  |
+------------------+-----------------+------------------+------------------+
| jit_options      | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to the    | Internal         |
|                  |                 | jit compiler.    |                  |
+------------------+-----------------+------------------+------------------+
| jit_serialize    | OT_STRING       | Specify          | casadi::Function |
|                  |                 | behaviour when   | Internal         |
|                  |                 | serializing a    |                  |
|                  |                 | jitted function: |                  |
|                  |                 | SOURCE|link|embe |                  |
|                  |                 | d.               |                  |
+------------------+-----------------+------------------+------------------+
| jit_temp_suffix  | OT_BOOL         | Use a temporary  | casadi::Function |
|                  |                 | (seemingly       | Internal         |
|                  |                 | random) filename |                  |
|                  |                 | suffix for       |                  |
|                  |                 | generated code   |                  |
|                  |                 | and libraries.   |                  |
|                  |                 | This is desired  |                  |
|                  |                 | for thread-      |                  |
|                  |                 | safety. This     |                  |
|                  |                 | behaviour may    |                  |
|                  |                 | defeat caching   |                  |
|                  |                 | compiler         |                  |
|                  |                 | wrappers.        |                  |
|                  |                 | Default: true    |                  |
+------------------+-----------------+------------------+------------------+
| linear_solver    | OT_STRING       | User-defined     | casadi::Rootfind |
|                  |                 | linear solver    | er               |
|                  |                 | class. Needed    |                  |
|                  |                 | for              |                  |
|                  |                 | sensitivities.   |                  |
+------------------+-----------------+------------------+------------------+
| linear_solver_op | OT_DICT         | Options to be    | casadi::Rootfind |
| tions            |                 | passed to the    | er               |
|                  |                 | linear solver.   |                  |
+------------------+-----------------+------------------+------------------+
| max_io           | OT_INT          | Acceptable       | casadi::Function |
|                  |                 | number of inputs | Internal         |
|                  |                 | and outputs.     |                  |
|                  |                 | Warn if          |                  |
|                  |                 | exceeded.        |                  |
+------------------+-----------------+------------------+------------------+
| max_num_dir      | OT_INT          | Specify the      | casadi::Function |
|                  |                 | maximum number   | Internal         |
|                  |                 | of directions    |                  |
|                  |                 | for derivative   |                  |
|                  |                 | functions.       |                  |
|                  |                 | Overrules the    |                  |
|                  |                 | builtin optimize |                  |
|                  |                 | d_num_dir.       |                  |
+------------------+-----------------+------------------+------------------+
| monitor          | OT_STRINGVECTOR | Set of user      | casadi::OracleFu |
|                  |                 | problem          | nction           |
|                  |                 | functions to be  |                  |
|                  |                 | monitored        |                  |
+------------------+-----------------+------------------+------------------+
| never_inline     | OT_BOOL         | Forbid inlining. | casadi::Function |
|                  |                 |                  | Internal         |
+------------------+-----------------+------------------+------------------+
| output_scheme    | OT_STRINGVECTOR | Deprecated       | casadi::Function |
|                  |                 | option (ignored) | Internal         |
+------------------+-----------------+------------------+------------------+
| post_expand      | OT_BOOL         | After            | casadi::Function |
|                  |                 | construction,    | Internal         |
|                  |                 | expand this      |                  |
|                  |                 | Function .       |                  |
|                  |                 | Default: False   |                  |
+------------------+-----------------+------------------+------------------+
| post_expand_opti | OT_DICT         | Options to be    | casadi::Function |
| ons              |                 | passed to post-  | Internal         |
|                  |                 | construction     |                  |
|                  |                 | expansion.       |                  |
|                  |                 | Default: empty   |                  |
+------------------+-----------------+------------------+------------------+
| print_in         | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of inputs | Internal         |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_out        | OT_BOOL         | Print numerical  | casadi::Function |
|                  |                 | values of        | Internal         |
|                  |                 | outputs          |                  |
|                  |                 | [default: false] |                  |
+------------------+-----------------+------------------+------------------+
| print_time       | OT_BOOL         | print            | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time. Implies    |                  |
|                  |                 | record_time.     |                  |
+------------------+-----------------+------------------+------------------+
| record_time      | OT_BOOL         | record           | casadi::ProtoFun |
|                  |                 | information      | ction            |
|                  |                 | about execution  |                  |
|                  |                 | time, for        |                  |
|                  |                 | retrieval with   |                  |
|                  |                 | stats().         |                  |
+------------------+-----------------+------------------+------------------+
| regularity_check | OT_BOOL         | Throw exceptions | casadi::ProtoFun |
|                  |                 | when NaN or Inf  | ction            |
|                  |                 | appears during   |                  |
|                  |                 | evaluation       |                  |
+------------------+-----------------+------------------+------------------+
| reverse_options  | OT_DICT         | Options to be    | casadi::Function |
|                  |                 | passed to a      | Internal         |
|                  |                 | reverse mode     |                  |
|                  |                 | constructor      |                  |
+------------------+-----------------+------------------+------------------+
| show_eval_warnin | OT_BOOL         | Show warnings    | casadi::OracleFu |
| gs               |                 | generated from   | nction           |
|                  |                 | function         |                  |
|                  |                 | evaluations      |                  |
|                  |                 | [true]           |                  |
+------------------+-----------------+------------------+------------------+
| specific_options | OT_DICT         | Options for      | casadi::OracleFu |
|                  |                 | specific auto-   | nction           |
|                  |                 | generated        |                  |
|                  |                 | functions,       |                  |
|                  |                 | overwriting the  |                  |
|                  |                 | defaults from    |                  |
|                  |                 | common_options.  |                  |
|                  |                 | Nested           |                  |
|                  |                 | dictionary.      |                  |
+------------------+-----------------+------------------+------------------+
| user_data        | OT_VOIDPTR      | A user-defined   | casadi::Function |
|                  |                 | field that can   | Internal         |
|                  |                 | be used to       |                  |
|                  |                 | identify the     |                  |
|                  |                 | function or pass |                  |
|                  |                 | additional       |                  |
|                  |                 | information      |                  |
+------------------+-----------------+------------------+------------------+
| verbose          | OT_BOOL         | Verbose          | casadi::ProtoFun |
|                  |                 | evaluation  for  | ction            |
|                  |                 | debugging        |                  |
+------------------+-----------------+------------------+------------------+

>Input scheme: casadi::RootfinderInput (ROOTFINDER_NUM_IN = 2)

+---------------+-------+---------------------------------+
|   Full name   | Short |           Description           |
+===============+=======+=================================+
| ROOTFINDER_X0 | x0    | Initial guess for the solution. |
+---------------+-------+---------------------------------+
| ROOTFINDER_P  | p     | Parameters.                     |
+---------------+-------+---------------------------------+

>Output scheme: casadi::RootfinderOutput (ROOTFINDER_NUM_OUT = 1)

+--------------+-------+--------------------------------------+
|  Full name   | Short |             Description              |
+==============+=======+======================================+
| ROOTFINDER_X | x     | Solution to the system of equations. |
+--------------+-------+--------------------------------------+

List of plugins
- kinsol

- fast_newton

- nlpsol

- newton

Note: some of the plugins in this list might not be available on your 

system.  Also, there might be extra plugins available to you that are 
not 
listed here. You can obtain their documentation with  
Rootfinder.doc(\"myextraplugin\")



--------------------------------------------------------------------------------

kinsol
------



KINSOL interface from the Sundials suite

Extra doc: https://github.com/casadi/casadi/wiki/L_226

>List of available options

+---------------------------+-----------------+----------------------------+
|            Id             |      Type       |        Description         |
+===========================+=================+============================+
| abstol                    | OT_DOUBLE       | Stopping criterion         |
|                           |                 | tolerance                  |
+---------------------------+-----------------+----------------------------+
| disable_internal_warnings | OT_BOOL         | Disable KINSOL internal    |
|                           |                 | warning messages           |
+---------------------------+-----------------+----------------------------+
| exact_jacobian            | OT_BOOL         | Use exact Jacobian         |
|                           |                 | information                |
+---------------------------+-----------------+----------------------------+
| f_scale                   | OT_DOUBLEVECTOR | Equation scaling factors   |
+---------------------------+-----------------+----------------------------+
| iterative_solver          | OT_STRING       | gmres|bcgstab|tfqmr        |
+---------------------------+-----------------+----------------------------+
| linear_solver_type        | OT_STRING       | dense|banded|iterative|use |
|                           |                 | r_defined                  |
+---------------------------+-----------------+----------------------------+
| lower_bandwidth           | OT_INT          | Lower bandwidth for banded |
|                           |                 | linear solvers             |
+---------------------------+-----------------+----------------------------+
| max_iter                  | OT_INT          | Maximum number of Newton   |
|                           |                 | iterations. Putting 0 sets |
|                           |                 | the default value of       |
|                           |                 | KinSol.                    |
+---------------------------+-----------------+----------------------------+
| max_krylov                | OT_INT          | Maximum Krylov space       |
|                           |                 | dimension                  |
+---------------------------+-----------------+----------------------------+
| pretype                   | OT_STRING       | Type of preconditioner     |
+---------------------------+-----------------+----------------------------+
| print_level               | OT_INT          | Verbosity level            |
+---------------------------+-----------------+----------------------------+
| strategy                  | OT_STRING       | Globalization strategy     |
+---------------------------+-----------------+----------------------------+
| u_scale                   | OT_DOUBLEVECTOR | Variable scaling factors   |
+---------------------------+-----------------+----------------------------+
| upper_bandwidth           | OT_INT          | Upper bandwidth for banded |
|                           |                 | linear solvers             |
+---------------------------+-----------------+----------------------------+
| use_preconditioner        | OT_BOOL         | Precondition an iterative  |
|                           |                 | solver                     |
+---------------------------+-----------------+----------------------------+



--------------------------------------------------------------------------------

fast_newton
-----------



Implements simple newton iterations to solve an implicit function.

Extra doc: https://github.com/casadi/casadi/wiki/L_237

>List of available options

+------------+-----------+-------------------------------------------------+
|     Id     |   Type    |                   Description                   |
+============+===========+=================================================+
| abstol     | OT_DOUBLE | Stopping criterion tolerance on ||g||__inf)     |
+------------+-----------+-------------------------------------------------+
| abstolStep | OT_DOUBLE | Stopping criterion tolerance on step size       |
+------------+-----------+-------------------------------------------------+
| max_iter   | OT_INT    | Maximum number of Newton iterations to perform  |
|            |           | before returning.                               |
+------------+-----------+-------------------------------------------------+



--------------------------------------------------------------------------------

nlpsol
------





--------------------------------------------------------------------------------

newton
------



Implements simple newton iterations to solve an implicit function.

Extra doc: https://github.com/casadi/casadi/wiki/L_236

>List of available options

+-----------------+-----------+--------------------------------------------+
|       Id        |   Type    |                Description                 |
+=================+===========+============================================+
| abstol          | OT_DOUBLE | Stopping criterion tolerance on max(|F|)   |
+-----------------+-----------+--------------------------------------------+
| abstolStep      | OT_DOUBLE | Stopping criterion tolerance on step size  |
+-----------------+-----------+--------------------------------------------+
| line_search     | OT_BOOL   | Enable line-search (default: true)         |
+-----------------+-----------+--------------------------------------------+
| max_iter        | OT_INT    | Maximum number of Newton iterations to     |
|                 |           | perform before returning.                  |
+-----------------+-----------+--------------------------------------------+
| print_iteration | OT_BOOL   | Print information about each iteration     |
+-----------------+-----------+--------------------------------------------+

Joel Andersson

Extra doc: https://github.com/casadi/casadi/wiki/L_21r

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.hpp#L96

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/rootfinder.cpp#L96-L99

";

%feature("docstring")  casadi::rootfinder(const std::string &name, const 
std::string &solver, const MXDict &rfp, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::rootfinder(const std::string &name, const 
std::string &solver, const Function &f, const Dict &opts) "

[INTERNAL] ";

%feature("docstring")  casadi::einstein_process(const T &A, const T &B, 
const T &C, const std::vector< casadi_int > &dim_a, const std::vector< 
casadi_int > &dim_b, const std::vector< casadi_int > &dim_c, const 
std::vector< casadi_int > &a, const std::vector< casadi_int > &b, const 
std::vector< casadi_int > &c, std::vector< casadi_int > &iter_dims, 
std::vector< casadi_int > &strides_a, std::vector< casadi_int > &strides_b, 
std::vector< casadi_int > &strides_c) "

[INTERNAL] ";

%feature("docstring")  casadi::Contraction(const T &a, const T &b, T &r) "

[INTERNAL] ";

%feature("docstring")  casadi::Contraction(const bvec_t &a, const bvec_t &b,
 bvec_t &r) "

[INTERNAL] ";

%feature("docstring")  casadi::einstein_eval(casadi_int n_iter, const 
std::vector< casadi_int > &iter_dims, const std::vector< casadi_int > 
&strides_a, const std::vector< casadi_int > &strides_b, const std::vector< 
casadi_int > &strides_c, const T *a_in, const T *b_in, T *c_in) "

[INTERNAL] ";

%feature("docstring")  casadi::shared_cast(SharedObject &A) "

[INTERNAL] 
Typecast a shared object to a base class to a shared object to a
 
derived class,.

cf. dynamic_cast

Extra doc: https://github.com/casadi/casadi/wiki/L_b6

Get a pointer to the node

Create a return object

Quick return if not allowed

Assign node of B and return
Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L237

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L237-L251

";

%feature("docstring")  casadi::shared_cast(const SharedObject &A) "

[INTERNAL] 
Typecast a shared object to a base class to a shared object to a
 
derived class,.

cf. dynamic_cast (const)

Extra doc: https://github.com/casadi/casadi/wiki/L_b7

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L259

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/shared_object.hpp#L259-L262

";

%feature("docstring")  casadi::is_slice2(const std::vector< casadi_int > &v)
 "

[INTERNAL] 
Check if an index vector can be represented more efficiently as 
two 
nested slices.

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L202

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L202-L253

";

%feature("docstring")  casadi::to_slice2(const std::vector< casadi_int > &v)
 "

[INTERNAL] 
Construct nested slices from an index vector (requires 
is_slice2(v) to
 be true)

Doc source: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.hpp#L255

Implementation: 
https://github.com/casadi/casadi/blob/develop/casadi/core/slice.cpp#L255-L289

";

%feature("docstring")  casadi::matrixName< SXElem >() "

[INTERNAL] ";

%feature("docstring")  casadi::slicot_mb03vd(int n, int p, int ilo, int ihi,
 double *a, int lda1, int lda2, double *tau, int ldtau, double *dwork) "

[INTERNAL] ";

%feature("docstring")  casadi::slicot_mb03vy(int n, int p, int ilo, int ihi,
 double *a, int lda1, int lda2, const double *tau, int ldtau, double *dwork,
 int ldwork) "

[INTERNAL] ";

%feature("docstring")  casadi::slicot_mb03wd(char job, char compz, int n, 
int p, int ilo, int ihi, int iloz, int ihiz, double *h, int ldh1, int ldh2, 
double *z, int ldz1, int ldz2, double *wr, double *wi, double *dwork, int 
ldwork) "

[INTERNAL] ";

%feature("docstring")  casadi::slicot_mb05nd(int n, double delta, const 
double *a, int lda, double *ex, int ldex, double *exint, int ldexin, double 
tol, int *iwork, double *dwork, int ldwork) "

[INTERNAL] ";


// File: namespacecasadi_1_1IndexRecution.xml


// File: namespaceproxsuite_1_1proxqp.xml


// File: namespacestd.xml
%feature("docstring")  std::mul_overflows(const T &a, const T &b) "
[INTERNAL] ";


// File: namespacestd_1_1chrono.xml


// File: chapter1.xml


// File: chapter2.xml


// File: chapter3.xml


// File: chapter4.xml


// File: chapter5.xml


// File: chapter6.xml

