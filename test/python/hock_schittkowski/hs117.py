# This is an automatically generated file converting from the apm format
import casadi as cs


def hs117():
    # The optimal objective is (if given in):
    f_opt = 32.34867897
    x_opt = cs.DM([0, 0, 5.17404, 0, 3.06111, 11.8395, 0, 0, 0.103896, 0, 0.3, 0.333468, 0.4, 0.42831, 0.223965])
    x = cs.MX.sym('x', 15)
    obj1 = cs.MX.zeros(10, 1)
    obj2 = cs.MX.zeros(5, 5)
    obj3 = cs.MX.zeros(5, 1)
    x0 = cs.DM.zeros(15, 1)
    lbx = -cs.inf*cs.DM.ones(15, 1)
    ubx = cs.inf*cs.DM.ones(15, 1)
    a = cs.DM.zeros(10, 5)
    b = cs.DM.zeros(10, 1)
    c = cs.DM.zeros(5, 5)
    d = cs.DM.zeros(5, 1)
    e = cs.DM.zeros(5, 1)
    sum1 = cs.MX.zeros(5, 5)
    sum2 = cs.MX.zeros(5, 10)

    g = cs.MX.zeros(5, 1)
    lbg = -cs.inf*cs.DM.ones(5, 1)
    ubg = cs.inf*cs.DM.ones(5, 1)

    a[0, 0] = -16
    a[0, 1] = 2
    a[0, 2] = 0
    a[0, 3] = 1
    a[0, 4] = 0
    a[1, 0] = 0
    a[1, 1] = -2
    a[1, 2] = 0
    a[1, 3] = 4
    a[1, 4] = 2
    a[2, 0] = -3.5
    a[2, 1] = 0
    a[2, 2] = 2
    a[2, 3] = 0
    a[2, 4] = 0
    a[3, 0] = 0
    a[3, 1] = -2
    a[3, 2] = 0
    a[3, 3] = -4
    a[3, 4] = -1
    a[4, 0] = 0
    a[4, 1] = -9
    a[4, 2] = -2
    a[4, 3] = 1
    a[4, 4] = -2.8
    a[5, 0] = 2
    a[5, 1] = 0
    a[5, 2] = -4
    a[5, 3] = 0
    a[5, 4] = 0
    a[6, 0] = -1
    a[6, 1] = -1
    a[6, 2] = -1
    a[6, 3] = -1
    a[6, 4] = -1
    a[7, 0] = -1
    a[7, 1] = -2
    a[7, 2] = -3
    a[7, 3] = -2
    a[7, 4] = -1
    a[8, 0] = 1
    a[8, 1] = 2
    a[8, 2] = 3
    a[8, 3] = 4
    a[8, 4] = 5
    a[9, 0] = 1
    a[9, 1] = 1
    a[9, 2] = 1
    a[9, 3] = 1
    a[9, 4] = 1
    b[0] = -40
    b[1] = -2
    b[2] = -0.25
    b[3] = -4
    b[4] = -4
    b[5] = -1
    b[6] = -40
    b[7] = -60
    b[8] = 5
    b[9] = 1
    c[0, 0] = 30
    c[0, 1] = -20
    c[0, 2] = -10
    c[0, 3] = 32
    c[0, 4] = -10
    c[1, 0] = -20
    c[1, 1] = 39
    c[1, 2] = -6
    c[1, 3] = -31
    c[1, 4] = 32
    c[2, 0] = -10
    c[2, 1] = -6
    c[2, 2] = 10
    c[2, 3] = -6
    c[2, 4] = -10
    c[3, 0] = 32
    c[3, 1] = -31
    c[3, 2] = -6
    c[3, 3] = 39
    c[3, 4] = -20
    c[4, 0] = -10
    c[4, 1] = 32
    c[4, 2] = -10
    c[4, 3] = -20
    c[4, 4] = 30
    d[0] = 4
    d[1] = 8
    d[2] = 10
    d[3] = 6
    d[4] = 2
    e[0] = -15
    e[1] = -27
    e[2] = -36
    e[3] = -18
    e[4] = -12

    x0[0:6] = 0.001
    lbx[0:15] = 0
    x0[6] = 60
    x0[7:15] = 0.001

    sum1[0, 0:5] = 2*c[0:5, 0].T * x[10:15].T
    sum1[1, 0:5] = 2*c[0:5, 1].T * x[10:15].T
    sum1[2, 0:5] = 2*c[0:5, 2].T * x[10:15].T
    sum1[3, 0:5] = 2*c[0:5, 3].T * x[10:15].T
    sum1[4, 0:5] = 2*c[0:5, 4].T * x[10:15].T

    sum2[0, 0:10] = a[0:10, 0].T*x[0:10].T
    sum2[1, 0:10] = a[0:10, 1].T*x[0:10].T
    sum2[2, 0:10] = a[0:10, 2].T*x[0:10].T
    sum2[3, 0:10] = a[0:10, 3].T*x[0:10].T
    sum2[4, 0:10] = a[0:10, 4].T*x[0:10].T

    obj2[0, 0:5] = c[0:5, 0].T*x[10:15].T*x[10]
    obj2[1, 0:5] = c[0:5, 1].T*x[10:15].T*x[11]
    obj2[2, 0:5] = c[0:5, 2].T*x[10:15].T*x[12]
    obj2[3, 0:5] = c[0:5, 3].T*x[10:15].T*x[13]
    obj2[4, 0:5] = c[0:5, 4].T*x[10:15].T*x[14]

    lbg[0:5] = 0
    g[0:5] = cs.sum2(sum1) + 3*d[0:5] * x[10:15]**2 + e[0:5] - cs.sum2(sum2)

    obj1[0:10] = -b[0:10] * x[0:10]
    obj3[0:5] = 2*d[0:5]*x[10:15]**3

    f = cs.sum1(obj1) + cs.sum1(cs.sum2(obj2)) + cs.sum1(obj3)

    return (x_opt, f_opt, x, f, g, lbg, ubg, lbx, ubx, x0)
